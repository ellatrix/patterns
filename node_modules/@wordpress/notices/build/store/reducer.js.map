{"version":3,"sources":["@wordpress/notices/src/store/reducer.js"],"names":["notices","state","action","type","filter","id","notice"],"mappings":";;;;;;;;;AAGA;;AAHA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,OAAO,GAAG,uBAAU,SAAV,EAAuB,YAA0B;AAAA,MAAxBC,KAAwB,uEAAhB,EAAgB;AAAA,MAAZC,MAAY;;AAChE,UAASA,MAAM,CAACC,IAAhB;AACC,SAAK,eAAL;AACC;AACA,aAAO,CACN,GAAGF,KAAK,CAACG,MAAN,CAAc;AAAA,YAAE;AAAEC,UAAAA;AAAF,SAAF;AAAA,eAAcA,EAAE,KAAKH,MAAM,CAACI,MAAP,CAAcD,EAAnC;AAAA,OAAd,CADG,EAENH,MAAM,CAACI,MAFD,CAAP;;AAKD,SAAK,eAAL;AACC,aAAOL,KAAK,CAACG,MAAN,CAAc;AAAA,YAAE;AAAEC,UAAAA;AAAF,SAAF;AAAA,eAAcA,EAAE,KAAKH,MAAM,CAACG,EAA5B;AAAA,OAAd,CAAP;AATF;;AAYA,SAAOJ,KAAP;AACA,CAde,CAAhB;eAgBeD,O","sourcesContent":["/**\n * Internal dependencies\n */\nimport onSubKey from './utils/on-sub-key';\n\n/**\n * Reducer returning the next notices state. The notices state is an object\n * where each key is a context, its value an array of notice objects.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nconst notices = onSubKey( 'context' )( ( state = [], action ) => {\n\tswitch ( action.type ) {\n\t\tcase 'CREATE_NOTICE':\n\t\t\t// Avoid duplicates on ID.\n\t\t\treturn [\n\t\t\t\t...state.filter( ( { id } ) => id !== action.notice.id ),\n\t\t\t\taction.notice,\n\t\t\t];\n\n\t\tcase 'REMOVE_NOTICE':\n\t\t\treturn state.filter( ( { id } ) => id !== action.id );\n\t}\n\n\treturn state;\n} );\n\nexport default notices;\n"]}