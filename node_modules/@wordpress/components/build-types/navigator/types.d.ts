/**
 * External dependencies
 */
import type { ReactNode } from 'react';
/**
 * Internal dependencies
 */
import type { ButtonAsButtonProps } from '../button/types';
export declare type MatchParams = Record<string, string | string[]>;
declare type NavigateOptions = {
    focusTargetSelector?: string;
    isBack?: boolean;
};
export declare type NavigatorLocation = NavigateOptions & {
    isInitial?: boolean;
    path?: string;
    hasRestoredFocus?: boolean;
};
export declare type Navigator = {
    location: NavigatorLocation;
    params: MatchParams;
    goTo: (path: string, options?: NavigateOptions) => void;
    goBack: () => void;
    goToParent: () => void;
};
export declare type NavigatorContext = Navigator & {
    addScreen: (screen: Screen) => void;
    removeScreen: (screen: Screen) => void;
    match?: string;
};
export declare type NavigatorProviderProps = {
    /**
     * The initial active path.
     */
    initialPath: string;
    /**
     * The children elements.
     */
    children: ReactNode;
};
export declare type NavigatorScreenProps = {
    /**
     * The screen's path, matched against the current path stored in the navigator.
     */
    path: string;
    /**
     * The children elements.
     */
    children: ReactNode;
};
export declare type NavigatorBackButtonProps = ButtonAsButtonProps;
export declare type NavigatorBackButtonHookProps = NavigatorBackButtonProps & {
    /**
     * Whether we should navigate to the parent screen.
     *
     * @default 'false'
     */
    goToParent?: boolean;
};
export declare type NavigatorToParentButtonProps = NavigatorBackButtonProps;
export declare type NavigatorButtonProps = NavigatorBackButtonProps & {
    /**
     * The path of the screen to navigate to. The value of this prop needs to be
     * a valid value for an HTML attribute.
     */
    path: string;
    /**
     * The HTML attribute used to identify the `NavigatorButton`, which is used
     * by `Navigator` to restore focus.
     *
     * @default 'id'
     */
    attributeName?: string;
};
export declare type Screen = {
    id: string;
    path: string;
};
export {};
//# sourceMappingURL=types.d.ts.map