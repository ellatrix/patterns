{"version":3,"sources":["@wordpress/components/src/mobile/keyboard-aware-flat-list/index.ios.js"],"names":["List","FlatList","fastDeepEqual","AnimatedKeyboardAwareScrollView","Animated","createAnimatedComponent","KeyboardAwareScrollView","KeyboardAwareFlatList","extraScrollHeight","shouldPreventAutomaticScroll","innerRef","autoScroll","scrollViewStyle","inputAccessoryViewHeight","onScroll","listProps","scrollViewRef","keyboardWillShowIndicator","latestContentOffsetY","scrollHandler","event","contentOffset","value","y","getRef","ref","current","onKeyboardWillHide","onKeyboardDidHide","setTimeout","scrollToPosition","onKeyboardWillShow","flex","undefined","scrollEnabled","handleCaretVerticalPositionChange","scrollView","targetId","caretY","previousCaretY","refreshScrollForField"],"mappings":";;;;;;;;;AAcA;;AAXA;;AACA;;AACA;;AACA;;;;;;AANA;AACA;AACA;;AASA;AACA;AACA;AAGA,MAAMA,IAAI,GAAG,mBAAMC,qBAAN,EAAgBC,WAAhB,CAAb;;AACA,MAAMC,+BAA+B,GAAGC,+BAASC,uBAAT,CACvCC,2DADuC,CAAxC;;AAIO,MAAMC,qBAAqB,GAAG,QAS9B;AAAA,MATgC;AACtCC,IAAAA,iBADsC;AAEtCC,IAAAA,4BAFsC;AAGtCC,IAAAA,QAHsC;AAItCC,IAAAA,UAJsC;AAKtCC,IAAAA,eALsC;AAMtCC,IAAAA,wBANsC;AAOtCC,IAAAA,QAPsC;AAQtC,OAAGC;AARmC,GAShC;AACN,QAAMC,aAAa,GAAG,sBAAtB;AACA,QAAMC,yBAAyB,GAAG,sBAAlC;AAEA,QAAMC,oBAAoB,GAAG,2CAAgB,CAAC,CAAjB,CAA7B;AAEA,QAAMC,aAAa,GAAG,qDAA0B;AAC/CL,IAAAA,QAAQ,EAAIM,KAAF,IAAa;AACtB,YAAM;AAAEC,QAAAA;AAAF,UAAoBD,KAA1B;AACAF,MAAAA,oBAAoB,CAACI,KAArB,GAA6BD,aAAa,CAACE,CAA3C;AACAT,MAAAA,QAAQ,CAAEM,KAAF,CAAR;AACA;AAL8C,GAA1B,CAAtB;AAQA,QAAMI,MAAM,GAAG,0BACZC,GAAF,IAAW;AACVT,IAAAA,aAAa,CAACU,OAAd,GAAwBD,GAAxB;AACAf,IAAAA,QAAQ,CAAEe,GAAF,CAAR;AACA,GAJa,EAKd,CAAEf,QAAF,CALc,CAAf;AAOA,QAAMiB,kBAAkB,GAAG,0BAAa,MAAM;AAC7CV,IAAAA,yBAAyB,CAACS,OAA1B,GAAoC,KAApC;AACA,GAF0B,EAExB,EAFwB,CAA3B;AAGA,QAAME,iBAAiB,GAAG,0BAAa,MAAM;AAC5CC,IAAAA,UAAU,CAAE,MAAM;AACjB,UACC,CAAEZ,yBAAyB,CAACS,OAA5B,IACAR,oBAAoB,CAACI,KAArB,KAA+B,CAAC,CADhC,IAEA,CAAEb,4BAA4B,EAH/B,EAIE;AAAA;;AACD;AACA,iCAAAO,aAAa,CAACU,OAAd,gFAAuBI,gBAAvB,CACC,CADD,EAECZ,oBAAoB,CAACI,KAFtB,EAGC,IAHD;AAKA;AACD,KAbS,EAaP,EAbO,CAAV;AAcA,GAfyB,EAevB,CAAEJ,oBAAF,EAAwBT,4BAAxB,CAfuB,CAA1B;AAgBA,QAAMsB,kBAAkB,GAAG,0BAAa,MAAM;AAC7Cd,IAAAA,yBAAyB,CAACS,OAA1B,GAAoC,IAApC;AACA,GAF0B,EAExB,EAFwB,CAA3B;AAIA,SACC,4BAAC,+BAAD;AACC,IAAA,KAAK,EAAG,CAAE;AAAEM,MAAAA,IAAI,EAAE;AAAR,KAAF,EAAepB,eAAf,CADT;AAEC,IAAA,mBAAmB,EAAC,MAFrB;AAGC,IAAA,yBAAyB,EAAG,KAH7B;AAIC,IAAA,yBAAyB,EAAC,SAJ3B;AAKC,IAAA,iBAAiB,EAAGJ,iBALrB;AAMC,IAAA,WAAW,EAAG,CANf;AAOC,IAAA,wBAAwB,EAAGK,wBAP5B;AAQC,IAAA,qBAAqB,EACpBF,UAAU,KAAKsB,SAAf,GAA2B,KAA3B,GAAmCtB,UATrC;AAWC,IAAA,GAAG,EAAGa,MAXP;AAYC,IAAA,kBAAkB,EAAGG,kBAZtB;AAaC,IAAA,iBAAiB,EAAGC,iBAbrB;AAcC,IAAA,kBAAkB,EAAGG,kBAdtB;AAeC,IAAA,aAAa,EAAGhB,SAAS,CAACmB,aAf3B;AAgBC,IAAA,QAAQ,EAAGf;AAhBZ,KAkBC,4BAAC,IAAD,EAAWJ,SAAX,CAlBD,CADD;AAsBA,CA3EM;;;;AA6EPR,qBAAqB,CAAC4B,iCAAtB,GAA0D,CACzDC,UADyD,EAEzDC,QAFyD,EAGzDC,MAHyD,EAIzDC,cAJyD,KAKrD;AACJ,MAAKA,cAAL,EAAsB;AACrB;AACAH,IAAAA,UAAU,CAACI,qBAAX,CAAkCH,QAAlC;AACA;AACD,CAVD;;eAYe9B,qB","sourcesContent":["/**\n * External dependencies\n */\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { FlatList } from 'react-native';\nimport fastDeepEqual from 'fast-deep-equal/es6';\nimport Animated, {\n\tuseAnimatedScrollHandler,\n\tuseSharedValue,\n} from 'react-native-reanimated';\n\n/**\n * WordPress dependencies\n */\nimport { memo, useCallback, useRef } from '@wordpress/element';\n\nconst List = memo( FlatList, fastDeepEqual );\nconst AnimatedKeyboardAwareScrollView = Animated.createAnimatedComponent(\n\tKeyboardAwareScrollView\n);\n\nexport const KeyboardAwareFlatList = ( {\n\textraScrollHeight,\n\tshouldPreventAutomaticScroll,\n\tinnerRef,\n\tautoScroll,\n\tscrollViewStyle,\n\tinputAccessoryViewHeight,\n\tonScroll,\n\t...listProps\n} ) => {\n\tconst scrollViewRef = useRef();\n\tconst keyboardWillShowIndicator = useRef();\n\n\tconst latestContentOffsetY = useSharedValue( -1 );\n\n\tconst scrollHandler = useAnimatedScrollHandler( {\n\t\tonScroll: ( event ) => {\n\t\t\tconst { contentOffset } = event;\n\t\t\tlatestContentOffsetY.value = contentOffset.y;\n\t\t\tonScroll( event );\n\t\t},\n\t} );\n\n\tconst getRef = useCallback(\n\t\t( ref ) => {\n\t\t\tscrollViewRef.current = ref;\n\t\t\tinnerRef( ref );\n\t\t},\n\t\t[ innerRef ]\n\t);\n\tconst onKeyboardWillHide = useCallback( () => {\n\t\tkeyboardWillShowIndicator.current = false;\n\t}, [] );\n\tconst onKeyboardDidHide = useCallback( () => {\n\t\tsetTimeout( () => {\n\t\t\tif (\n\t\t\t\t! keyboardWillShowIndicator.current &&\n\t\t\t\tlatestContentOffsetY.value !== -1 &&\n\t\t\t\t! shouldPreventAutomaticScroll()\n\t\t\t) {\n\t\t\t\t// Reset the content position if keyboard is still closed.\n\t\t\t\tscrollViewRef.current?.scrollToPosition(\n\t\t\t\t\t0,\n\t\t\t\t\tlatestContentOffsetY.value,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t}, 50 );\n\t}, [ latestContentOffsetY, shouldPreventAutomaticScroll ] );\n\tconst onKeyboardWillShow = useCallback( () => {\n\t\tkeyboardWillShowIndicator.current = true;\n\t}, [] );\n\n\treturn (\n\t\t<AnimatedKeyboardAwareScrollView\n\t\t\tstyle={ [ { flex: 1 }, scrollViewStyle ] }\n\t\t\tkeyboardDismissMode=\"none\"\n\t\t\tenableResetScrollToCoords={ false }\n\t\t\tkeyboardShouldPersistTaps=\"handled\"\n\t\t\textraScrollHeight={ extraScrollHeight }\n\t\t\textraHeight={ 0 }\n\t\t\tinputAccessoryViewHeight={ inputAccessoryViewHeight }\n\t\t\tenableAutomaticScroll={\n\t\t\t\tautoScroll === undefined ? false : autoScroll\n\t\t\t}\n\t\t\tref={ getRef }\n\t\t\tonKeyboardWillHide={ onKeyboardWillHide }\n\t\t\tonKeyboardDidHide={ onKeyboardDidHide }\n\t\t\tonKeyboardWillShow={ onKeyboardWillShow }\n\t\t\tscrollEnabled={ listProps.scrollEnabled }\n\t\t\tonScroll={ scrollHandler }\n\t\t>\n\t\t\t<List { ...listProps } />\n\t\t</AnimatedKeyboardAwareScrollView>\n\t);\n};\n\nKeyboardAwareFlatList.handleCaretVerticalPositionChange = (\n\tscrollView,\n\ttargetId,\n\tcaretY,\n\tpreviousCaretY\n) => {\n\tif ( previousCaretY ) {\n\t\t// If this is not the first tap.\n\t\tscrollView.refreshScrollForField( targetId );\n\t}\n};\n\nexport default KeyboardAwareFlatList;\n"]}