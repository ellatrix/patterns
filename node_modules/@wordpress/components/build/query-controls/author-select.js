"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = AuthorSelect;

var _element = require("@wordpress/element");

var _terms = require("./terms");

var _treeSelect = _interopRequireDefault(require("../tree-select"));

/**
 * Internal dependencies
 */
function AuthorSelect(_ref) {
  let {
    label,
    noOptionLabel,
    authorList,
    selectedAuthorId,
    onChange: onChangeProp
  } = _ref;
  if (!authorList) return null;
  const termsTree = (0, _terms.buildTermsTree)(authorList);
  return (0, _element.createElement)(_treeSelect.default, {
    label,
    noOptionLabel,
    // Since the `multiple` attribute is not passed to `TreeSelect`, it is
    // safe to assume that the argument of `onChange` cannot be `string[]`.
    // The correct solution would be to type `SelectControl` better, so that
    // the type of `value` and `onChange` vary depending on `multiple`.
    onChange: onChangeProp,
    tree: termsTree,
    selectedId: selectedAuthorId !== undefined ? String(selectedAuthorId) : undefined
  });
}
//# sourceMappingURL=author-select.js.map