{"version":3,"sources":["@wordpress/block-library/src/comments/edit/comments-legacy.js"],"names":["CommentsLegacy","attributes","setAttributes","context","postType","postId","textAlign","actions","legacy","blockProps","className","nextAlign"],"mappings":";;;;;;;;;;;AAGA;;AAKA;;AAMA;;AACA;;AAKA;;AApBA;AACA;AACA;;AAGA;AACA;AACA;;AAUA;AACA;AACA;AAGe,SAASA,cAAT,OAIX;AAAA,MAJoC;AACvCC,IAAAA,UADuC;AAEvCC,IAAAA,aAFuC;AAGvCC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ;AAH8B,GAIpC;AACH,QAAM;AAAEC,IAAAA;AAAF,MAAgBL,UAAtB;AAEA,QAAMM,OAAO,GAAG,CACf,4BAAC,kBAAD;AACC,IAAA,GAAG,EAAC,SADL;AAEC,IAAA,OAAO,EAAG,MAAM,KAAKL,aAAa,CAAE;AAAEM,MAAAA,MAAM,EAAE;AAAV,KAAF,CAFnC;AAGC,IAAA,OAAO,EAAC;AAHT,KAKG,cAAI,yBAAJ,CALH,CADe,CAAhB;AAUA,QAAMC,UAAU,GAAG,gCAAe;AACjCC,IAAAA,SAAS,EAAE,yBAAY;AACtB,OAAG,kBAAkBJ,SAAW,EAAhC,GAAqCA;AADf,KAAZ;AADsB,GAAf,CAAnB;AAMA,SACC,qDACC,4BAAC,0BAAD;AAAe,IAAA,KAAK,EAAC;AAArB,KACC,4BAAC,6BAAD;AACC,IAAA,KAAK,EAAGA,SADT;AAEC,IAAA,QAAQ,EAAKK,SAAF,IAAiB;AAC3BT,MAAAA,aAAa,CAAE;AAAEI,QAAAA,SAAS,EAAEK;AAAb,OAAF,CAAb;AACA;AAJF,IADD,CADD,EAUC,mCAAUF,UAAV,EACC,4BAAC,oBAAD;AAAS,IAAA,OAAO,EAAGF;AAAnB,KACG,cACD,6EACC,sFADD,GAEC,8DAFD,GAGC,wCAJA,CADH,CADD,EASC,4BAAC,oBAAD;AAAa,IAAA,MAAM,EAAGF,MAAtB;AAA+B,IAAA,QAAQ,EAAGD;AAA1C,IATD,CAVD,CADD;AAwBA","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tAlignmentControl,\n\tBlockControls,\n\tWarning,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\nimport { Button } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport Placeholder from './placeholder';\n\nexport default function CommentsLegacy( {\n\tattributes,\n\tsetAttributes,\n\tcontext: { postType, postId },\n} ) {\n\tconst { textAlign } = attributes;\n\n\tconst actions = [\n\t\t<Button\n\t\t\tkey=\"convert\"\n\t\t\tonClick={ () => void setAttributes( { legacy: false } ) }\n\t\t\tvariant=\"primary\"\n\t\t>\n\t\t\t{ __( 'Switch to editable mode' ) }\n\t\t</Button>,\n\t];\n\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t} ),\n\t} );\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<AlignmentControl\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\n\t\t\t<div { ...blockProps }>\n\t\t\t\t<Warning actions={ actions }>\n\t\t\t\t\t{ __(\n\t\t\t\t\t\t'Comments block: Youâ€™re currently using the legacy version of the block. ' +\n\t\t\t\t\t\t\t'The following is just a placeholder - the final styling will likely look different. ' +\n\t\t\t\t\t\t\t'For a better representation and more customization options, ' +\n\t\t\t\t\t\t\t'switch the block to its editable mode.'\n\t\t\t\t\t) }\n\t\t\t\t</Warning>\n\t\t\t\t<Placeholder postId={ postId } postType={ postType } />\n\t\t\t</div>\n\t\t</>\n\t);\n}\n"]}