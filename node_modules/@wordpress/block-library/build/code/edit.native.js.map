{"version":3,"sources":["@wordpress/block-library/src/code/edit.native.js"],"names":["CodeEdit","props","attributes","setAttributes","onFocus","onBlur","style","codeStyle","styles","blockCode","blockCodeDark","fontSize","placeholderStyle","placeholder","placeholderDark","content","isSelected","color"],"mappings":";;;;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AASA;;AAnBA;AACA;AACA;;AAGA;AACA;AACA;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AAGA;AACA;AACO,SAASA,QAAT,CAAmBC,KAAnB,EAA2B;AACjC,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,aAAd;AAA6BC,IAAAA,OAA7B;AAAsCC,IAAAA,MAAtC;AAA8CC,IAAAA;AAA9C,MAAwDL,KAA9D;AACA,QAAMM,SAAS,GAAG,EACjB,GAAG,2CACFC,eAAOC,SADL,EAEFD,eAAOE,aAFL,CADc;AAKjB,QAAK,CAAAJ,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEK,QAAP,KAAmB;AAAEA,MAAAA,QAAQ,EAAEL,KAAK,CAACK;AAAlB,KAAxB;AALiB,GAAlB;AAQA,QAAMC,gBAAgB,GAAG,2CACxBJ,eAAOK,WADiB,EAExBL,eAAOM,eAFiB,CAAzB;AAKA,SACC,4BAAC,iBAAD,QACC,4BAAC,sBAAD;AACC,IAAA,KAAK,EAAGZ,UAAU,CAACa,OADpB;AAEC,IAAA,KAAK,EAAGR,SAFT;AAGC,IAAA,SAAS,EAAG,IAHb;AAIC,IAAA,qBAAqB,EAAC,aAJvB;AAKC,IAAA,QAAQ,EAAKQ,OAAF,IAAeZ,aAAa,CAAE;AAAEY,MAAAA;AAAF,KAAF,CALxC;AAMC,IAAA,WAAW,EAAG,cAAI,aAAJ,CANf;AAOC,kBAAa,cAAI,MAAJ,CAPd;AAQC,IAAA,UAAU,EAAGd,KAAK,CAACe,UARpB;AASC,IAAA,OAAO,EAAGZ,OATX;AAUC,IAAA,MAAM,EAAGC,MAVV;AAWC,IAAA,oBAAoB,EAAGO,gBAAgB,CAACK;AAXzC,IADD,CADD;AAiBA;;eAEcjB,Q","sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { PlainText } from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\nimport { usePreferredColorSchemeStyle } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\n\n/**\n * Block code style\n */\nimport styles from './theme.scss';\n\n// Note: styling is applied directly to the (nested) PlainText component. Web-side components\n// apply it to the container 'div' but we don't have a proper proposal for cascading styling yet.\nexport function CodeEdit( props ) {\n\tconst { attributes, setAttributes, onFocus, onBlur, style } = props;\n\tconst codeStyle = {\n\t\t...usePreferredColorSchemeStyle(\n\t\t\tstyles.blockCode,\n\t\t\tstyles.blockCodeDark\n\t\t),\n\t\t...( style?.fontSize && { fontSize: style.fontSize } ),\n\t};\n\n\tconst placeholderStyle = usePreferredColorSchemeStyle(\n\t\tstyles.placeholder,\n\t\tstyles.placeholderDark\n\t);\n\n\treturn (\n\t\t<View>\n\t\t\t<PlainText\n\t\t\t\tvalue={ attributes.content }\n\t\t\t\tstyle={ codeStyle }\n\t\t\t\tmultiline={ true }\n\t\t\t\tunderlineColorAndroid=\"transparent\"\n\t\t\t\tonChange={ ( content ) => setAttributes( { content } ) }\n\t\t\t\tplaceholder={ __( 'Write codeâ€¦' ) }\n\t\t\t\taria-label={ __( 'Code' ) }\n\t\t\t\tisSelected={ props.isSelected }\n\t\t\t\tonFocus={ onFocus }\n\t\t\t\tonBlur={ onBlur }\n\t\t\t\tplaceholderTextColor={ placeholderStyle.color }\n\t\t\t/>\n\t\t</View>\n\t);\n}\n\nexport default CodeEdit;\n"]}