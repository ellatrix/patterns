{"version":3,"sources":["@wordpress/block-library/src/spacer/controls.native.js"],"names":["DEFAULT_VALUES","px","em","rem","vw","vh","Controls","attributes","context","setAttributes","presetWidth","presetHeight","orientation","label","width","height","valueToConvert","valueUnit","unit","value","Number","currentUnit","setNewDimensions","nextValue","nextUnit","valueWithUnit","handleChange","handleUnitChange","units","availableUnits","defaultValues","MIN_SPACER_SIZE","styles","rangeCellContainer"],"mappings":";;;;;;;;;AASA;;AANA;;AAOA;;AACA;;AAKA;;AACA;;AAjBA;AACA;AACA;;AAWA;AACA;AACA;AAIO,MAAMA,cAAc,GAAG;AAAEC,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,EAAE,EAAE,EAAf;AAAmBC,EAAAA,GAAG,EAAE,EAAxB;AAA4BC,EAAAA,EAAE,EAAE,EAAhC;AAAoCC,EAAAA,EAAE,EAAE;AAAxC,CAAvB;;;AAEP,SAASC,QAAT,OAMI;AAAA,MANe;AAClBC,IAAAA,UADkB;AAElBC,IAAAA,OAFkB;AAGlBC,IAAAA,aAHkB;AAIlBC,IAAAA,WAJkB;AAKlBC,IAAAA;AALkB,GAMf;AACH,QAAM;AAAEC,IAAAA;AAAF,MAAkBJ,OAAxB;AACA,QAAMK,KAAK,GAAGD,WAAW,KAAK,YAAhB,GAA+B,cAAI,QAAJ,CAA/B,GAAgD,cAAI,OAAJ,CAA9D;AAEA,QAAME,KAAK,GAAGJ,WAAW,IAAIH,UAAU,CAACO,KAAxC;AACA,QAAMC,MAAM,GAAGJ,YAAY,IAAIJ,UAAU,CAACQ,MAA1C;AACA,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,SAAS,EAAEC;AAA7B,MACL,iCAAiBN,WAAW,KAAK,YAAhB,GAA+BG,MAA/B,GAAwCD,KAAzD,KAAoE,EADrE;AAEA,QAAMK,KAAK,GAAGC,MAAM,CAAEJ,cAAF,CAApB;AACA,QAAMK,WAAW,GAAGH,IAAI,IAAI,IAA5B;;AAEA,QAAMI,gBAAgB,GAAG,CAAEC,SAAF,EAAaC,QAAb,KAA2B;AACnD,UAAMC,aAAa,GAAI,GAAGF,SAAW,GAAGC,QAAU,EAAlD;;AACA,QAAKZ,WAAW,KAAK,YAArB,EAAoC;AACnCH,MAAAA,aAAa,CAAE;AAAEK,QAAAA,KAAK,EAAEW;AAAT,OAAF,CAAb;AACA,KAFD,MAEO;AACNhB,MAAAA,aAAa,CAAE;AAAEM,QAAAA,MAAM,EAAEU;AAAV,OAAF,CAAb;AACA;AACD,GAPD;;AASA,QAAMC,YAAY,GAAG,0BAClBH,SAAF,IAAiB;AAChBD,IAAAA,gBAAgB,CAAEC,SAAF,EAAaF,WAAb,CAAhB;AACA,GAHmB,EAIpB,CAAEN,MAAF,EAAUD,KAAV,CAJoB,CAArB;AAOA,QAAMa,gBAAgB,GAAG,0BACtBH,QAAF,IAAgB;AACfF,IAAAA,gBAAgB,CAAEH,KAAF,EAASK,QAAT,CAAhB;AACA,GAHuB,EAIxB,CAAET,MAAF,EAAUD,KAAV,CAJwB,CAAzB;AAOA,QAAMc,KAAK,GAAG,8CAAgB;AAC7BC,IAAAA,cAAc,EAAE,6BAAY,eAAZ,KAAiC,CAChD,IADgD,EAEhD,IAFgD,EAGhD,KAHgD,EAIhD,IAJgD,EAKhD,IALgD,CADpB;AAQ7BC,IAAAA,aAAa,EAAE9B;AARc,GAAhB,CAAd;AAWA,SACC,qDACC,4BAAC,qBAAD;AAAW,IAAA,KAAK,EAAG,cAAI,YAAJ;AAAnB,KACC,4BAAC,uBAAD;AACC,IAAA,KAAK,EAAGa,KADT;AAEC,IAAA,GAAG,EAAGkB,0BAFP;AAGC,IAAA,KAAK,EAAGZ,KAHT;AAIC,IAAA,QAAQ,EAAGO,YAJZ;AAKC,IAAA,YAAY,EAAGC,gBALhB;AAMC,IAAA,KAAK,EAAGC,KANT;AAOC,IAAA,IAAI,EAAGP,WAPR;AAQC,IAAA,KAAK,EAAGW,eAAOC;AARhB,IADD,CADD,CADD;AAgBA;;eAEc3B,Q","sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\tPanelBody,\n\tUnitControl,\n\tgetValueAndUnit,\n\t__experimentalUseCustomUnits as useCustomUnits,\n} from '@wordpress/components';\nimport { useCallback } from '@wordpress/element';\nimport { useSetting } from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { MIN_SPACER_SIZE } from './constants';\nimport styles from './style.scss';\n\nexport const DEFAULT_VALUES = { px: 100, em: 10, rem: 10, vw: 10, vh: 25 };\n\nfunction Controls( {\n\tattributes,\n\tcontext,\n\tsetAttributes,\n\tpresetWidth,\n\tpresetHeight,\n} ) {\n\tconst { orientation } = context;\n\tconst label = orientation !== 'horizontal' ? __( 'Height' ) : __( 'Width' );\n\n\tconst width = presetWidth || attributes.width;\n\tconst height = presetHeight || attributes.height;\n\tconst { valueToConvert, valueUnit: unit } =\n\t\tgetValueAndUnit( orientation !== 'horizontal' ? height : width ) || {};\n\tconst value = Number( valueToConvert );\n\tconst currentUnit = unit || 'px';\n\n\tconst setNewDimensions = ( nextValue, nextUnit ) => {\n\t\tconst valueWithUnit = `${ nextValue }${ nextUnit }`;\n\t\tif ( orientation === 'horizontal' ) {\n\t\t\tsetAttributes( { width: valueWithUnit } );\n\t\t} else {\n\t\t\tsetAttributes( { height: valueWithUnit } );\n\t\t}\n\t};\n\n\tconst handleChange = useCallback(\n\t\t( nextValue ) => {\n\t\t\tsetNewDimensions( nextValue, currentUnit );\n\t\t},\n\t\t[ height, width ]\n\t);\n\n\tconst handleUnitChange = useCallback(\n\t\t( nextUnit ) => {\n\t\t\tsetNewDimensions( value, nextUnit );\n\t\t},\n\t\t[ height, width ]\n\t);\n\n\tconst units = useCustomUnits( {\n\t\tavailableUnits: useSetting( 'spacing.units' ) || [\n\t\t\t'px',\n\t\t\t'em',\n\t\t\t'rem',\n\t\t\t'vw',\n\t\t\t'vh',\n\t\t],\n\t\tdefaultValues: DEFAULT_VALUES,\n\t} );\n\n\treturn (\n\t\t<>\n\t\t\t<PanelBody title={ __( 'Dimensions' ) }>\n\t\t\t\t<UnitControl\n\t\t\t\t\tlabel={ label }\n\t\t\t\t\tmin={ MIN_SPACER_SIZE }\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tonChange={ handleChange }\n\t\t\t\t\tonUnitChange={ handleUnitChange }\n\t\t\t\t\tunits={ units }\n\t\t\t\t\tunit={ currentUnit }\n\t\t\t\t\tstyle={ styles.rangeCellContainer }\n\t\t\t\t/>\n\t\t\t</PanelBody>\n\t\t</>\n\t);\n}\n\nexport default Controls;\n"]}