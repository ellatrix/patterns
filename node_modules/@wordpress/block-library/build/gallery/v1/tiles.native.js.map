{"version":3,"sources":["@wordpress/block-library/src/gallery/v1/tiles.native.js"],"names":["Tiles","props","columns","children","spacing","style","compose","StyleSheet","tileCount","Children","count","lastTile","lastRow","Math","floor","wrappedChildren","map","child","index","row","rowLength","indexInRow","styles","tileStyle","width","paddingLeft","paddingRight","paddingTop","paddingBottom","containerStyle"],"mappings":";;;;;;;;;AAQA;;AALA;;AAUA;;AAbA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AAGA,SAASA,KAAT,CAAgBC,KAAhB,EAAwB;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA,OAAO,GAAG,EAA/B;AAAmCC,IAAAA;AAAnC,MAA6CJ,KAAnD;AAEA,QAAM;AAAEK,IAAAA;AAAF,MAAcC,uBAApB;;AAEA,QAAMC,SAAS,GAAGC,kBAASC,KAAT,CAAgBP,QAAhB,CAAlB;;AACA,QAAMQ,QAAQ,GAAGH,SAAS,GAAG,CAA7B;AACA,QAAMI,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAYH,QAAQ,GAAGT,OAAvB,CAAhB;;AAEA,QAAMa,eAAe,GAAGN,kBAASO,GAAT,CAAcb,QAAd,EAAwB,CAAEc,KAAF,EAASC,KAAT,KAAoB;AACnE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE,UAAMC,GAAG,GAAGN,IAAI,CAACC,KAAL,CAAYI,KAAK,GAAGhB,OAApB,CAAZ;AACA,UAAMkB,SAAS,GACdD,GAAG,KAAKP,OAAR,GAAoBD,QAAQ,GAAGT,OAAb,GAAyB,CAA3C,GAA+CA,OADhD;AAEA,UAAMmB,UAAU,GAAGH,KAAK,GAAGhB,OAA3B;AAEA,WACC,4BAAC,iBAAD;AACC,MAAA,KAAK,EAAG,CACPoB,qBAAOC,SADA,EAEP;AACCC,QAAAA,KAAK,EAAG,GAAG,MAAMJ,SAAW,GAD7B;AAECK,QAAAA,WAAW,EAAErB,OAAO,IAAKiB,UAAU,GAAGD,SAAlB,CAFrB;AAGCM,QAAAA,YAAY,EACXtB,OAAO,IAAK,IAAI,CAAEiB,UAAU,GAAG,CAAf,IAAqBD,SAA9B,CAJT;AAKCO,QAAAA,UAAU,EAAER,GAAG,KAAK,CAAR,GAAY,CAAZ,GAAgBf,OAAO,GAAG,CALvC;AAMCwB,QAAAA,aAAa,EAAET,GAAG,KAAKP,OAAR,GAAkB,CAAlB,GAAsBR,OAAO,GAAG;AANhD,OAFO;AADT,OAaGa,KAbH,CADD;AAiBA,GA/CuB,CAAxB;;AAiDA,QAAMY,cAAc,GAAGvB,OAAO,CAAEgB,qBAAOO,cAAT,EAAyBxB,KAAzB,CAA9B;AAEA,SAAO,4BAAC,iBAAD;AAAM,IAAA,KAAK,EAAGwB;AAAd,KAAiCd,eAAjC,CAAP;AACA;;eAEcf,K","sourcesContent":["/**\n * External dependencies\n */\nimport { View, StyleSheet } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Children } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport styles from './tiles-styles.scss';\n\nfunction Tiles( props ) {\n\tconst { columns, children, spacing = 10, style } = props;\n\n\tconst { compose } = StyleSheet;\n\n\tconst tileCount = Children.count( children );\n\tconst lastTile = tileCount - 1;\n\tconst lastRow = Math.floor( lastTile / columns );\n\n\tconst wrappedChildren = Children.map( children, ( child, index ) => {\n\t\t/**\n\t\t * Since we don't have `calc()`, we must calculate our spacings here in\n\t\t * order to preserve even spacing between tiles and equal width for tiles\n\t\t * in a given row.\n\t\t *\n\t\t * In order to ensure equal sizing of tile contents, we distribute the\n\t\t * spacing such that each tile has an equal \"share\" of the fixed spacing. To\n\t\t * keep the tiles properly aligned within their rows, we calculate the left\n\t\t * and right paddings based on the tile's relative position within the row.\n\t\t *\n\t\t * Note: we use padding instead of margins so that the fixed spacing is\n\t\t * included within the relative spacing (i.e. width percentage), and\n\t\t * wrapping behavior is preserved.\n\t\t *\n\t\t *  - The left most tile in a row must have left padding of zero.\n\t\t *  - The right most tile in a row must have a right padding of zero.\n\t\t *\n\t\t * The values of these left and right paddings are interpolated for tiles in\n\t\t * between. The right padding is complementary with the left padding of the\n\t\t * next tile (i.e. the right padding of [tile n] + the left padding of\n\t\t * [tile n + 1] will be equal for all tiles except the last one in a given\n\t\t * row).\n\t\t */\n\n\t\tconst row = Math.floor( index / columns );\n\t\tconst rowLength =\n\t\t\trow === lastRow ? ( lastTile % columns ) + 1 : columns;\n\t\tconst indexInRow = index % columns;\n\n\t\treturn (\n\t\t\t<View\n\t\t\t\tstyle={ [\n\t\t\t\t\tstyles.tileStyle,\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: `${ 100 / rowLength }%`,\n\t\t\t\t\t\tpaddingLeft: spacing * ( indexInRow / rowLength ),\n\t\t\t\t\t\tpaddingRight:\n\t\t\t\t\t\t\tspacing * ( 1 - ( indexInRow + 1 ) / rowLength ),\n\t\t\t\t\t\tpaddingTop: row === 0 ? 0 : spacing / 2,\n\t\t\t\t\t\tpaddingBottom: row === lastRow ? 0 : spacing / 2,\n\t\t\t\t\t},\n\t\t\t\t] }\n\t\t\t>\n\t\t\t\t{ child }\n\t\t\t</View>\n\t\t);\n\t} );\n\n\tconst containerStyle = compose( styles.containerStyle, style );\n\n\treturn <View style={ containerStyle }>{ wrappedChildren }</View>;\n}\n\nexport default Tiles;\n"]}