{"version":3,"sources":["@wordpress/block-library/src/gallery/v1/gallery.native.js"],"names":["TILE_SPACING","MAX_DISPLAYED_COLUMNS","MAX_DISPLAYED_COLUMNS_NARROW","isFullWidth","alignmentHelpers","Gallery","props","isCaptionSelected","setIsCaptionSelected","mediaUploadSync","isRTL","select","blockEditorStore","getSettings","clientId","selectedImage","mediaPlaceholder","onBlur","onMoveBackward","onMoveForward","onRemoveImage","onSelectImage","onSetImageAttributes","onFocusGalleryCaption","attributes","isSelected","isNarrow","onFocus","insertBlocksAfter","align","columns","imageCrop","images","displayedColumns","Math","min","selectImage","index","focusGalleryCaption","flex","styles","galleryTilesContainerSelected","undefined","map","img","ariaLabel","length","id","url","alt","parseInt","attrs","caption","fullWidth"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\n\n/**\n * Internal dependencies\n */\nimport GalleryImage from './gallery-image';\nimport { defaultColumnsNumberV1 } from '../deprecated';\nimport styles from './gallery-styles.scss';\nimport Tiles from './tiles';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport {\n\tBlockCaption,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { useState, useEffect } from '@wordpress/element';\nimport { mediaUploadSync } from '@wordpress/react-native-bridge';\nimport { useSelect } from '@wordpress/data';\nimport { alignmentHelpers } from '@wordpress/components';\n\nconst TILE_SPACING = 15;\n\n// we must limit displayed columns since readable content max-width is 580px\nconst MAX_DISPLAYED_COLUMNS = 4;\nconst MAX_DISPLAYED_COLUMNS_NARROW = 2;\n\nconst { isFullWidth } = alignmentHelpers;\n\nexport const Gallery = ( props ) => {\n\tconst [ isCaptionSelected, setIsCaptionSelected ] = useState( false );\n\tuseEffect( mediaUploadSync, [] );\n\n\tconst isRTL = useSelect( ( select ) => {\n\t\treturn !! select( blockEditorStore ).getSettings().isRTL;\n\t}, [] );\n\n\tconst {\n\t\tclientId,\n\t\tselectedImage,\n\t\tmediaPlaceholder,\n\t\tonBlur,\n\t\tonMoveBackward,\n\t\tonMoveForward,\n\t\tonRemoveImage,\n\t\tonSelectImage,\n\t\tonSetImageAttributes,\n\t\tonFocusGalleryCaption,\n\t\tattributes,\n\t\tisSelected,\n\t\tisNarrow,\n\t\tonFocus,\n\t\tinsertBlocksAfter,\n\t} = props;\n\n\tconst {\n\t\talign,\n\t\tcolumns = defaultColumnsNumberV1( attributes ),\n\t\timageCrop,\n\t\timages,\n\t} = attributes;\n\n\t// limit displayed columns when isNarrow is true (i.e. when viewport width is\n\t// less than \"small\", where small = 600)\n\tconst displayedColumns = isNarrow\n\t\t? Math.min( columns, MAX_DISPLAYED_COLUMNS_NARROW )\n\t\t: Math.min( columns, MAX_DISPLAYED_COLUMNS );\n\n\tconst selectImage = ( index ) => {\n\t\treturn () => {\n\t\t\tif ( isCaptionSelected ) {\n\t\t\t\tsetIsCaptionSelected( false );\n\t\t\t}\n\t\t\t// We need to fully invoke the curried function here.\n\t\t\tonSelectImage( index )();\n\t\t};\n\t};\n\n\tconst focusGalleryCaption = () => {\n\t\tif ( ! isCaptionSelected ) {\n\t\t\tsetIsCaptionSelected( true );\n\t\t}\n\t\tonFocusGalleryCaption();\n\t};\n\n\treturn (\n\t\t<View style={ { flex: 1 } }>\n\t\t\t<Tiles\n\t\t\t\tcolumns={ displayedColumns }\n\t\t\t\tspacing={ TILE_SPACING }\n\t\t\t\tstyle={\n\t\t\t\t\tisSelected\n\t\t\t\t\t\t? styles.galleryTilesContainerSelected\n\t\t\t\t\t\t: undefined\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{ images.map( ( img, index ) => {\n\t\t\t\t\tconst ariaLabel = sprintf(\n\t\t\t\t\t\t/* translators: 1: the order number of the image. 2: the total number of images. */\n\t\t\t\t\t\t__( 'image %1$d of %2$d in gallery' ),\n\t\t\t\t\t\tindex + 1,\n\t\t\t\t\t\timages.length\n\t\t\t\t\t);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<GalleryImage\n\t\t\t\t\t\t\tkey={ img.id ? `${ img.id }-${ index }` : img.url }\n\t\t\t\t\t\t\turl={ img.url }\n\t\t\t\t\t\t\talt={ img.alt }\n\t\t\t\t\t\t\tid={ parseInt( img.id, 10 ) } // make id an integer explicitly\n\t\t\t\t\t\t\tisCropped={ imageCrop }\n\t\t\t\t\t\t\tisFirstItem={ index === 0 }\n\t\t\t\t\t\t\tisLastItem={ index + 1 === images.length }\n\t\t\t\t\t\t\tisSelected={ isSelected && selectedImage === index }\n\t\t\t\t\t\t\tisBlockSelected={ isSelected }\n\t\t\t\t\t\t\tonMoveBackward={ onMoveBackward( index ) }\n\t\t\t\t\t\t\tonMoveForward={ onMoveForward( index ) }\n\t\t\t\t\t\t\tonRemove={ onRemoveImage( index ) }\n\t\t\t\t\t\t\tonSelect={ selectImage( index ) }\n\t\t\t\t\t\t\tonSelectBlock={ onFocus }\n\t\t\t\t\t\t\tsetAttributes={ ( attrs ) =>\n\t\t\t\t\t\t\t\tonSetImageAttributes( index, attrs )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcaption={ img.caption }\n\t\t\t\t\t\t\taria-label={ ariaLabel }\n\t\t\t\t\t\t\tisRTL={ isRTL }\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</Tiles>\n\t\t\t<View style={ isFullWidth( align ) && styles.fullWidth }>\n\t\t\t\t{ mediaPlaceholder }\n\t\t\t</View>\n\t\t\t<BlockCaption\n\t\t\t\tclientId={ clientId }\n\t\t\t\tisSelected={ isCaptionSelected }\n\t\t\t\taccessible={ true }\n\t\t\t\taccessibilityLabelCreator={ ( caption ) =>\n\t\t\t\t\t! caption\n\t\t\t\t\t\t? /* translators: accessibility text. Empty gallery caption. */\n\t\t\t\t\t\t  'Gallery caption. Empty'\n\t\t\t\t\t\t: sprintf(\n\t\t\t\t\t\t\t\t/* translators: accessibility text. %s: gallery caption. */\n\t\t\t\t\t\t\t\t__( 'Gallery caption. %s' ),\n\t\t\t\t\t\t\t\tcaption\n\t\t\t\t\t\t  )\n\t\t\t\t}\n\t\t\t\tonFocus={ focusGalleryCaption }\n\t\t\t\tonBlur={ onBlur } // Always assign onBlur as props.\n\t\t\t\tinsertBlocksAfter={ insertBlocksAfter }\n\t\t\t/>\n\t\t</View>\n\t);\n};\n\nexport default Gallery;\n"]}