{"version":3,"sources":["@wordpress/block-library/src/gallery/use-image-sizes.js"],"names":["useImageSizes","images","isSelected","getSettings","getImageSizing","length","imageSizes","resizedImages","reduce","currentResizedImages","img","id","sizes","currentSizes","size","defaultUrl","slug","url","mediaDetailsUrl","media_details","source_url","parseInt","resizedImageSizes","Object","values","filter","some","map","name","value","label"],"mappings":";;;;;;;AAGA;;AAHA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,aAAT,CAAwBC,MAAxB,EAAgCC,UAAhC,EAA4CC,WAA5C,EAA0D;AACxE,SAAO,sBAAS,MAAMC,cAAc,EAA7B,EAAiC,CAAEH,MAAF,EAAUC,UAAV,CAAjC,CAAP;;AAEA,WAASE,cAAT,GAA0B;AACzB,QAAK,CAAEH,MAAF,IAAYA,MAAM,CAACI,MAAP,KAAkB,CAAnC,EAAuC;AACtC;AACA;;AACD,UAAM;AAAEC,MAAAA;AAAF,QAAiBH,WAAW,EAAlC;AACA,QAAII,aAAa,GAAG,EAApB;;AAEA,QAAKL,UAAL,EAAkB;AACjBK,MAAAA,aAAa,GAAGN,MAAM,CAACO,MAAP,CAAe,CAAEC,oBAAF,EAAwBC,GAAxB,KAAiC;AAC/D,YAAK,CAAEA,GAAG,CAACC,EAAX,EAAgB;AACf,iBAAOF,oBAAP;AACA;;AAED,cAAMG,KAAK,GAAGN,UAAU,CAACE,MAAX,CAAmB,CAAEK,YAAF,EAAgBC,IAAhB,KAA0B;AAAA;;AAC1D,gBAAMC,UAAU,iBAAGL,GAAG,CAACE,KAAP,uEAAG,WAAaE,IAAI,CAACE,IAAlB,CAAH,yDAAG,qBAA0BC,GAA7C;AACA,gBAAMC,eAAe,yBACpBR,GAAG,CAACS,aADgB,gFACpB,mBAAmBP,KADC,oFACpB,sBAA4BE,IAAI,CAACE,IAAjC,CADoB,2DACpB,uBAAyCI,UAD1C;AAEA,iBAAO,EACN,GAAGP,YADG;AAEN,aAAEC,IAAI,CAACE,IAAP,GAAeD,UAAU,IAAIG;AAFvB,WAAP;AAIA,SARa,EAQX,EARW,CAAd;AASA,eAAO,EACN,GAAGT,oBADG;AAEN,WAAEY,QAAQ,CAAEX,GAAG,CAACC,EAAN,EAAU,EAAV,CAAV,GAA4BC;AAFtB,SAAP;AAIA,OAlBe,EAkBb,EAlBa,CAAhB;AAmBA;;AACD,UAAMU,iBAAiB,GAAGC,MAAM,CAACC,MAAP,CAAejB,aAAf,CAA1B;AACA,WAAOD,UAAU,CACfmB,MADK,CACG;AAAA,UAAE;AAAET,QAAAA;AAAF,OAAF;AAAA,aACRM,iBAAiB,CAACI,IAAlB,CAA0Bd,KAAF,IAAaA,KAAK,CAAEI,IAAF,CAA1C,CADQ;AAAA,KADH,EAILW,GAJK,CAIA;AAAA,UAAE;AAAEC,QAAAA,IAAF;AAAQZ,QAAAA;AAAR,OAAF;AAAA,aAAwB;AAAEa,QAAAA,KAAK,EAAEb,IAAT;AAAec,QAAAA,KAAK,EAAEF;AAAtB,OAAxB;AAAA,KAJA,CAAP;AAKA;AACD","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useMemo } from '@wordpress/element';\n\n/**\n * Calculates the image sizes that are avaible for the current gallery images in order to\n * populate the 'Image size' selector.\n *\n * @param {Array}    images      Basic image block data taken from current gallery innerBlock\n * @param {boolean}  isSelected  Is the block currently selected in the editor.\n * @param {Function} getSettings Block editor store selector.\n *\n * @return {Array} An array of image size options.\n */\nexport default function useImageSizes( images, isSelected, getSettings ) {\n\treturn useMemo( () => getImageSizing(), [ images, isSelected ] );\n\n\tfunction getImageSizing() {\n\t\tif ( ! images || images.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\tconst { imageSizes } = getSettings();\n\t\tlet resizedImages = {};\n\n\t\tif ( isSelected ) {\n\t\t\tresizedImages = images.reduce( ( currentResizedImages, img ) => {\n\t\t\t\tif ( ! img.id ) {\n\t\t\t\t\treturn currentResizedImages;\n\t\t\t\t}\n\n\t\t\t\tconst sizes = imageSizes.reduce( ( currentSizes, size ) => {\n\t\t\t\t\tconst defaultUrl = img.sizes?.[ size.slug ]?.url;\n\t\t\t\t\tconst mediaDetailsUrl =\n\t\t\t\t\t\timg.media_details?.sizes?.[ size.slug ]?.source_url;\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...currentSizes,\n\t\t\t\t\t\t[ size.slug ]: defaultUrl || mediaDetailsUrl,\n\t\t\t\t\t};\n\t\t\t\t}, {} );\n\t\t\t\treturn {\n\t\t\t\t\t...currentResizedImages,\n\t\t\t\t\t[ parseInt( img.id, 10 ) ]: sizes,\n\t\t\t\t};\n\t\t\t}, {} );\n\t\t}\n\t\tconst resizedImageSizes = Object.values( resizedImages );\n\t\treturn imageSizes\n\t\t\t.filter( ( { slug } ) =>\n\t\t\t\tresizedImageSizes.some( ( sizes ) => sizes[ slug ] )\n\t\t\t)\n\t\t\t.map( ( { name, slug } ) => ( { value: slug, label: name } ) );\n\t}\n}\n"]}