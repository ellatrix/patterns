{"version":3,"sources":["@wordpress/block-library/src/list-item/hooks/use-merge.js"],"names":["useMerge","clientId","onMerge","registry","getPreviousBlockClientId","getNextBlockClientId","getBlockOrder","getBlockRootClientId","getBlockName","blockEditorStore","mergeBlocks","moveBlocksToPosition","outdentListItem","getTrailingId","id","order","length","getParentListItemId","listId","parentListItemId","listItemName","_getNextId","next","getNextId","forward","nextBlockClientId","batch","previousBlockClientId","trailingId"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRegistry, useDispatch, useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport useOutdentListItem from './use-outdent-list-item';\n\nimport { name as listItemName } from '../block.json';\n\nexport default function useMerge( clientId, onMerge ) {\n\tconst registry = useRegistry();\n\tconst {\n\t\tgetPreviousBlockClientId,\n\t\tgetNextBlockClientId,\n\t\tgetBlockOrder,\n\t\tgetBlockRootClientId,\n\t\tgetBlockName,\n\t} = useSelect( blockEditorStore );\n\tconst { mergeBlocks, moveBlocksToPosition } =\n\t\tuseDispatch( blockEditorStore );\n\tconst [ , outdentListItem ] = useOutdentListItem( clientId );\n\n\tfunction getTrailingId( id ) {\n\t\tconst order = getBlockOrder( id );\n\n\t\tif ( ! order.length ) {\n\t\t\treturn id;\n\t\t}\n\n\t\treturn getTrailingId( order[ order.length - 1 ] );\n\t}\n\n\tfunction getParentListItemId( id ) {\n\t\tconst listId = getBlockRootClientId( id );\n\t\tconst parentListItemId = getBlockRootClientId( listId );\n\t\tif ( ! parentListItemId ) return;\n\t\tif ( getBlockName( parentListItemId ) !== listItemName ) return;\n\t\treturn parentListItemId;\n\t}\n\n\t/**\n\t * Return the next list item with respect to the given list item. If none,\n\t * return the next list item of the parent list item if it exists.\n\t *\n\t * @param {string} id A list item client ID.\n\t * @return {string?} The client ID of the next list item.\n\t */\n\tfunction _getNextId( id ) {\n\t\tconst next = getNextBlockClientId( id );\n\t\tif ( next ) return next;\n\t\tconst parentListItemId = getParentListItemId( id );\n\t\tif ( ! parentListItemId ) return;\n\t\treturn _getNextId( parentListItemId );\n\t}\n\n\t/**\n\t * Given a client ID, return the client ID of the list item on the next\n\t * line, regardless of indentation level.\n\t *\n\t * @param {string} id The client ID of the current list item.\n\t * @return {string?} The client ID of the next list item.\n\t */\n\tfunction getNextId( id ) {\n\t\tconst order = getBlockOrder( id );\n\n\t\t// If the list item does not have a nested list, return the next list\n\t\t// item.\n\t\tif ( ! order.length ) {\n\t\t\treturn _getNextId( id );\n\t\t}\n\n\t\t// Get the first list item in the nested list.\n\t\treturn getBlockOrder( order[ 0 ] )[ 0 ];\n\t}\n\n\treturn ( forward ) => {\n\t\tif ( forward ) {\n\t\t\tconst nextBlockClientId = getNextId( clientId );\n\n\t\t\tif ( ! nextBlockClientId ) {\n\t\t\t\tonMerge( forward );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( getParentListItemId( nextBlockClientId ) ) {\n\t\t\t\toutdentListItem( nextBlockClientId );\n\t\t\t} else {\n\t\t\t\tregistry.batch( () => {\n\t\t\t\t\tmoveBlocksToPosition(\n\t\t\t\t\t\tgetBlockOrder( nextBlockClientId ),\n\t\t\t\t\t\tnextBlockClientId,\n\t\t\t\t\t\tgetPreviousBlockClientId( nextBlockClientId )\n\t\t\t\t\t);\n\t\t\t\t\tmergeBlocks( clientId, nextBlockClientId );\n\t\t\t\t} );\n\t\t\t}\n\t\t} else {\n\t\t\t// Merging is only done from the top level. For lowel levels, the\n\t\t\t// list item is outdented instead.\n\t\t\tconst previousBlockClientId = getPreviousBlockClientId( clientId );\n\t\t\tif ( getParentListItemId( clientId ) ) {\n\t\t\t\toutdentListItem( clientId );\n\t\t\t} else if ( previousBlockClientId ) {\n\t\t\t\tconst trailingId = getTrailingId( previousBlockClientId );\n\t\t\t\tregistry.batch( () => {\n\t\t\t\t\tmoveBlocksToPosition(\n\t\t\t\t\t\tgetBlockOrder( clientId ),\n\t\t\t\t\t\tclientId,\n\t\t\t\t\t\tpreviousBlockClientId\n\t\t\t\t\t);\n\t\t\t\t\tmergeBlocks( trailingId, clientId );\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\tonMerge( forward );\n\t\t\t}\n\t\t}\n\t};\n}\n"]}