{"version":3,"sources":["@wordpress/block-library/src/column/edit.js"],"names":["ColumnEdit","attributes","verticalAlignment","width","templateLock","allowedBlocks","setAttributes","clientId","classes","units","availableUnits","columnsIds","hasChildBlocks","rootClientId","select","getBlockOrder","getBlockRootClientId","blockEditorStore","rootId","length","updateBlockAttributes","updateAlignment","value","widthWithUnit","Number","isFinite","blockProps","className","style","flexBasis","undefined","columnsCount","currentColumnPosition","indexOf","label","innerBlocksProps","renderAppender","InnerBlocks","ButtonBlockAppender","nextWidth","parseFloat"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tInnerBlocks,\n\tBlockControls,\n\tBlockVerticalAlignmentToolbar,\n\tInspectorControls,\n\tuseBlockProps,\n\tuseSetting,\n\tuseInnerBlocksProps,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport {\n\t__experimentalUseCustomUnits as useCustomUnits,\n\tPanelBody,\n\t__experimentalUnitControl as UnitControl,\n} from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { sprintf, __ } from '@wordpress/i18n';\n\nfunction ColumnEdit( {\n\tattributes: { verticalAlignment, width, templateLock, allowedBlocks },\n\tsetAttributes,\n\tclientId,\n} ) {\n\tconst classes = classnames( 'block-core-columns', {\n\t\t[ `is-vertically-aligned-${ verticalAlignment }` ]: verticalAlignment,\n\t} );\n\n\tconst units = useCustomUnits( {\n\t\tavailableUnits: useSetting( 'spacing.units' ) || [\n\t\t\t'%',\n\t\t\t'px',\n\t\t\t'em',\n\t\t\t'rem',\n\t\t\t'vw',\n\t\t],\n\t} );\n\n\tconst { columnsIds, hasChildBlocks, rootClientId } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockOrder, getBlockRootClientId } =\n\t\t\t\tselect( blockEditorStore );\n\n\t\t\tconst rootId = getBlockRootClientId( clientId );\n\n\t\t\treturn {\n\t\t\t\thasChildBlocks: getBlockOrder( clientId ).length > 0,\n\t\t\t\trootClientId: rootId,\n\t\t\t\tcolumnsIds: getBlockOrder( rootId ),\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tconst { updateBlockAttributes } = useDispatch( blockEditorStore );\n\n\tconst updateAlignment = ( value ) => {\n\t\t// Update own alignment.\n\t\tsetAttributes( { verticalAlignment: value } );\n\t\t// Reset parent Columns block.\n\t\tupdateBlockAttributes( rootClientId, {\n\t\t\tverticalAlignment: null,\n\t\t} );\n\t};\n\n\tconst widthWithUnit = Number.isFinite( width ) ? width + '%' : width;\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classes,\n\t\tstyle: widthWithUnit ? { flexBasis: widthWithUnit } : undefined,\n\t} );\n\n\tconst columnsCount = columnsIds.length;\n\tconst currentColumnPosition = columnsIds.indexOf( clientId ) + 1;\n\n\tconst label = sprintf(\n\t\t/* translators: 1: Block label (i.e. \"Block: Column\"), 2: Position of the selected block, 3: Total number of sibling blocks of the same type */\n\t\t__( '%1$s (%2$d of %3$d)' ),\n\t\tblockProps[ 'aria-label' ],\n\t\tcurrentColumnPosition,\n\t\tcolumnsCount\n\t);\n\n\tconst innerBlocksProps = useInnerBlocksProps(\n\t\t{ ...blockProps, 'aria-label': label },\n\t\t{\n\t\t\ttemplateLock,\n\t\t\tallowedBlocks,\n\t\t\trenderAppender: hasChildBlocks\n\t\t\t\t? undefined\n\t\t\t\t: InnerBlocks.ButtonBlockAppender,\n\t\t}\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t<BlockVerticalAlignmentToolbar\n\t\t\t\t\tonChange={ updateAlignment }\n\t\t\t\t\tvalue={ verticalAlignment }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Column settings' ) }>\n\t\t\t\t\t<UnitControl\n\t\t\t\t\t\tlabel={ __( 'Width' ) }\n\t\t\t\t\t\tlabelPosition=\"edge\"\n\t\t\t\t\t\t__unstableInputWidth=\"80px\"\n\t\t\t\t\t\tvalue={ width || '' }\n\t\t\t\t\t\tonChange={ ( nextWidth ) => {\n\t\t\t\t\t\t\tnextWidth =\n\t\t\t\t\t\t\t\t0 > parseFloat( nextWidth ) ? '0' : nextWidth;\n\t\t\t\t\t\t\tsetAttributes( { width: nextWidth } );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tunits={ units }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<div { ...innerBlocksProps } />\n\t\t</>\n\t);\n}\n\nexport default ColumnEdit;\n"]}