{"version":3,"sources":["@wordpress/block-library/src/embed/wp-embed-preview.js"],"names":["attributeMap","class","frameborder","marginheight","marginwidth","WpEmbedPreview","html","ref","props","doc","window","DOMParser","parseFromString","iframe","querySelector","iframeProps","Array","from","attributes","forEach","name","value","ownerDocument","current","defaultView","resizeWPembeds","data","secret","message","height","addEventListener","removeEventListener","title"],"mappings":";;;;;;;;;AAIA;;;;AADA;;AAHA;AACA;AACA;;AAIA;AAEA,MAAMA,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE,WADa;AAEpBC,EAAAA,WAAW,EAAE,aAFO;AAGpBC,EAAAA,YAAY,EAAE,cAHM;AAIpBC,EAAAA,WAAW,EAAE;AAJO,CAArB;;AAOe,SAASC,cAAT,OAAoC;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;AAClD,QAAMC,GAAG,GAAG,sBAAZ;AACA,QAAMC,KAAK,GAAG,sBAAS,MAAM;AAC5B,UAAMC,GAAG,GAAG,IAAIC,MAAM,CAACC,SAAX,GAAuBC,eAAvB,CAAwCN,IAAxC,EAA8C,WAA9C,CAAZ;AACA,UAAMO,MAAM,GAAGJ,GAAG,CAACK,aAAJ,CAAmB,QAAnB,CAAf;AACA,UAAMC,WAAW,GAAG,EAApB;AAEA,QAAK,CAAEF,MAAP,EAAgB,OAAOE,WAAP;AAEhBC,IAAAA,KAAK,CAACC,IAAN,CAAYJ,MAAM,CAACK,UAAnB,EAAgCC,OAAhC,CAAyC,SAAuB;AAAA,UAArB;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAqB;AAC/D,UAAKD,IAAI,KAAK,OAAd,EAAwB;AACxBL,MAAAA,WAAW,CAAEf,YAAY,CAAEoB,IAAF,CAAZ,IAAwBA,IAA1B,CAAX,GAA8CC,KAA9C;AACA,KAHD;AAKA,WAAON,WAAP;AACA,GAba,EAaX,CAAET,IAAF,CAbW,CAAd;AAeA,0BAAW,MAAM;AAChB,UAAM;AAAEgB,MAAAA;AAAF,QAAoBf,GAAG,CAACgB,OAA9B;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAkBF,aAAxB;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,aAASG,cAAT,QAAqE;AAAA,UAA5C;AAAEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,MAAF;AAAUC,UAAAA,OAAV;AAAmBP,UAAAA;AAAnB,YAA6B;AAArC,OAA4C;;AACpE,UAAKO,OAAO,KAAK,QAAZ,IAAwBD,MAAM,KAAKnB,KAAK,CAAE,aAAF,CAA7C,EAAiE;AAChE;AACA;;AAEDD,MAAAA,GAAG,CAACgB,OAAJ,CAAYM,MAAZ,GAAqBR,KAArB;AACA;;AAEDG,IAAAA,WAAW,CAACM,gBAAZ,CAA8B,SAA9B,EAAyCL,cAAzC;AACA,WAAO,MAAM;AACZD,MAAAA,WAAW,CAACO,mBAAZ,CAAiC,SAAjC,EAA4CN,cAA5C;AACA,KAFD;AAGA,GA/BD,EA+BG,EA/BH;AAiCA,SACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC;AACC,IAAA,GAAG,EAAG,2BAAc,CAAElB,GAAF,EAAO,kCAAP,CAAd,CADP;AAEC,IAAA,KAAK,EAAGC,KAAK,CAACwB;AAFf,KAGMxB,KAHN,EADD,CADD;AASA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useMergeRefs, useFocusableIframe } from '@wordpress/compose';\nimport { useRef, useEffect, useMemo } from '@wordpress/element';\n\n/** @typedef {import('@wordpress/element').WPSyntheticEvent} WPSyntheticEvent */\n\nconst attributeMap = {\n\tclass: 'className',\n\tframeborder: 'frameBorder',\n\tmarginheight: 'marginHeight',\n\tmarginwidth: 'marginWidth',\n};\n\nexport default function WpEmbedPreview( { html } ) {\n\tconst ref = useRef();\n\tconst props = useMemo( () => {\n\t\tconst doc = new window.DOMParser().parseFromString( html, 'text/html' );\n\t\tconst iframe = doc.querySelector( 'iframe' );\n\t\tconst iframeProps = {};\n\n\t\tif ( ! iframe ) return iframeProps;\n\n\t\tArray.from( iframe.attributes ).forEach( ( { name, value } ) => {\n\t\t\tif ( name === 'style' ) return;\n\t\t\tiframeProps[ attributeMap[ name ] || name ] = value;\n\t\t} );\n\n\t\treturn iframeProps;\n\t}, [ html ] );\n\n\tuseEffect( () => {\n\t\tconst { ownerDocument } = ref.current;\n\t\tconst { defaultView } = ownerDocument;\n\n\t\t/**\n\t\t * Checks for WordPress embed events signaling the height change when\n\t\t * iframe content loads or iframe's window is resized.  The event is\n\t\t * sent from WordPress core via the window.postMessage API.\n\t\t *\n\t\t * References:\n\t\t * window.postMessage:\n\t\t * https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n\t\t * WordPress core embed-template on load:\n\t\t * https://github.com/WordPress/WordPress/blob/HEAD/wp-includes/js/wp-embed-template.js#L143\n\t\t * WordPress core embed-template on resize:\n\t\t * https://github.com/WordPress/WordPress/blob/HEAD/wp-includes/js/wp-embed-template.js#L187\n\t\t *\n\t\t * @param {MessageEvent} event Message event.\n\t\t */\n\t\tfunction resizeWPembeds( { data: { secret, message, value } = {} } ) {\n\t\t\tif ( message !== 'height' || secret !== props[ 'data-secret' ] ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tref.current.height = value;\n\t\t}\n\n\t\tdefaultView.addEventListener( 'message', resizeWPembeds );\n\t\treturn () => {\n\t\t\tdefaultView.removeEventListener( 'message', resizeWPembeds );\n\t\t};\n\t}, [] );\n\n\treturn (\n\t\t<div className=\"wp-block-embed__wrapper\">\n\t\t\t<iframe\n\t\t\t\tref={ useMergeRefs( [ ref, useFocusableIframe() ] ) }\n\t\t\t\ttitle={ props.title }\n\t\t\t\t{ ...props }\n\t\t\t/>\n\t\t</div>\n\t);\n}\n"]}