{"version":3,"sources":["@wordpress/block-library/src/embed/embed-preview.native.js"],"names":["EmbedPreview","align","className","clientId","icon","insertBlocksAfter","isSelected","label","onFocus","preview","previewable","isProviderPreviewable","type","url","isDefaultEmbedInfo","isCaptionSelected","setIsCaptionSelected","locale","blockEditorStore","getSettings","wrapperStyle","styles","wrapperAlignStyle","sandboxAlignStyle","accessibilityLabelCreator","caption","onEmbedPreviewPress","onFocusCaption","provider_url","providerUrl","html","parsedHost","URL","host","split","parsedHostBaseUrl","splice","length","join","iframeTitle","sandboxClassnames","PreviewContent","WpEmbedPreview","SandBox","embedWrapper"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { TouchableWithoutFeedback } from 'react-native';\nimport classnames from 'classnames/dedupe';\n\n/**\n * WordPress dependencies\n */\nimport { View } from '@wordpress/primitives';\nimport {\n\tBlockCaption,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { memo, useState } from '@wordpress/element';\nimport { SandBox } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { getPhotoHtml } from './util';\nimport EmbedNoPreview from './embed-no-preview';\nimport WpEmbedPreview from './wp-embed-preview';\nimport styles from './styles.scss';\n\nconst EmbedPreview = ( {\n\talign,\n\tclassName,\n\tclientId,\n\ticon,\n\tinsertBlocksAfter,\n\tisSelected,\n\tlabel,\n\tonFocus,\n\tpreview,\n\tpreviewable,\n\tisProviderPreviewable,\n\ttype,\n\turl,\n\tisDefaultEmbedInfo,\n} ) => {\n\tconst [ isCaptionSelected, setIsCaptionSelected ] = useState( false );\n\tconst { locale } = useSelect( blockEditorStore ).getSettings();\n\n\tconst wrapperStyle = styles[ 'embed-preview__wrapper' ];\n\tconst wrapperAlignStyle =\n\t\tstyles[ `embed-preview__wrapper--align-${ align }` ];\n\tconst sandboxAlignStyle =\n\t\tstyles[ `embed-preview__sandbox--align-${ align }` ];\n\n\tfunction accessibilityLabelCreator( caption ) {\n\t\treturn ! caption\n\t\t\t? /* translators: accessibility text. Empty Embed caption. */\n\t\t\t  __( 'Embed caption. Empty' )\n\t\t\t: sprintf(\n\t\t\t\t\t/* translators: accessibility text. %s: Embed caption. */\n\t\t\t\t\t__( 'Embed caption. %s' ),\n\t\t\t\t\tcaption\n\t\t\t  );\n\t}\n\n\tfunction onEmbedPreviewPress() {\n\t\tsetIsCaptionSelected( false );\n\t}\n\n\tfunction onFocusCaption() {\n\t\tif ( onFocus ) {\n\t\t\tonFocus();\n\t\t}\n\t\tif ( ! isCaptionSelected ) {\n\t\t\tsetIsCaptionSelected( true );\n\t\t}\n\t}\n\n\tconst { provider_url: providerUrl } = preview;\n\tconst html = 'photo' === type ? getPhotoHtml( preview ) : preview.html;\n\tconst parsedHost = new URL( url ).host.split( '.' );\n\tconst parsedHostBaseUrl = parsedHost\n\t\t.splice( parsedHost.length - 2, parsedHost.length - 1 )\n\t\t.join( '.' );\n\tconst iframeTitle = sprintf(\n\t\t// translators: %s: host providing embed content e.g: www.youtube.com\n\t\t__( 'Embedded content from %s' ),\n\t\tparsedHostBaseUrl\n\t);\n\tconst sandboxClassnames = classnames(\n\t\ttype,\n\t\tclassName,\n\t\t'wp-block-embed__wrapper'\n\t);\n\n\tconst PreviewContent = 'wp-embed' === type ? WpEmbedPreview : SandBox;\n\tconst embedWrapper = (\n\t\t<>\n\t\t\t<TouchableWithoutFeedback\n\t\t\t\tonPress={ () => {\n\t\t\t\t\tif ( onFocus ) {\n\t\t\t\t\t\tonFocus();\n\t\t\t\t\t}\n\t\t\t\t\tif ( isCaptionSelected ) {\n\t\t\t\t\t\tsetIsCaptionSelected( false );\n\t\t\t\t\t}\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t<View\n\t\t\t\t\tpointerEvents=\"box-only\"\n\t\t\t\t\tstyle={ [ wrapperStyle, wrapperAlignStyle ] }\n\t\t\t\t>\n\t\t\t\t\t<PreviewContent\n\t\t\t\t\t\thtml={ html }\n\t\t\t\t\t\tlang={ locale }\n\t\t\t\t\t\ttitle={ iframeTitle }\n\t\t\t\t\t\ttype={ sandboxClassnames }\n\t\t\t\t\t\tproviderUrl={ providerUrl }\n\t\t\t\t\t\turl={ url }\n\t\t\t\t\t\tcontainerStyle={ sandboxAlignStyle }\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t</TouchableWithoutFeedback>\n\t\t</>\n\t);\n\treturn (\n\t\t<TouchableWithoutFeedback\n\t\t\taccessible={ ! isSelected }\n\t\t\tonPress={ onEmbedPreviewPress }\n\t\t\tdisabled={ ! isSelected }\n\t\t>\n\t\t\t<View>\n\t\t\t\t{ isProviderPreviewable && previewable ? (\n\t\t\t\t\tembedWrapper\n\t\t\t\t) : (\n\t\t\t\t\t<EmbedNoPreview\n\t\t\t\t\t\tlabel={ label }\n\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\tonPress={ () => setIsCaptionSelected( false ) }\n\t\t\t\t\t\tpreviewable={ previewable }\n\t\t\t\t\t\tisDefaultEmbedInfo={ isDefaultEmbedInfo }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t<BlockCaption\n\t\t\t\t\taccessibilityLabelCreator={ accessibilityLabelCreator }\n\t\t\t\t\taccessible\n\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\tinsertBlocksAfter={ insertBlocksAfter }\n\t\t\t\t\tisSelected={ isCaptionSelected }\n\t\t\t\t\tonFocus={ onFocusCaption }\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</TouchableWithoutFeedback>\n\t);\n};\n\nexport default memo( EmbedPreview );\n"]}