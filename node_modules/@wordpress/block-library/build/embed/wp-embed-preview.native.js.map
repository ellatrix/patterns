{"version":3,"sources":["@wordpress/block-library/src/embed/wp-embed-preview.native.js"],"names":["observeAndResizeJS","WpEmbedPreview","html","rest","wpEmbedHtml","doc","window","DOMParser","parseFromString","iframe","querySelector","removeAttribute","blockQuote","innerHTML","body"],"mappings":";;;;;;;;;AAGA;;;;AACA;;AAJA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,kBAAkB,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAlCA;;AAoCA,SAASC,cAAT,OAA6C;AAAA,MAApB;AAAEC,IAAAA,IAAF;AAAQ,OAAGC;AAAX,GAAoB;AAC5C,QAAMC,WAAW,GAAG,sBAAS,MAAM;AAClC,UAAMC,GAAG,GAAG,IAAIC,MAAM,CAACC,SAAX,GAAuBC,eAAvB,CAAwCN,IAAxC,EAA8C,WAA9C,CAAZ;AACA,UAAMO,MAAM,GAAGJ,GAAG,CAACK,aAAJ,CAAmB,QAAnB,CAAf;;AAEA,QAAKD,MAAL,EAAc;AACbA,MAAAA,MAAM,CAACE,eAAP,CAAwB,OAAxB;AACA;;AAED,UAAMC,UAAU,GAAGP,GAAG,CAACK,aAAJ,CAAmB,YAAnB,CAAnB;;AAEA,QAAKE,UAAL,EAAkB;AACjBA,MAAAA,UAAU,CAACC,SAAX,GAAuB,EAAvB;AACA;;AAED,WAAOR,GAAG,CAACS,IAAJ,CAASD,SAAhB;AACA,GAfmB,EAejB,CAAEX,IAAF,CAfiB,CAApB;AAiBA,SACC,4BAAC,mBAAD;AACC,IAAA,QAAQ,EAAGF,kBADZ;AAEC,IAAA,IAAI,EAAGI;AAFR,KAGMD,IAHN,EADD;AAOA;;eAEc,mBAAMF,cAAN,C","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { memo, useMemo } from '@wordpress/element';\nimport { SandBox } from '@wordpress/components';\n\n/**\n * Checks for WordPress embed events signaling the height change when iframe\n * content loads or iframe's window is resized.  The event is sent from\n * WordPress core via the window.postMessage API.\n *\n * References:\n * window.postMessage: https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n * WordPress core embed-template on load: https://github.com/WordPress/WordPress/blob/HEAD/wp-includes/js/wp-embed-template.js#L143\n * WordPress core embed-template on resize: https://github.com/WordPress/WordPress/blob/HEAD/wp-includes/js/wp-embed-template.js#L187\n */\nconst observeAndResizeJS = `\n    ( function() {\n        if ( ! document.body || ! window.parent ) {\n            return;\n        }\n\n        function sendResize( { data: { secret, message, value } = {} } ) {\n            if (\n                [ secret, message, value ].some(\n                    ( attribute ) => ! attribute\n                ) ||\n                message !== 'height'\n            ) {\n                return;\n            }\n\n            document\n                .querySelectorAll( 'iframe[data-secret=\"' + secret + '\"' )\n                .forEach( ( iframe ) => {  \n                    if ( +iframe.height !== value ) {\n                        iframe.height = value;\n                    }\n                } );\n\n            // The function postMessage is exposed by the react-native-webview library \n            // to communicate between React Native and the WebView, in this case, \n            // we use it for notifying resize changes.\n            window.ReactNativeWebView.postMessage(JSON.stringify( {\n                action: 'resize',\n                height: value,\n            }));\n        }\n\n        window.addEventListener( 'message', sendResize );\n} )();`;\n\nfunction WpEmbedPreview( { html, ...rest } ) {\n\tconst wpEmbedHtml = useMemo( () => {\n\t\tconst doc = new window.DOMParser().parseFromString( html, 'text/html' );\n\t\tconst iframe = doc.querySelector( 'iframe' );\n\n\t\tif ( iframe ) {\n\t\t\tiframe.removeAttribute( 'style' );\n\t\t}\n\n\t\tconst blockQuote = doc.querySelector( 'blockquote' );\n\n\t\tif ( blockQuote ) {\n\t\t\tblockQuote.innerHTML = '';\n\t\t}\n\n\t\treturn doc.body.innerHTML;\n\t}, [ html ] );\n\n\treturn (\n\t\t<SandBox\n\t\t\tcustomJS={ observeAndResizeJS }\n\t\t\thtml={ wpEmbedHtml }\n\t\t\t{ ...rest }\n\t\t/>\n\t);\n}\n\nexport default memo( WpEmbedPreview );\n"]}