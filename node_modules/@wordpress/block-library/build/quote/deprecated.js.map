{"version":3,"sources":["@wordpress/block-library/src/quote/deprecated.js"],"names":["migrateToQuoteV2","attributes","value","restAttributes","type","source","selector","query","content","map","v3","multiline","default","__experimentalRole","citation","align","supports","anchor","__experimentalSlashInserter","typography","fontSize","lineHeight","__experimentalFontStyle","__experimentalFontWeight","__experimentalLetterSpacing","__experimentalTextTransform","__experimentalDefaultControls","fontAppearance","save","className","useBlockProps","RichText","isEmpty","migrate","v2","textAlign","v1","style","v0","isNaN","parseInt"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { createBlock, parseWithAttributeSchema } from '@wordpress/blocks';\nimport { RichText, useBlockProps } from '@wordpress/block-editor';\n\nexport const migrateToQuoteV2 = ( attributes ) => {\n\tconst { value, ...restAttributes } = attributes;\n\n\treturn [\n\t\t{\n\t\t\t...restAttributes,\n\t\t},\n\t\tvalue\n\t\t\t? parseWithAttributeSchema( value, {\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\tsource: 'query',\n\t\t\t\t\tselector: 'p',\n\t\t\t\t\tquery: {\n\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tsource: 'html',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t  } ).map( ( { content } ) =>\n\t\t\t\t\tcreateBlock( 'core/paragraph', { content } )\n\t\t\t  )\n\t\t\t: createBlock( 'core/paragraph' ),\n\t];\n};\n\nconst v3 = {\n\tattributes: {\n\t\tvalue: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tselector: 'blockquote',\n\t\t\tmultiline: 'p',\n\t\t\tdefault: '',\n\t\t\t__experimentalRole: 'content',\n\t\t},\n\t\tcitation: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tselector: 'cite',\n\t\t\tdefault: '',\n\t\t\t__experimentalRole: 'content',\n\t\t},\n\t\talign: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\tsupports: {\n\t\tanchor: true,\n\t\t__experimentalSlashInserter: true,\n\t\ttypography: {\n\t\t\tfontSize: true,\n\t\t\tlineHeight: true,\n\t\t\t__experimentalFontStyle: true,\n\t\t\t__experimentalFontWeight: true,\n\t\t\t__experimentalLetterSpacing: true,\n\t\t\t__experimentalTextTransform: true,\n\t\t\t__experimentalDefaultControls: {\n\t\t\t\tfontSize: true,\n\t\t\t\tfontAppearance: true,\n\t\t\t},\n\t\t},\n\t},\n\tsave( { attributes } ) {\n\t\tconst { align, value, citation } = attributes;\n\n\t\tconst className = classnames( {\n\t\t\t[ `has-text-align-${ align }` ]: align,\n\t\t} );\n\n\t\treturn (\n\t\t\t<blockquote { ...useBlockProps.save( { className } ) }>\n\t\t\t\t<RichText.Content multiline value={ value } />\n\t\t\t\t{ ! RichText.isEmpty( citation ) && (\n\t\t\t\t\t<RichText.Content tagName=\"cite\" value={ citation } />\n\t\t\t\t) }\n\t\t\t</blockquote>\n\t\t);\n\t},\n\tmigrate: migrateToQuoteV2,\n};\n\nconst v2 = {\n\tattributes: {\n\t\tvalue: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tselector: 'blockquote',\n\t\t\tmultiline: 'p',\n\t\t\tdefault: '',\n\t\t},\n\t\tcitation: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tselector: 'cite',\n\t\t\tdefault: '',\n\t\t},\n\t\talign: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\tmigrate: migrateToQuoteV2,\n\tsave( { attributes } ) {\n\t\tconst { align, value, citation } = attributes;\n\n\t\treturn (\n\t\t\t<blockquote style={ { textAlign: align ? align : null } }>\n\t\t\t\t<RichText.Content multiline value={ value } />\n\t\t\t\t{ ! RichText.isEmpty( citation ) && (\n\t\t\t\t\t<RichText.Content tagName=\"cite\" value={ citation } />\n\t\t\t\t) }\n\t\t\t</blockquote>\n\t\t);\n\t},\n};\n\nconst v1 = {\n\tattributes: {\n\t\tvalue: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tselector: 'blockquote',\n\t\t\tmultiline: 'p',\n\t\t\tdefault: '',\n\t\t},\n\t\tcitation: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tselector: 'cite',\n\t\t\tdefault: '',\n\t\t},\n\t\talign: {\n\t\t\ttype: 'string',\n\t\t},\n\t\tstyle: {\n\t\t\ttype: 'number',\n\t\t\tdefault: 1,\n\t\t},\n\t},\n\n\tmigrate( attributes ) {\n\t\tif ( attributes.style === 2 ) {\n\t\t\tconst { style, ...restAttributes } = attributes;\n\t\t\treturn migrateToQuoteV2( {\n\t\t\t\t...restAttributes,\n\t\t\t\tclassName: attributes.className\n\t\t\t\t\t? attributes.className + ' is-style-large'\n\t\t\t\t\t: 'is-style-large',\n\t\t\t} );\n\t\t}\n\n\t\treturn migrateToQuoteV2( attributes );\n\t},\n\n\tsave( { attributes } ) {\n\t\tconst { align, value, citation, style } = attributes;\n\n\t\treturn (\n\t\t\t<blockquote\n\t\t\t\tclassName={ style === 2 ? 'is-large' : '' }\n\t\t\t\tstyle={ { textAlign: align ? align : null } }\n\t\t\t>\n\t\t\t\t<RichText.Content multiline value={ value } />\n\t\t\t\t{ ! RichText.isEmpty( citation ) && (\n\t\t\t\t\t<RichText.Content tagName=\"cite\" value={ citation } />\n\t\t\t\t) }\n\t\t\t</blockquote>\n\t\t);\n\t},\n};\n\nconst v0 = {\n\tattributes: {\n\t\tvalue: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tselector: 'blockquote',\n\t\t\tmultiline: 'p',\n\t\t\tdefault: '',\n\t\t},\n\t\tcitation: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tselector: 'footer',\n\t\t\tdefault: '',\n\t\t},\n\t\talign: {\n\t\t\ttype: 'string',\n\t\t},\n\t\tstyle: {\n\t\t\ttype: 'number',\n\t\t\tdefault: 1,\n\t\t},\n\t},\n\n\tmigrate( attributes ) {\n\t\tif ( ! isNaN( parseInt( attributes.style ) ) ) {\n\t\t\tconst { style, ...restAttributes } = attributes;\n\t\t\treturn migrateToQuoteV2( {\n\t\t\t\t...restAttributes,\n\t\t\t} );\n\t\t}\n\n\t\treturn migrateToQuoteV2( attributes );\n\t},\n\n\tsave( { attributes } ) {\n\t\tconst { align, value, citation, style } = attributes;\n\n\t\treturn (\n\t\t\t<blockquote\n\t\t\t\tclassName={ `blocks-quote-style-${ style }` }\n\t\t\t\tstyle={ { textAlign: align ? align : null } }\n\t\t\t>\n\t\t\t\t<RichText.Content multiline value={ value } />\n\t\t\t\t{ ! RichText.isEmpty( citation ) && (\n\t\t\t\t\t<RichText.Content tagName=\"footer\" value={ citation } />\n\t\t\t\t) }\n\t\t\t</blockquote>\n\t\t);\n\t},\n};\n\n/**\n * New deprecations need to be placed first\n * for them to have higher priority.\n *\n * Old deprecations may need to be updated as well.\n *\n * See block-deprecation.md\n */\nexport default [ v3, v2, v1, v0 ];\n"]}