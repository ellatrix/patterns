"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ModalEdit;

var _element = require("@wordpress/element");

var _blockEditor = require("@wordpress/block-editor");

var _components = require("@wordpress/components");

var _i18n = require("@wordpress/i18n");

var _data = require("@wordpress/data");

/**
 * WordPress dependencies
 */
function ClassicEdit(props) {
  const styles = (0, _data.useSelect)(select => select(_blockEditor.store).getSettings().styles);
  (0, _element.useEffect)(() => {
    const {
      baseURL,
      suffix,
      settings
    } = window.wpEditorL10n.tinymce;
    window.tinymce.EditorManager.overrideDefaults({
      base_url: baseURL,
      suffix
    });
    window.wp.oldEditor.initialize(props.id, {
      tinymce: { ...settings,
        height: 500,

        setup(editor) {
          editor.on('init', () => {
            const doc = editor.getDoc();
            styles.forEach(_ref => {
              let {
                css
              } = _ref;
              const styleEl = doc.createElement('style');
              styleEl.innerHTML = css;
              doc.head.appendChild(styleEl);
            });
          });
        }

      }
    });
    return () => {
      window.wp.oldEditor.remove(props.id);
    };
  }, []);
  return (0, _element.createElement)("textarea", props);
}

function ModalEdit(props) {
  const {
    clientId,
    attributes: {
      content
    },
    setAttributes,
    onReplace
  } = props;
  const [isOpen, setOpen] = (0, _element.useState)(false);
  const id = `editor-${clientId}`;
  const label = (0, _i18n.__)('Classic Edit');
  return (0, _element.createElement)(_element.Fragment, null, (0, _element.createElement)(_blockEditor.BlockControls, null, (0, _element.createElement)(_components.ToolbarGroup, null, (0, _element.createElement)(_components.ToolbarButton, {
    onClick: () => setOpen(true)
  }, label))), content && (0, _element.createElement)(_element.RawHTML, null, content), (isOpen || !content) && (0, _element.createElement)(_components.Modal, {
    title: label,
    __experimentalHideHeader: true
  }, (0, _element.createElement)("h2", {
    style: {
      display: 'flex',
      justifyContent: 'space-between'
    }
  }, (0, _element.createElement)("div", null, label), (0, _element.createElement)("div", null, (0, _element.createElement)(_components.Button, {
    onClick: () => content ? setOpen(false) : onReplace([])
  }, (0, _i18n.__)('Cancel')), (0, _element.createElement)(_components.Button, {
    variant: "primary",
    onClick: () => {
      setAttributes({
        content: window.wp.oldEditor.getContent(id)
      });
      setOpen(false);
    }
  }, (0, _i18n.__)('Save')))), (0, _element.createElement)(ClassicEdit, {
    id: id,
    defaultValue: content
  })));
}
//# sourceMappingURL=modal.js.map