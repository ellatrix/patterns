"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = HTMLEditPreview;

var _element = require("@wordpress/element");

var _blockEditor = require("@wordpress/block-editor");

var _components = require("@wordpress/components");

var _data = require("@wordpress/data");

/**
 * WordPress dependencies
 */
// Default styles used to unset some of the styles
// that might be inherited from the editor style.
const DEFAULT_STYLES = `
	html,body,:root {
		margin: 0 !important;
		padding: 0 !important;
		overflow: visible !important;
		min-height: auto !important;
	}
`;

function HTMLEditPreview(_ref) {
  let {
    content,
    isSelected
  } = _ref;
  const settingStyles = (0, _data.useSelect)(select => {
    var _select$getSettings;

    return (_select$getSettings = select(_blockEditor.store).getSettings()) === null || _select$getSettings === void 0 ? void 0 : _select$getSettings.styles;
  }, []);
  const styles = (0, _element.useMemo)(() => [DEFAULT_STYLES, ...(0, _blockEditor.transformStyles)(settingStyles)], [settingStyles]);
  return (0, _element.createElement)(_element.Fragment, null, (0, _element.createElement)(_components.SandBox, {
    html: content,
    styles: styles
  }), !isSelected && (0, _element.createElement)("div", {
    className: "block-library-html__preview-overlay"
  }));
}
//# sourceMappingURL=preview.js.map