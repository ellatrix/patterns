{"version":3,"sources":["@wordpress/block-library/src/comment-content/edit.js"],"names":["Edit","setAttributes","attributes","textAlign","context","commentId","blockProps","className","content","blockControls","newAlign","rendered"],"mappings":";;;;;;;;;AASA;;AANA;;AAKA;;AAEA;;AACA;;AACA;;AAZA;AACA;AACA;;AAGA;AACA;AACA;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,IAAT,OAIX;AAAA,MAJ0B;AAC7BC,IAAAA,aAD6B;AAE7BC,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF,KAFiB;AAG7BC,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AAHoB,GAI1B;AACH,QAAMC,UAAU,GAAG,gCAAe;AACjCC,IAAAA,SAAS,EAAE,yBAAY;AACtB,OAAG,kBAAkBJ,SAAW,EAAhC,GAAqCA;AADf,KAAZ;AADsB,GAAf,CAAnB;AAKA,QAAM,CAAEK,OAAF,IAAc,6BACnB,MADmB,EAEnB,SAFmB,EAGnB,SAHmB,EAInBH,SAJmB,CAApB;AAOA,QAAMI,aAAa,GAClB,4BAAC,0BAAD;AAAe,IAAA,KAAK,EAAC;AAArB,KACC,4BAAC,6BAAD;AACC,IAAA,KAAK,EAAGN,SADT;AAEC,IAAA,QAAQ,EAAKO,QAAF,IACVT,aAAa,CAAE;AAAEE,MAAAA,SAAS,EAAEO;AAAb,KAAF;AAHf,IADD,CADD;;AAWA,MAAK,CAAEL,SAAF,IAAe,CAAEG,OAAtB,EAAgC;AAC/B,WACC,qDACGC,aADH,EAEC,mCAAUH,UAAV,EACC,uCAAK,cAAI,iBAAJ,EAAuB,aAAvB,CAAL,CADD,CAFD,CADD;AAQA;;AAED,SACC,qDACGG,aADH,EAEC,mCAAUH,UAAV,EACC,4BAAC,oBAAD,QACC,4BAAC,gBAAD;AAAS,IAAA,GAAG,EAAC;AAAb,KAAsBE,OAAO,CAACG,QAA9B,CADD,CADD,CAFD,CADD;AAUA","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { _x } from '@wordpress/i18n';\nimport { RawHTML } from '@wordpress/element';\nimport { Disabled } from '@wordpress/components';\nimport { useEntityProp } from '@wordpress/core-data';\nimport {\n\tAlignmentControl,\n\tBlockControls,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\n\n/**\n * Renders the `core/comment-content` block on the editor.\n *\n * @param {Object} props                      React props.\n * @param {Object} props.setAttributes        Callback for updating block attributes.\n * @param {Object} props.attributes           Block attributes.\n * @param {string} props.attributes.textAlign The `textAlign` attribute.\n * @param {Object} props.context              Inherited context.\n * @param {string} props.context.commentId    The comment ID.\n *\n * @return {JSX.Element} React element.\n */\nexport default function Edit( {\n\tsetAttributes,\n\tattributes: { textAlign },\n\tcontext: { commentId },\n} ) {\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t} ),\n\t} );\n\tconst [ content ] = useEntityProp(\n\t\t'root',\n\t\t'comment',\n\t\t'content',\n\t\tcommentId\n\t);\n\n\tconst blockControls = (\n\t\t<BlockControls group=\"block\">\n\t\t\t<AlignmentControl\n\t\t\t\tvalue={ textAlign }\n\t\t\t\tonChange={ ( newAlign ) =>\n\t\t\t\t\tsetAttributes( { textAlign: newAlign } )\n\t\t\t\t}\n\t\t\t/>\n\t\t</BlockControls>\n\t);\n\n\tif ( ! commentId || ! content ) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ blockControls }\n\t\t\t\t<div { ...blockProps }>\n\t\t\t\t\t<p>{ _x( 'Comment Content', 'block title' ) }</p>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ blockControls }\n\t\t\t<div { ...blockProps }>\n\t\t\t\t<Disabled>\n\t\t\t\t\t<RawHTML key=\"html\">{ content.rendered }</RawHTML>\n\t\t\t\t</Disabled>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n"]}