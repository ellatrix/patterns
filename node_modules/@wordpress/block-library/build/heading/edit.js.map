{"version":3,"sources":["@wordpress/block-library/src/heading/edit.js"],"names":["HeadingEdit","attributes","setAttributes","mergeBlocks","onReplace","style","clientId","textAlign","content","level","placeholder","anchor","tagName","blockProps","className","canGenerateAnchors","select","getGlobalBlockCount","getSettings","blockEditorStore","settings","generateAnchors","__unstableMarkNextChangeAsNotPersistent","onContentChange","value","newAttrs","newLevel","nextAlign","isOriginal","block","Platform","isNative","deleteEnter"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useEffect, Platform } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { createBlock, getDefaultBlockName } from '@wordpress/blocks';\nimport {\n\tAlignmentControl,\n\tBlockControls,\n\tRichText,\n\tuseBlockProps,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport HeadingLevelDropdown from './heading-level-dropdown';\nimport { generateAnchor, setAnchor } from './autogenerate-anchors';\n\nfunction HeadingEdit( {\n\tattributes,\n\tsetAttributes,\n\tmergeBlocks,\n\tonReplace,\n\tstyle,\n\tclientId,\n} ) {\n\tconst { textAlign, content, level, placeholder, anchor } = attributes;\n\tconst tagName = 'h' + level;\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t} ),\n\t\tstyle,\n\t} );\n\n\tconst { canGenerateAnchors } = useSelect( ( select ) => {\n\t\tconst { getGlobalBlockCount, getSettings } = select( blockEditorStore );\n\t\tconst settings = getSettings();\n\n\t\treturn {\n\t\t\tcanGenerateAnchors:\n\t\t\t\t!! settings.generateAnchors ||\n\t\t\t\tgetGlobalBlockCount( 'core/table-of-contents' ) > 0,\n\t\t};\n\t}, [] );\n\n\tconst { __unstableMarkNextChangeAsNotPersistent } =\n\t\tuseDispatch( blockEditorStore );\n\n\t// Initially set anchor for headings that have content but no anchor set.\n\t// This is used when transforming a block to heading, or for legacy anchors.\n\tuseEffect( () => {\n\t\tif ( ! canGenerateAnchors ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! anchor && content ) {\n\t\t\t// This side-effect should not create an undo level.\n\t\t\t__unstableMarkNextChangeAsNotPersistent();\n\t\t\tsetAttributes( {\n\t\t\t\tanchor: generateAnchor( clientId, content ),\n\t\t\t} );\n\t\t}\n\t\tsetAnchor( clientId, anchor );\n\n\t\t// Remove anchor map when block unmounts.\n\t\treturn () => setAnchor( clientId, null );\n\t}, [ anchor, content, clientId, canGenerateAnchors ] );\n\n\tconst onContentChange = ( value ) => {\n\t\tconst newAttrs = { content: value };\n\t\tif (\n\t\t\tcanGenerateAnchors &&\n\t\t\t( ! anchor ||\n\t\t\t\t! value ||\n\t\t\t\tgenerateAnchor( clientId, content ) === anchor )\n\t\t) {\n\t\t\tnewAttrs.anchor = generateAnchor( clientId, value );\n\t\t}\n\t\tsetAttributes( newAttrs );\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<HeadingLevelDropdown\n\t\t\t\t\tselectedLevel={ level }\n\t\t\t\t\tonChange={ ( newLevel ) =>\n\t\t\t\t\t\tsetAttributes( { level: newLevel } )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<AlignmentControl\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<RichText\n\t\t\t\tidentifier=\"content\"\n\t\t\t\ttagName={ tagName }\n\t\t\t\tvalue={ content }\n\t\t\t\tonChange={ onContentChange }\n\t\t\t\tonMerge={ mergeBlocks }\n\t\t\t\tonSplit={ ( value, isOriginal ) => {\n\t\t\t\t\tlet block;\n\n\t\t\t\t\tif ( isOriginal || value ) {\n\t\t\t\t\t\tblock = createBlock( 'core/heading', {\n\t\t\t\t\t\t\t...attributes,\n\t\t\t\t\t\t\tcontent: value,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tblock = createBlock(\n\t\t\t\t\t\t\tgetDefaultBlockName() ?? 'core/heading'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isOriginal ) {\n\t\t\t\t\t\tblock.clientId = clientId;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn block;\n\t\t\t\t} }\n\t\t\t\tonReplace={ onReplace }\n\t\t\t\tonRemove={ () => onReplace( [] ) }\n\t\t\t\taria-label={ __( 'Heading text' ) }\n\t\t\t\tplaceholder={ placeholder || __( 'Heading' ) }\n\t\t\t\ttextAlign={ textAlign }\n\t\t\t\t{ ...( Platform.isNative && { deleteEnter: true } ) } // setup RichText on native mobile to delete the \"Enter\" key as it's handled by the JS/RN side\n\t\t\t\t{ ...blockProps }\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default HeadingEdit;\n"]}