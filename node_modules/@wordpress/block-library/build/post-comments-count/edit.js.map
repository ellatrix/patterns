{"version":3,"sources":["@wordpress/block-library/src/post-comments-count/edit.js"],"names":["PostCommentsCountEdit","attributes","context","setAttributes","textAlign","postId","commentsCount","setCommentsCount","blockProps","className","currentPostId","path","post","parse","then","res","headers","get","hasPostAndComments","undefined","blockStyles","style","textDecoration","nextAlign"],"mappings":";;;;;;;;;AAcA;;;;AAXA;;AAKA;;AAOA;;AACA;;AACA;;AAjBA;AACA;AACA;;AAGA;AACA;AACA;AAYe,SAASA,qBAAT,OAIX;AAAA;;AAAA,MAJ2C;AAC9CC,IAAAA,UAD8C;AAE9CC,IAAAA,OAF8C;AAG9CC,IAAAA;AAH8C,GAI3C;AACH,QAAM;AAAEC,IAAAA;AAAF,MAAgBH,UAAtB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAaH,OAAnB;AACA,QAAM,CAAEI,aAAF,EAAiBC,gBAAjB,IAAsC,wBAA5C;AACA,QAAMC,UAAU,GAAG,gCAAe;AACjCC,IAAAA,SAAS,EAAE,yBAAY;AACtB,OAAG,kBAAkBL,SAAW,EAAhC,GAAqCA;AADf,KAAZ;AADsB,GAAf,CAAnB;AAMA,0BAAW,MAAM;AAChB,QAAK,CAAEC,MAAP,EAAgB;AACf;AACA;;AACD,UAAMK,aAAa,GAAGL,MAAtB;AACA,2BAAU;AACTM,MAAAA,IAAI,EAAE,uBAAc,iBAAd,EAAiC;AACtCC,QAAAA,IAAI,EAAEP;AADgC,OAAjC,CADG;AAITQ,MAAAA,KAAK,EAAE;AAJE,KAAV,EAKIC,IALJ,CAKYC,GAAF,IAAW;AACpB;AACA,UAAKL,aAAa,KAAKL,MAAvB,EAAgC;AAC/BE,QAAAA,gBAAgB,CAAEQ,GAAG,CAACC,OAAJ,CAAYC,GAAZ,CAAiB,YAAjB,CAAF,CAAhB;AACA;AACD,KAVD;AAWA,GAhBD,EAgBG,CAAEZ,MAAF,CAhBH;AAkBA,QAAMa,kBAAkB,GAAGb,MAAM,IAAIC,aAAa,KAAKa,SAAvD;AACA,QAAMC,WAAW,GAAG,EACnB,GAAGZ,UAAU,CAACa,KADK;AAEnBC,IAAAA,cAAc,EAAEJ,kBAAkB,wBAC/BV,UAAU,CAACa,KADoB,sDAC/B,kBAAkBC,cADa,GAE/BH;AAJgB,GAApB;AAOA,SACC,qDACC,4BAAC,0BAAD;AAAe,IAAA,KAAK,EAAC;AAArB,KACC,4BAAC,6BAAD;AACC,IAAA,KAAK,EAAGf,SADT;AAEC,IAAA,QAAQ,EAAKmB,SAAF,IAAiB;AAC3BpB,MAAAA,aAAa,CAAE;AAAEC,QAAAA,SAAS,EAAEmB;AAAb,OAAF,CAAb;AACA;AAJF,IADD,CADD,EASC,8DAAUf,UAAV;AAAuB,IAAA,KAAK,EAAGY;AAA/B,MACGF,kBAAkB,GACnBZ,aADmB,GAGnB,4BAAC,oBAAD,QACG,cAAI,4CAAJ,CADH,CAJF,CATD,CADD;AAqBA","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tAlignmentControl,\n\tBlockControls,\n\tWarning,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\nimport { useState, useEffect } from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\nimport { addQueryArgs } from '@wordpress/url';\nimport { __ } from '@wordpress/i18n';\n\nexport default function PostCommentsCountEdit( {\n\tattributes,\n\tcontext,\n\tsetAttributes,\n} ) {\n\tconst { textAlign } = attributes;\n\tconst { postId } = context;\n\tconst [ commentsCount, setCommentsCount ] = useState();\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t} ),\n\t} );\n\n\tuseEffect( () => {\n\t\tif ( ! postId ) {\n\t\t\treturn;\n\t\t}\n\t\tconst currentPostId = postId;\n\t\tapiFetch( {\n\t\t\tpath: addQueryArgs( '/wp/v2/comments', {\n\t\t\t\tpost: postId,\n\t\t\t} ),\n\t\t\tparse: false,\n\t\t} ).then( ( res ) => {\n\t\t\t// Stale requests will have the `currentPostId` of an older closure.\n\t\t\tif ( currentPostId === postId ) {\n\t\t\t\tsetCommentsCount( res.headers.get( 'X-WP-Total' ) );\n\t\t\t}\n\t\t} );\n\t}, [ postId ] );\n\n\tconst hasPostAndComments = postId && commentsCount !== undefined;\n\tconst blockStyles = {\n\t\t...blockProps.style,\n\t\ttextDecoration: hasPostAndComments\n\t\t\t? blockProps.style?.textDecoration\n\t\t\t: undefined,\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<AlignmentControl\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<div { ...blockProps } style={ blockStyles }>\n\t\t\t\t{ hasPostAndComments ? (\n\t\t\t\t\tcommentsCount\n\t\t\t\t) : (\n\t\t\t\t\t<Warning>\n\t\t\t\t\t\t{ __( 'Post Comments Count block: post not found.' ) }\n\t\t\t\t\t</Warning>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</>\n\t);\n}\n"]}