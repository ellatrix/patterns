{"version":3,"sources":["@wordpress/block-library/src/pullquote/deprecated.js"],"names":["blockAttributes","value","type","source","selector","multiline","citation","default","mainColor","customMainColor","textColor","customTextColor","parseBorderColor","styleString","matches","match","multilineToInline","html","multilineTag","RegExp","__UNSTABLE_LINE_SEPARATOR","v5","attributes","__experimentalRole","textAlign","save","shouldShowCitation","RichText","isEmpty","useBlockProps","className","migrate","v4","isSolidColorStyle","includes","SOLID_COLOR_CLASS","figureClasses","figureStyles","backgroundClass","backgroundColor","undefined","borderColor","blockquoteTextColorClass","blockquoteClasses","blockquoteStyles","color","style","border","background","text","v3","figureStyle","attribute","v2","figureClass","colors","blockEditorStore","getSettings","colorObject","blockquoteStyle","v1","v0","align"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tgetColorClassName,\n\tgetColorObjectByAttributeValues,\n\tRichText,\n\tstore as blockEditorStore,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\nimport { select } from '@wordpress/data';\nimport {\n\tcreate,\n\treplace,\n\ttoHTMLString,\n\t__UNSTABLE_LINE_SEPARATOR,\n} from '@wordpress/rich-text';\n\n/**\n * Internal dependencies\n */\nimport { SOLID_COLOR_CLASS } from './shared';\n\nconst blockAttributes = {\n\tvalue: {\n\t\ttype: 'string',\n\t\tsource: 'html',\n\t\tselector: 'blockquote',\n\t\tmultiline: 'p',\n\t},\n\tcitation: {\n\t\ttype: 'string',\n\t\tsource: 'html',\n\t\tselector: 'cite',\n\t\tdefault: '',\n\t},\n\tmainColor: {\n\t\ttype: 'string',\n\t},\n\tcustomMainColor: {\n\t\ttype: 'string',\n\t},\n\ttextColor: {\n\t\ttype: 'string',\n\t},\n\tcustomTextColor: {\n\t\ttype: 'string',\n\t},\n};\n\nfunction parseBorderColor( styleString ) {\n\tif ( ! styleString ) {\n\t\treturn;\n\t}\n\tconst matches = styleString.match( /border-color:([^;]+)[;]?/ );\n\tif ( matches && matches[ 1 ] ) {\n\t\treturn matches[ 1 ];\n\t}\n}\n\nfunction multilineToInline( value ) {\n\treturn toHTMLString( {\n\t\tvalue: replace(\n\t\t\tcreate( { html: value, multilineTag: 'p' } ),\n\t\t\tnew RegExp( __UNSTABLE_LINE_SEPARATOR, 'g' ),\n\t\t\t'\\n'\n\t\t),\n\t} );\n}\n\nconst v5 = {\n\tattributes: {\n\t\tvalue: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tselector: 'blockquote',\n\t\t\tmultiline: 'p',\n\t\t\t__experimentalRole: 'content',\n\t\t},\n\t\tcitation: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tselector: 'cite',\n\t\t\tdefault: '',\n\t\t\t__experimentalRole: 'content',\n\t\t},\n\t\ttextAlign: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\tsave( { attributes } ) {\n\t\tconst { textAlign, citation, value } = attributes;\n\t\tconst shouldShowCitation = ! RichText.isEmpty( citation );\n\n\t\treturn (\n\t\t\t<figure\n\t\t\t\t{ ...useBlockProps.save( {\n\t\t\t\t\tclassName: classnames( {\n\t\t\t\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t\t\t\t} ),\n\t\t\t\t} ) }\n\t\t\t>\n\t\t\t\t<blockquote>\n\t\t\t\t\t<RichText.Content value={ value } multiline />\n\t\t\t\t\t{ shouldShowCitation && (\n\t\t\t\t\t\t<RichText.Content tagName=\"cite\" value={ citation } />\n\t\t\t\t\t) }\n\t\t\t\t</blockquote>\n\t\t\t</figure>\n\t\t);\n\t},\n\tmigrate( { value, ...attributes } ) {\n\t\treturn {\n\t\t\tvalue: multilineToInline( value ),\n\t\t\t...attributes,\n\t\t};\n\t},\n};\n\n// TODO: this is ripe for a bit of a clean up according to the example in https://developer.wordpress.org/block-editor/reference-guides/block-api/block-deprecation/#example\n\nconst v4 = {\n\tattributes: {\n\t\t...blockAttributes,\n\t},\n\tsave( { attributes } ) {\n\t\tconst {\n\t\t\tmainColor,\n\t\t\tcustomMainColor,\n\t\t\tcustomTextColor,\n\t\t\ttextColor,\n\t\t\tvalue,\n\t\t\tcitation,\n\t\t\tclassName,\n\t\t} = attributes;\n\n\t\tconst isSolidColorStyle = className?.includes( SOLID_COLOR_CLASS );\n\n\t\tlet figureClasses, figureStyles;\n\n\t\t// Is solid color style\n\t\tif ( isSolidColorStyle ) {\n\t\t\tconst backgroundClass = getColorClassName(\n\t\t\t\t'background-color',\n\t\t\t\tmainColor\n\t\t\t);\n\n\t\t\tfigureClasses = classnames( {\n\t\t\t\t'has-background': backgroundClass || customMainColor,\n\t\t\t\t[ backgroundClass ]: backgroundClass,\n\t\t\t} );\n\n\t\t\tfigureStyles = {\n\t\t\t\tbackgroundColor: backgroundClass ? undefined : customMainColor,\n\t\t\t};\n\t\t\t// Is normal style and a custom color is being used ( we can set a style directly with its value)\n\t\t} else if ( customMainColor ) {\n\t\t\tfigureStyles = {\n\t\t\t\tborderColor: customMainColor,\n\t\t\t};\n\t\t}\n\n\t\tconst blockquoteTextColorClass = getColorClassName(\n\t\t\t'color',\n\t\t\ttextColor\n\t\t);\n\t\tconst blockquoteClasses = classnames( {\n\t\t\t'has-text-color': textColor || customTextColor,\n\t\t\t[ blockquoteTextColorClass ]: blockquoteTextColorClass,\n\t\t} );\n\n\t\tconst blockquoteStyles = blockquoteTextColorClass\n\t\t\t? undefined\n\t\t\t: { color: customTextColor };\n\n\t\treturn (\n\t\t\t<figure\n\t\t\t\t{ ...useBlockProps.save( {\n\t\t\t\t\tclassName: figureClasses,\n\t\t\t\t\tstyle: figureStyles,\n\t\t\t\t} ) }\n\t\t\t>\n\t\t\t\t<blockquote\n\t\t\t\t\tclassName={ blockquoteClasses }\n\t\t\t\t\tstyle={ blockquoteStyles }\n\t\t\t\t>\n\t\t\t\t\t<RichText.Content value={ value } multiline />\n\t\t\t\t\t{ ! RichText.isEmpty( citation ) && (\n\t\t\t\t\t\t<RichText.Content tagName=\"cite\" value={ citation } />\n\t\t\t\t\t) }\n\t\t\t\t</blockquote>\n\t\t\t</figure>\n\t\t);\n\t},\n\tmigrate( {\n\t\tvalue,\n\t\tclassName,\n\t\tmainColor,\n\t\tcustomMainColor,\n\t\tcustomTextColor,\n\t\t...attributes\n\t} ) {\n\t\tconst isSolidColorStyle = className?.includes( SOLID_COLOR_CLASS );\n\t\tlet style;\n\n\t\tif ( customMainColor ) {\n\t\t\tif ( ! isSolidColorStyle ) {\n\t\t\t\t// Block supports: Set style.border.color if a deprecated block has a default style and a `customMainColor` attribute.\n\t\t\t\tstyle = {\n\t\t\t\t\tborder: {\n\t\t\t\t\t\tcolor: customMainColor,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// Block supports: Set style.color.background if a deprecated block has a solid style and a `customMainColor` attribute.\n\t\t\t\tstyle = {\n\t\t\t\t\tcolor: {\n\t\t\t\t\t\tbackground: customMainColor,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// Block supports: Set style.color.text if a deprecated block has a `customTextColor` attribute.\n\t\tif ( customTextColor && style ) {\n\t\t\tstyle.color = {\n\t\t\t\t...style.color,\n\t\t\t\ttext: customTextColor,\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tvalue: multilineToInline( value ),\n\t\t\tclassName,\n\t\t\tbackgroundColor: isSolidColorStyle ? mainColor : undefined,\n\t\t\tborderColor: isSolidColorStyle ? undefined : mainColor,\n\t\t\ttextAlign: isSolidColorStyle ? 'left' : undefined,\n\t\t\tstyle,\n\t\t\t...attributes,\n\t\t};\n\t},\n};\n\nconst v3 = {\n\tattributes: {\n\t\t...blockAttributes,\n\t\t// figureStyle is an attribute that never existed.\n\t\t// We are using it as a way to access the styles previously applied to the figure.\n\t\tfigureStyle: {\n\t\t\tsource: 'attribute',\n\t\t\tselector: 'figure',\n\t\t\tattribute: 'style',\n\t\t},\n\t},\n\tsave( { attributes } ) {\n\t\tconst {\n\t\t\tmainColor,\n\t\t\tcustomMainColor,\n\t\t\ttextColor,\n\t\t\tcustomTextColor,\n\t\t\tvalue,\n\t\t\tcitation,\n\t\t\tclassName,\n\t\t\tfigureStyle,\n\t\t} = attributes;\n\n\t\tconst isSolidColorStyle = className?.includes( SOLID_COLOR_CLASS );\n\n\t\tlet figureClasses, figureStyles;\n\n\t\t// Is solid color style\n\t\tif ( isSolidColorStyle ) {\n\t\t\tconst backgroundClass = getColorClassName(\n\t\t\t\t'background-color',\n\t\t\t\tmainColor\n\t\t\t);\n\n\t\t\tfigureClasses = classnames( {\n\t\t\t\t'has-background': backgroundClass || customMainColor,\n\t\t\t\t[ backgroundClass ]: backgroundClass,\n\t\t\t} );\n\n\t\t\tfigureStyles = {\n\t\t\t\tbackgroundColor: backgroundClass ? undefined : customMainColor,\n\t\t\t};\n\t\t\t// Is normal style and a custom color is being used ( we can set a style directly with its value)\n\t\t} else if ( customMainColor ) {\n\t\t\tfigureStyles = {\n\t\t\t\tborderColor: customMainColor,\n\t\t\t};\n\t\t\t// If normal style and a named color are being used, we need to retrieve the color value to set the style,\n\t\t\t// as there is no expectation that themes create classes that set border colors.\n\t\t} else if ( mainColor ) {\n\t\t\t// Previously here we queried the color settings to know the color value\n\t\t\t// of a named color. This made the save function impure and the block was refactored,\n\t\t\t// because meanwhile a change in the editor made it impossible to query color settings in the save function.\n\t\t\t// Here instead of querying the color settings to know the color value, we retrieve the value\n\t\t\t// directly from the style previously serialized.\n\t\t\tconst borderColor = parseBorderColor( figureStyle );\n\t\t\tfigureStyles = {\n\t\t\t\tborderColor,\n\t\t\t};\n\t\t}\n\n\t\tconst blockquoteTextColorClass = getColorClassName(\n\t\t\t'color',\n\t\t\ttextColor\n\t\t);\n\t\tconst blockquoteClasses =\n\t\t\t( textColor || customTextColor ) &&\n\t\t\tclassnames( 'has-text-color', {\n\t\t\t\t[ blockquoteTextColorClass ]: blockquoteTextColorClass,\n\t\t\t} );\n\n\t\tconst blockquoteStyles = blockquoteTextColorClass\n\t\t\t? undefined\n\t\t\t: { color: customTextColor };\n\n\t\treturn (\n\t\t\t<figure className={ figureClasses } style={ figureStyles }>\n\t\t\t\t<blockquote\n\t\t\t\t\tclassName={ blockquoteClasses }\n\t\t\t\t\tstyle={ blockquoteStyles }\n\t\t\t\t>\n\t\t\t\t\t<RichText.Content value={ value } multiline />\n\t\t\t\t\t{ ! RichText.isEmpty( citation ) && (\n\t\t\t\t\t\t<RichText.Content tagName=\"cite\" value={ citation } />\n\t\t\t\t\t) }\n\t\t\t\t</blockquote>\n\t\t\t</figure>\n\t\t);\n\t},\n\tmigrate( {\n\t\tvalue,\n\t\tclassName,\n\t\tfigureStyle,\n\t\tmainColor,\n\t\tcustomMainColor,\n\t\tcustomTextColor,\n\t\t...attributes\n\t} ) {\n\t\tconst isSolidColorStyle = className?.includes( SOLID_COLOR_CLASS );\n\t\tlet style;\n\n\t\tif ( customMainColor ) {\n\t\t\tif ( ! isSolidColorStyle ) {\n\t\t\t\t// Block supports: Set style.border.color if a deprecated block has a default style and a `customMainColor` attribute.\n\t\t\t\tstyle = {\n\t\t\t\t\tborder: {\n\t\t\t\t\t\tcolor: customMainColor,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// Block supports: Set style.color.background if a deprecated block has a solid style and a `customMainColor` attribute.\n\t\t\t\tstyle = {\n\t\t\t\t\tcolor: {\n\t\t\t\t\t\tbackground: customMainColor,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// Block supports: Set style.color.text if a deprecated block has a `customTextColor` attribute.\n\t\tif ( customTextColor && style ) {\n\t\t\tstyle.color = {\n\t\t\t\t...style.color,\n\t\t\t\ttext: customTextColor,\n\t\t\t};\n\t\t}\n\t\t// If is the default style, and a main color is set,\n\t\t// migrate the main color value into a custom border color.\n\t\t// The custom border color value is retrieved by parsing the figure styles.\n\t\tif ( ! isSolidColorStyle && mainColor && figureStyle ) {\n\t\t\tconst borderColor = parseBorderColor( figureStyle );\n\t\t\tif ( borderColor ) {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: multilineToInline( value ),\n\t\t\t\t\t...attributes,\n\t\t\t\t\tclassName,\n\t\t\t\t\t// Block supports: Set style.border.color if a deprecated block has `mainColor`, inline border CSS and is not a solid color style.\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tborder: {\n\t\t\t\t\t\t\tcolor: borderColor,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tvalue: multilineToInline( value ),\n\t\t\tclassName,\n\t\t\tbackgroundColor: isSolidColorStyle ? mainColor : undefined,\n\t\t\tborderColor: isSolidColorStyle ? undefined : mainColor,\n\t\t\ttextAlign: isSolidColorStyle ? 'left' : undefined,\n\t\t\tstyle,\n\t\t\t...attributes,\n\t\t};\n\t},\n};\n\nconst v2 = {\n\tattributes: blockAttributes,\n\tsave( { attributes } ) {\n\t\tconst {\n\t\t\tmainColor,\n\t\t\tcustomMainColor,\n\t\t\ttextColor,\n\t\t\tcustomTextColor,\n\t\t\tvalue,\n\t\t\tcitation,\n\t\t\tclassName,\n\t\t} = attributes;\n\t\tconst isSolidColorStyle = className?.includes( SOLID_COLOR_CLASS );\n\n\t\tlet figureClass, figureStyles;\n\t\t// Is solid color style\n\t\tif ( isSolidColorStyle ) {\n\t\t\tfigureClass = getColorClassName( 'background-color', mainColor );\n\t\t\tif ( ! figureClass ) {\n\t\t\t\tfigureStyles = {\n\t\t\t\t\tbackgroundColor: customMainColor,\n\t\t\t\t};\n\t\t\t}\n\t\t\t// Is normal style and a custom color is being used ( we can set a style directly with its value)\n\t\t} else if ( customMainColor ) {\n\t\t\tfigureStyles = {\n\t\t\t\tborderColor: customMainColor,\n\t\t\t};\n\t\t\t// Is normal style and a named color is being used, we need to retrieve the color value to set the style,\n\t\t\t// as there is no expectation that themes create classes that set border colors.\n\t\t} else if ( mainColor ) {\n\t\t\tconst colors = get(\n\t\t\t\tselect( blockEditorStore ).getSettings(),\n\t\t\t\t[ 'colors' ],\n\t\t\t\t[]\n\t\t\t);\n\t\t\tconst colorObject = getColorObjectByAttributeValues(\n\t\t\t\tcolors,\n\t\t\t\tmainColor\n\t\t\t);\n\t\t\tfigureStyles = {\n\t\t\t\tborderColor: colorObject.color,\n\t\t\t};\n\t\t}\n\n\t\tconst blockquoteTextColorClass = getColorClassName(\n\t\t\t'color',\n\t\t\ttextColor\n\t\t);\n\t\tconst blockquoteClasses =\n\t\t\ttextColor || customTextColor\n\t\t\t\t? classnames( 'has-text-color', {\n\t\t\t\t\t\t[ blockquoteTextColorClass ]: blockquoteTextColorClass,\n\t\t\t\t  } )\n\t\t\t\t: undefined;\n\t\tconst blockquoteStyle = blockquoteTextColorClass\n\t\t\t? undefined\n\t\t\t: { color: customTextColor };\n\t\treturn (\n\t\t\t<figure className={ figureClass } style={ figureStyles }>\n\t\t\t\t<blockquote\n\t\t\t\t\tclassName={ blockquoteClasses }\n\t\t\t\t\tstyle={ blockquoteStyle }\n\t\t\t\t>\n\t\t\t\t\t<RichText.Content value={ value } multiline />\n\t\t\t\t\t{ ! RichText.isEmpty( citation ) && (\n\t\t\t\t\t\t<RichText.Content tagName=\"cite\" value={ citation } />\n\t\t\t\t\t) }\n\t\t\t\t</blockquote>\n\t\t\t</figure>\n\t\t);\n\t},\n\tmigrate( {\n\t\tvalue,\n\t\tclassName,\n\t\tmainColor,\n\t\tcustomMainColor,\n\t\tcustomTextColor,\n\t\t...attributes\n\t} ) {\n\t\tconst isSolidColorStyle = className?.includes( SOLID_COLOR_CLASS );\n\t\tlet style = {};\n\n\t\tif ( customMainColor ) {\n\t\t\tif ( ! isSolidColorStyle ) {\n\t\t\t\t// Block supports: Set style.border.color if a deprecated block has a default style and a `customMainColor` attribute.\n\t\t\t\tstyle = {\n\t\t\t\t\tborder: {\n\t\t\t\t\t\tcolor: customMainColor,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// Block supports: Set style.color.background if a deprecated block has a solid style and a `customMainColor` attribute.\n\t\t\t\tstyle = {\n\t\t\t\t\tcolor: {\n\t\t\t\t\t\tbackground: customMainColor,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// Block supports: Set style.color.text if a deprecated block has a `customTextColor` attribute.\n\t\tif ( customTextColor && style ) {\n\t\t\tstyle.color = {\n\t\t\t\t...style.color,\n\t\t\t\ttext: customTextColor,\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tvalue: multilineToInline( value ),\n\t\t\tclassName,\n\t\t\tbackgroundColor: isSolidColorStyle ? mainColor : undefined,\n\t\t\tborderColor: isSolidColorStyle ? undefined : mainColor,\n\t\t\ttextAlign: isSolidColorStyle ? 'left' : undefined,\n\t\t\tstyle,\n\t\t\t...attributes,\n\t\t};\n\t},\n};\n\nconst v1 = {\n\tattributes: {\n\t\t...blockAttributes,\n\t},\n\tsave( { attributes } ) {\n\t\tconst { value, citation } = attributes;\n\t\treturn (\n\t\t\t<blockquote>\n\t\t\t\t<RichText.Content value={ value } multiline />\n\t\t\t\t{ ! RichText.isEmpty( citation ) && (\n\t\t\t\t\t<RichText.Content tagName=\"cite\" value={ citation } />\n\t\t\t\t) }\n\t\t\t</blockquote>\n\t\t);\n\t},\n\tmigrate( { value, ...attributes } ) {\n\t\treturn {\n\t\t\tvalue: multilineToInline( value ),\n\t\t\t...attributes,\n\t\t};\n\t},\n};\n\nconst v0 = {\n\tattributes: {\n\t\t...blockAttributes,\n\t\tcitation: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tselector: 'footer',\n\t\t},\n\t\talign: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'none',\n\t\t},\n\t},\n\n\tsave( { attributes } ) {\n\t\tconst { value, citation, align } = attributes;\n\n\t\treturn (\n\t\t\t<blockquote className={ `align${ align }` }>\n\t\t\t\t<RichText.Content value={ value } multiline />\n\t\t\t\t{ ! RichText.isEmpty( citation ) && (\n\t\t\t\t\t<RichText.Content tagName=\"footer\" value={ citation } />\n\t\t\t\t) }\n\t\t\t</blockquote>\n\t\t);\n\t},\n\tmigrate( { value, ...attributes } ) {\n\t\treturn {\n\t\t\tvalue: multilineToInline( value ),\n\t\t\t...attributes,\n\t\t};\n\t},\n};\n\n/**\n * New deprecations need to be placed first\n * for them to have higher priority.\n *\n * Old deprecations may need to be updated as well.\n *\n * See block-deprecation.md\n */\nexport default [ v5, v4, v3, v2, v1, v0 ];\n"]}