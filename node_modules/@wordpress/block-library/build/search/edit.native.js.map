{"version":3,"sources":["@wordpress/block-library/src/search/edit.native.js"],"names":["MIN_BUTTON_WIDTH","MARGINS","widthMargin","marginLeft","styles","paddingLeft","BUTTON_OPTIONS","value","label","useIsScreenReaderEnabled","isScreenReaderEnabled","setIsScreenReaderEnabled","mounted","changeListener","AccessibilityInfo","addEventListener","enabled","then","screenReaderEnabled","remove","SearchEdit","onFocus","isSelected","attributes","setAttributes","className","blockWidth","style","isButtonSelected","setIsButtonSelected","isLabelSelected","setIsLabelSelected","isPlaceholderSelected","setIsPlaceholderSelected","isLongButton","setIsLongButton","buttonWidth","setButtonWidth","textInputRef","showLabel","buttonPosition","buttonUseIcon","placeholder","buttonText","hasTextInput","current","blur","maxButtonWidth","Math","floor","tempIsLongButton","onLayoutButton","nativeEvent","width","layout","getBlockClassNames","undefined","getSelectedButtonPositionLabel","option","blockProps","controls","position","isButtonInside","borderStyle","border","borderDark","inputStyle","plainTextInput","plainTextInputDark","baseColors","color","text","placeholderStyle","plainTextPlaceholder","plainTextPlaceholderDark","searchBarStyle","searchBarContainer","flexDirection","getAccessibilityLabelForButton","getAccessibilityLabelForPlaceholder","title","description","getAccessibilityLabelForLabel","renderTextField","searchInputContainer","newVal","buttonPlaceholderText","baseButtonStyles","blocks","richTextButtonContainerStyle","buttonContainer","buttonContainerWide","background","backgroundColor","borderWidth","richTextButtonStyle","richTextButton","placeholderColor","iconStyles","icon","fill","renderButton","search","html","richTextButtonCursor","searchBlockContainer","richTextLabel"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View, AccessibilityInfo } from 'react-native';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tRichText,\n\tPlainText,\n\tuseBlockProps,\n\tInspectorControls,\n} from '@wordpress/block-editor';\nimport {\n\tPanelBody,\n\tSelectControl,\n\tToggleControl,\n\tIcon,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { search } from '@wordpress/icons';\nimport { useRef, useEffect, useState } from '@wordpress/element';\nimport { usePreferredColorSchemeStyle } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\n\n/**\n * Constants\n */\nconst MIN_BUTTON_WIDTH = 75;\nconst MARGINS =\n\tstyles.widthMargin?.marginLeft + styles.widthMargin?.paddingLeft;\n\nconst BUTTON_OPTIONS = [\n\t{ value: 'button-inside', label: __( 'Button inside' ) },\n\t{ value: 'button-outside', label: __( 'Button outside' ) },\n\t{ value: 'no-button', label: __( 'No button' ) },\n];\n\nfunction useIsScreenReaderEnabled() {\n\tconst [ isScreenReaderEnabled, setIsScreenReaderEnabled ] =\n\t\tuseState( false );\n\n\tuseEffect( () => {\n\t\tlet mounted = true;\n\n\t\tconst changeListener = AccessibilityInfo.addEventListener(\n\t\t\t'screenReaderChanged',\n\t\t\t( enabled ) => setIsScreenReaderEnabled( enabled )\n\t\t);\n\n\t\tAccessibilityInfo.isScreenReaderEnabled().then(\n\t\t\t( screenReaderEnabled ) => {\n\t\t\t\tif ( mounted && screenReaderEnabled ) {\n\t\t\t\t\tsetIsScreenReaderEnabled( screenReaderEnabled );\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\treturn () => {\n\t\t\tmounted = false;\n\n\t\t\tchangeListener.remove();\n\t\t};\n\t}, [] );\n\n\treturn isScreenReaderEnabled;\n}\n\nexport default function SearchEdit( {\n\tonFocus,\n\tisSelected,\n\tattributes,\n\tsetAttributes,\n\tclassName,\n\tblockWidth,\n\tstyle,\n} ) {\n\tconst [ isButtonSelected, setIsButtonSelected ] = useState( false );\n\tconst [ isLabelSelected, setIsLabelSelected ] = useState( false );\n\tconst [ isPlaceholderSelected, setIsPlaceholderSelected ] =\n\t\tuseState( false );\n\tconst [ isLongButton, setIsLongButton ] = useState( false );\n\tconst [ buttonWidth, setButtonWidth ] = useState( MIN_BUTTON_WIDTH );\n\tconst isScreenReaderEnabled = useIsScreenReaderEnabled();\n\n\tconst textInputRef = useRef( null );\n\n\tconst {\n\t\tlabel,\n\t\tshowLabel,\n\t\tbuttonPosition,\n\t\tbuttonUseIcon,\n\t\tplaceholder,\n\t\tbuttonText,\n\t} = attributes;\n\n\t/*\n\t * Called when the value of isSelected changes. Blurs the PlainText component\n\t * used by the placeholder when this block loses focus.\n\t */\n\tuseEffect( () => {\n\t\tif ( hasTextInput() && isPlaceholderSelected && ! isSelected ) {\n\t\t\ttextInputRef.current.blur();\n\t\t}\n\t}, [ isSelected ] );\n\n\tuseEffect( () => {\n\t\tconst maxButtonWidth = Math.floor( blockWidth / 2 - MARGINS );\n\t\tconst tempIsLongButton = buttonWidth > maxButtonWidth;\n\n\t\t// Update this value only if it has changed to avoid flickering.\n\t\tif ( isLongButton !== tempIsLongButton ) {\n\t\t\tsetIsLongButton( tempIsLongButton );\n\t\t}\n\t}, [ blockWidth, buttonWidth ] );\n\n\tconst hasTextInput = () => {\n\t\treturn textInputRef && textInputRef.current;\n\t};\n\n\tconst onLayoutButton = ( { nativeEvent } ) => {\n\t\tconst { width } = nativeEvent?.layout;\n\n\t\tif ( width ) {\n\t\t\tsetButtonWidth( width );\n\t\t}\n\t};\n\n\tconst getBlockClassNames = () => {\n\t\treturn classnames(\n\t\t\tclassName,\n\t\t\t'button-inside' === buttonPosition\n\t\t\t\t? 'wp-block-search__button-inside'\n\t\t\t\t: undefined,\n\t\t\t'button-outside' === buttonPosition\n\t\t\t\t? 'wp-block-search__button-outside'\n\t\t\t\t: undefined,\n\t\t\t'no-button' === buttonPosition\n\t\t\t\t? 'wp-block-search__no-button'\n\t\t\t\t: undefined,\n\t\t\t'button-only' === buttonPosition\n\t\t\t\t? 'wp-block-search__button-only'\n\t\t\t\t: undefined,\n\t\t\t! buttonUseIcon && 'no-button' !== buttonPosition\n\t\t\t\t? 'wp-block-search__text-button'\n\t\t\t\t: undefined,\n\t\t\tbuttonUseIcon && 'no-button' !== buttonPosition\n\t\t\t\t? 'wp-block-search__icon-button'\n\t\t\t\t: undefined\n\t\t);\n\t};\n\n\tconst getSelectedButtonPositionLabel = ( option ) => {\n\t\tswitch ( option ) {\n\t\t\tcase 'button-inside':\n\t\t\t\treturn __( 'Inside' );\n\t\t\tcase 'button-outside':\n\t\t\t\treturn __( 'Outside' );\n\t\t\tcase 'no-button':\n\t\t\t\treturn __( 'No button' );\n\t\t}\n\t};\n\n\tconst blockProps = useBlockProps( {\n\t\tclassName: getBlockClassNames(),\n\t} );\n\n\tconst controls = (\n\t\t<InspectorControls>\n\t\t\t<PanelBody title={ __( 'Search settings' ) }>\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel={ __( 'Hide search heading' ) }\n\t\t\t\t\tchecked={ ! showLabel }\n\t\t\t\t\tonChange={ () => {\n\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\tshowLabel: ! showLabel,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t<SelectControl\n\t\t\t\t\tlabel={ __( 'Button position' ) }\n\t\t\t\t\tvalue={ getSelectedButtonPositionLabel( buttonPosition ) }\n\t\t\t\t\tonChange={ ( position ) => {\n\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\tbuttonPosition: position,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} }\n\t\t\t\t\toptions={ BUTTON_OPTIONS }\n\t\t\t\t\thideCancelButton={ true }\n\t\t\t\t/>\n\t\t\t\t{ buttonPosition !== 'no-button' && (\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={ __( 'Use icon button' ) }\n\t\t\t\t\t\tchecked={ buttonUseIcon }\n\t\t\t\t\t\tonChange={ () => {\n\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\tbuttonUseIcon: ! buttonUseIcon,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</PanelBody>\n\t\t</InspectorControls>\n\t);\n\n\tconst isButtonInside = buttonPosition === 'button-inside';\n\n\tconst borderStyle = usePreferredColorSchemeStyle(\n\t\tstyles.border,\n\t\tstyles.borderDark\n\t);\n\n\tconst inputStyle = [\n\t\t! isButtonInside && borderStyle,\n\t\tusePreferredColorSchemeStyle(\n\t\t\tstyles.plainTextInput,\n\t\t\tstyles.plainTextInputDark\n\t\t),\n\t\tstyle?.baseColors?.color && { color: style?.baseColors?.color?.text },\n\t];\n\n\tconst placeholderStyle = {\n\t\t...usePreferredColorSchemeStyle(\n\t\t\tstyles.plainTextPlaceholder,\n\t\t\tstyles.plainTextPlaceholderDark\n\t\t),\n\t\t...( style?.baseColors?.color && {\n\t\t\tcolor: style?.baseColors?.color?.text,\n\t\t} ),\n\t};\n\n\tconst searchBarStyle = [\n\t\tstyles.searchBarContainer,\n\t\tisButtonInside && borderStyle,\n\t\tisLongButton && { flexDirection: 'column' },\n\t];\n\n\t/**\n\t * If a screenreader is enabled, create a descriptive label for this field. If\n\t * not, return a label that is used during automated UI tests.\n\t *\n\t * @return {string} The accessibilityLabel for the Search Button\n\t */\n\tconst getAccessibilityLabelForButton = () => {\n\t\tif ( ! isScreenReaderEnabled ) {\n\t\t\treturn 'search-block-button';\n\t\t}\n\n\t\treturn `${ __(\n\t\t\t'Search button. Current button text is'\n\t\t) } ${ buttonText }`;\n\t};\n\n\t/**\n\t * If a screenreader is enabled, create a descriptive label for this field. If\n\t * not, return a label that is used during automated UI tests.\n\t *\n\t * @return {string} The accessibilityLabel for the Search Input\n\t * \t\t\t\t\t placeholder field.\n\t */\n\tconst getAccessibilityLabelForPlaceholder = () => {\n\t\tif ( ! isScreenReaderEnabled ) {\n\t\t\treturn 'search-block-input';\n\t\t}\n\n\t\tconst title = __( 'Search input field.' );\n\t\tconst description = placeholder\n\t\t\t? `${ __( 'Current placeholder text is' ) } ${ placeholder }`\n\t\t\t: __( 'No custom placeholder set' );\n\t\treturn `${ title } ${ description }`;\n\t};\n\n\t/**\n\t * If a screenreader is enabled, create a descriptive label for this field. If\n\t * not, return a label that is used during automated UI tests.\n\t *\n\t * @return {string} The accessibilityLabel for the Search Label field\n\t */\n\tconst getAccessibilityLabelForLabel = () => {\n\t\tif ( ! isScreenReaderEnabled ) {\n\t\t\treturn 'search-block-label';\n\t\t}\n\n\t\treturn `${ __( 'Search block label. Current text is' ) } ${ label }`;\n\t};\n\n\tconst renderTextField = () => {\n\t\treturn (\n\t\t\t<View\n\t\t\t\tstyle={ styles.searchInputContainer }\n\t\t\t\taccessible={ true }\n\t\t\t\taccessibilityRole=\"none\"\n\t\t\t\taccessibilityHint={\n\t\t\t\t\tisScreenReaderEnabled\n\t\t\t\t\t\t? __( 'Double tap to edit placeholder text' )\n\t\t\t\t\t\t: undefined\n\t\t\t\t}\n\t\t\t\taccessibilityLabel={ getAccessibilityLabelForPlaceholder() }\n\t\t\t>\n\t\t\t\t<PlainText\n\t\t\t\t\tref={ textInputRef }\n\t\t\t\t\tisSelected={ isPlaceholderSelected }\n\t\t\t\t\tclassName=\"wp-block-search__input\"\n\t\t\t\t\tstyle={ inputStyle }\n\t\t\t\t\tnumberOfLines={ 1 }\n\t\t\t\t\tellipsizeMode=\"tail\" // Currently only works on ios.\n\t\t\t\t\tlabel={ null }\n\t\t\t\t\tvalue={ placeholder }\n\t\t\t\t\tplaceholder={\n\t\t\t\t\t\tplaceholder ? undefined : __( 'Optional placeholder…' )\n\t\t\t\t\t}\n\t\t\t\t\tonChange={ ( newVal ) =>\n\t\t\t\t\t\tsetAttributes( { placeholder: newVal } )\n\t\t\t\t\t}\n\t\t\t\t\tonFocus={ () => {\n\t\t\t\t\t\tsetIsPlaceholderSelected( true );\n\t\t\t\t\t\tonFocus();\n\t\t\t\t\t} }\n\t\t\t\t\tonBlur={ () => setIsPlaceholderSelected( false ) }\n\t\t\t\t\tplaceholderTextColor={ placeholderStyle?.color }\n\t\t\t\t/>\n\t\t\t</View>\n\t\t);\n\t};\n\n\t// To achieve proper expanding and shrinking `RichText` on Android, there is a need to set\n\t// a `placeholder` as an empty string when `RichText` is focused,\n\t// because `AztecView` is calculating a `minWidth` based on placeholder text.\n\tconst buttonPlaceholderText =\n\t\tisButtonSelected ||\n\t\t( ! isButtonSelected && buttonText && buttonText !== '' )\n\t\t\t? ''\n\t\t\t: __( 'Add button text' );\n\n\tconst baseButtonStyles = {\n\t\t...style?.baseColors?.blocks?.[ 'core/button' ]?.color,\n\t\t...attributes?.style?.color,\n\t\t...( style?.color && { text: style.color } ),\n\t};\n\n\tconst richTextButtonContainerStyle = [\n\t\tstyles.buttonContainer,\n\t\tisLongButton && styles.buttonContainerWide,\n\t\tbaseButtonStyles?.background && {\n\t\t\tbackgroundColor: baseButtonStyles.background,\n\t\t\tborderWidth: 0,\n\t\t},\n\t\tstyle?.backgroundColor && {\n\t\t\tbackgroundColor: style.backgroundColor,\n\t\t\tborderWidth: 0,\n\t\t},\n\t];\n\n\tconst richTextButtonStyle = {\n\t\t...styles.richTextButton,\n\t\t...( baseButtonStyles?.text && {\n\t\t\tcolor: baseButtonStyles.text,\n\t\t\tplaceholderColor: baseButtonStyles.text,\n\t\t} ),\n\t};\n\n\tconst iconStyles = {\n\t\t...styles.icon,\n\t\t...( baseButtonStyles?.text && { fill: baseButtonStyles.text } ),\n\t};\n\n\tconst renderButton = () => {\n\t\treturn (\n\t\t\t<View style={ richTextButtonContainerStyle }>\n\t\t\t\t{ buttonUseIcon && (\n\t\t\t\t\t<Icon\n\t\t\t\t\t\ticon={ search }\n\t\t\t\t\t\t{ ...iconStyles }\n\t\t\t\t\t\tonLayout={ onLayoutButton }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\n\t\t\t\t{ ! buttonUseIcon && (\n\t\t\t\t\t<View\n\t\t\t\t\t\taccessible={ true }\n\t\t\t\t\t\taccessibilityRole=\"none\"\n\t\t\t\t\t\taccessibilityHint={\n\t\t\t\t\t\t\tisScreenReaderEnabled\n\t\t\t\t\t\t\t\t? __( 'Double tap to edit button text' )\n\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\taccessibilityLabel={ getAccessibilityLabelForButton() }\n\t\t\t\t\t\tonLayout={ onLayoutButton }\n\t\t\t\t\t>\n\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\tclassName=\"wp-block-search__button\"\n\t\t\t\t\t\t\tidentifier=\"text\"\n\t\t\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\t\t\tstyle={ richTextButtonStyle }\n\t\t\t\t\t\t\tplaceholder={ buttonPlaceholderText }\n\t\t\t\t\t\t\tvalue={ buttonText }\n\t\t\t\t\t\t\twithoutInteractiveFormatting\n\t\t\t\t\t\t\tonChange={ ( html ) =>\n\t\t\t\t\t\t\t\tsetAttributes( { buttonText: html } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tminWidth={ MIN_BUTTON_WIDTH }\n\t\t\t\t\t\t\tmaxWidth={ blockWidth - MARGINS }\n\t\t\t\t\t\t\ttextAlign=\"center\"\n\t\t\t\t\t\t\tisSelected={ isButtonSelected }\n\t\t\t\t\t\t\t__unstableMobileNoFocusOnMount={ ! isSelected }\n\t\t\t\t\t\t\tunstableOnFocus={ () => {\n\t\t\t\t\t\t\t\tsetIsButtonSelected( true );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tonBlur={ () => {\n\t\t\t\t\t\t\t\tsetIsButtonSelected( false );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tselectionColor={\n\t\t\t\t\t\t\t\tstyles.richTextButtonCursor?.color\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t) }\n\t\t\t</View>\n\t\t);\n\t};\n\n\treturn (\n\t\t<View\n\t\t\t{ ...blockProps }\n\t\t\tstyle={ styles.searchBlockContainer }\n\t\t\timportantForAccessibility={\n\t\t\t\tisSelected ? 'yes' : 'no-hide-descendants'\n\t\t\t}\n\t\t\taccessibilityElementsHidden={ isSelected ? false : true }\n\t\t>\n\t\t\t{ isSelected && controls }\n\n\t\t\t{ showLabel && (\n\t\t\t\t<View\n\t\t\t\t\taccessible={ true }\n\t\t\t\t\taccessibilityRole=\"none\"\n\t\t\t\t\taccessibilityHint={\n\t\t\t\t\t\tisScreenReaderEnabled\n\t\t\t\t\t\t\t? __( 'Double tap to edit label text' )\n\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t}\n\t\t\t\t\taccessibilityLabel={ getAccessibilityLabelForLabel() }\n\t\t\t\t>\n\t\t\t\t\t<RichText\n\t\t\t\t\t\tclassName=\"wp-block-search__label\"\n\t\t\t\t\t\tidentifier=\"text\"\n\t\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\t\tstyle={ styles.richTextLabel }\n\t\t\t\t\t\tplaceholder={ __( 'Add label…' ) }\n\t\t\t\t\t\twithoutInteractiveFormatting\n\t\t\t\t\t\tvalue={ label }\n\t\t\t\t\t\tonChange={ ( html ) =>\n\t\t\t\t\t\t\tsetAttributes( { label: html } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tisSelected={ isLabelSelected }\n\t\t\t\t\t\t__unstableMobileNoFocusOnMount={ ! isSelected }\n\t\t\t\t\t\tunstableOnFocus={ () => {\n\t\t\t\t\t\t\tsetIsLabelSelected( true );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tonBlur={ () => {\n\t\t\t\t\t\t\tsetIsLabelSelected( false );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tselectionColor={ styles.richTextButtonCursor?.color }\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t) }\n\n\t\t\t{ ( 'button-inside' === buttonPosition ||\n\t\t\t\t'button-outside' === buttonPosition ) && (\n\t\t\t\t<View style={ searchBarStyle }>\n\t\t\t\t\t{ renderTextField() }\n\t\t\t\t\t{ renderButton() }\n\t\t\t\t</View>\n\t\t\t) }\n\n\t\t\t{ 'button-only' === buttonPosition && renderButton() }\n\t\t\t{ 'no-button' === buttonPosition && renderTextField() }\n\t\t</View>\n\t);\n}\n"]}