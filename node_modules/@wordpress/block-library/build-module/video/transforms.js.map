{"version":3,"sources":["@wordpress/block-library/src/video/transforms.js"],"names":["createBlobURL","createBlock","transforms","from","type","isMatch","files","length","indexOf","transform","file","block","src","tag","attributes","shortcode","named","mp4","m4v","webm","ogv","flv","poster","loop","autoplay","preload"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,aAAT,QAA8B,iBAA9B;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,MAAMC,UAAU,GAAG;AAClBC,EAAAA,IAAI,EAAE,CACL;AACCC,IAAAA,IAAI,EAAE,OADP;;AAECC,IAAAA,OAAO,CAAEC,KAAF,EAAU;AAChB,aACCA,KAAK,CAACC,MAAN,KAAiB,CAAjB,IACAD,KAAK,CAAE,CAAF,CAAL,CAAWF,IAAX,CAAgBI,OAAhB,CAAyB,QAAzB,MAAwC,CAFzC;AAIA,KAPF;;AAQCC,IAAAA,SAAS,CAAEH,KAAF,EAAU;AAClB,YAAMI,IAAI,GAAGJ,KAAK,CAAE,CAAF,CAAlB,CADkB,CAElB;AACA;AACA;;AACA,YAAMK,KAAK,GAAGV,WAAW,CAAE,YAAF,EAAgB;AACxCW,QAAAA,GAAG,EAAEZ,aAAa,CAAEU,IAAF;AADsB,OAAhB,CAAzB;AAGA,aAAOC,KAAP;AACA;;AAjBF,GADK,EAoBL;AACCP,IAAAA,IAAI,EAAE,WADP;AAECS,IAAAA,GAAG,EAAE,OAFN;AAGCC,IAAAA,UAAU,EAAE;AACXF,MAAAA,GAAG,EAAE;AACJR,QAAAA,IAAI,EAAE,QADF;AAEJW,QAAAA,SAAS,EAAE,QAEJ;AAAA,cAFM;AACZC,YAAAA,KAAK,EAAE;AAAEJ,cAAAA,GAAF;AAAOK,cAAAA,GAAP;AAAYC,cAAAA,GAAZ;AAAiBC,cAAAA,IAAjB;AAAuBC,cAAAA,GAAvB;AAA4BC,cAAAA;AAA5B;AADK,WAEN;AACN,iBAAOT,GAAG,IAAIK,GAAP,IAAcC,GAAd,IAAqBC,IAArB,IAA6BC,GAA7B,IAAoCC,GAA3C;AACA;AANG,OADM;AASXC,MAAAA,MAAM,EAAE;AACPlB,QAAAA,IAAI,EAAE,QADC;AAEPW,QAAAA,SAAS,EAAE,SAA6B;AAAA,cAA3B;AAAEC,YAAAA,KAAK,EAAE;AAAEM,cAAAA;AAAF;AAAT,WAA2B;AACvC,iBAAOA,MAAP;AACA;AAJM,OATG;AAeXC,MAAAA,IAAI,EAAE;AACLnB,QAAAA,IAAI,EAAE,QADD;AAELW,QAAAA,SAAS,EAAE,SAA2B;AAAA,cAAzB;AAAEC,YAAAA,KAAK,EAAE;AAAEO,cAAAA;AAAF;AAAT,WAAyB;AACrC,iBAAOA,IAAP;AACA;AAJI,OAfK;AAqBXC,MAAAA,QAAQ,EAAE;AACTpB,QAAAA,IAAI,EAAE,QADG;AAETW,QAAAA,SAAS,EAAE,SAA+B;AAAA,cAA7B;AAAEC,YAAAA,KAAK,EAAE;AAAEQ,cAAAA;AAAF;AAAT,WAA6B;AACzC,iBAAOA,QAAP;AACA;AAJQ,OArBC;AA2BXC,MAAAA,OAAO,EAAE;AACRrB,QAAAA,IAAI,EAAE,QADE;AAERW,QAAAA,SAAS,EAAE,SAA8B;AAAA,cAA5B;AAAEC,YAAAA,KAAK,EAAE;AAAES,cAAAA;AAAF;AAAT,WAA4B;AACxC,iBAAOA,OAAP;AACA;AAJO;AA3BE;AAHb,GApBK;AADY,CAAnB;AA8DA,eAAevB,UAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createBlobURL } from '@wordpress/blob';\nimport { createBlock } from '@wordpress/blocks';\n\nconst transforms = {\n\tfrom: [\n\t\t{\n\t\t\ttype: 'files',\n\t\t\tisMatch( files ) {\n\t\t\t\treturn (\n\t\t\t\t\tfiles.length === 1 &&\n\t\t\t\t\tfiles[ 0 ].type.indexOf( 'video/' ) === 0\n\t\t\t\t);\n\t\t\t},\n\t\t\ttransform( files ) {\n\t\t\t\tconst file = files[ 0 ];\n\t\t\t\t// We don't need to upload the media directly here\n\t\t\t\t// It's already done as part of the `componentDidMount`\n\t\t\t\t// in the video block\n\t\t\t\tconst block = createBlock( 'core/video', {\n\t\t\t\t\tsrc: createBlobURL( file ),\n\t\t\t\t} );\n\t\t\t\treturn block;\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'shortcode',\n\t\t\ttag: 'video',\n\t\t\tattributes: {\n\t\t\t\tsrc: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tshortcode: ( {\n\t\t\t\t\t\tnamed: { src, mp4, m4v, webm, ogv, flv },\n\t\t\t\t\t} ) => {\n\t\t\t\t\t\treturn src || mp4 || m4v || webm || ogv || flv;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tposter: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tshortcode: ( { named: { poster } } ) => {\n\t\t\t\t\t\treturn poster;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tloop: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tshortcode: ( { named: { loop } } ) => {\n\t\t\t\t\t\treturn loop;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tautoplay: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tshortcode: ( { named: { autoplay } } ) => {\n\t\t\t\t\t\treturn autoplay;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tpreload: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tshortcode: ( { named: { preload } } ) => {\n\t\t\t\t\t\treturn preload;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n};\n\nexport default transforms;\n"]}