{"version":3,"sources":["@wordpress/block-library/src/avatar/user-control.js"],"names":["__","ComboboxControl","useSelect","store","coreStore","useState","AUTHORS_QUERY","who","per_page","_fields","context","UserControl","value","onChange","filteredAuthorsList","setFilteredAuthorsList","authorsList","select","getUsers","options","map","author","label","name","id","inputValue","filter","option","toLowerCase","startsWith"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,EAAT,QAAmB,iBAAnB;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,sBAAnC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,GAAG,EAAE,SADgB;AAErBC,EAAAA,QAAQ,EAAE,CAAC,CAFU;AAGrBC,EAAAA,OAAO,EAAE,SAHY;AAIrBC,EAAAA,OAAO,EAAE;AAJY,CAAtB;;AAOA,SAASC,WAAT,OAA4C;AAAA,MAAtB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAsB;AAC3C,QAAM,CAAEC,mBAAF,EAAuBC,sBAAvB,IAAkDV,QAAQ,EAAhE;AACA,QAAMW,WAAW,GAAGd,SAAS,CAAIe,MAAF,IAAc;AAC5C,UAAM;AAAEC,MAAAA;AAAF,QAAeD,MAAM,CAAEb,SAAF,CAA3B;AACA,WAAOc,QAAQ,CAAEZ,aAAF,CAAf;AACA,GAH4B,EAG1B,EAH0B,CAA7B;;AAIA,MAAK,CAAEU,WAAP,EAAqB;AACpB,WAAO,IAAP;AACA;;AAED,QAAMG,OAAO,GAAGH,WAAW,CAACI,GAAZ,CAAmBC,MAAF,IAAc;AAC9C,WAAO;AACNC,MAAAA,KAAK,EAAED,MAAM,CAACE,IADR;AAENX,MAAAA,KAAK,EAAES,MAAM,CAACG;AAFR,KAAP;AAIA,GALe,CAAhB;AAOA,SACC,cAAC,eAAD;AACC,IAAA,uBAAuB,MADxB;AAEC,IAAA,KAAK,EAAGxB,EAAE,CAAE,MAAF,CAFX;AAGC,IAAA,IAAI,EAAGA,EAAE,CACR,qFADQ,CAHV;AAMC,IAAA,KAAK,EAAGY,KANT;AAOC,IAAA,QAAQ,EAAGC,QAPZ;AAQC,IAAA,OAAO,EAAGC,mBAAmB,IAAIK,OARlC;AASC,IAAA,mBAAmB,EAAKM,UAAF,IACrBV,sBAAsB,CACrBI,OAAO,CAACO,MAAR,CAAkBC,MAAF,IACfA,MAAM,CAACL,KAAP,CACEM,WADF,GAEEC,UAFF,CAEcJ,UAAU,CAACG,WAAX,EAFd,CADD,CADqB;AAVxB,IADD;AAqBA;;AAED,eAAejB,WAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { ComboboxControl } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useState } from '@wordpress/element';\n\nconst AUTHORS_QUERY = {\n\twho: 'authors',\n\tper_page: -1,\n\t_fields: 'id,name',\n\tcontext: 'view',\n};\n\nfunction UserControl( { value, onChange } ) {\n\tconst [ filteredAuthorsList, setFilteredAuthorsList ] = useState();\n\tconst authorsList = useSelect( ( select ) => {\n\t\tconst { getUsers } = select( coreStore );\n\t\treturn getUsers( AUTHORS_QUERY );\n\t}, [] );\n\tif ( ! authorsList ) {\n\t\treturn null;\n\t}\n\n\tconst options = authorsList.map( ( author ) => {\n\t\treturn {\n\t\t\tlabel: author.name,\n\t\t\tvalue: author.id,\n\t\t};\n\t} );\n\n\treturn (\n\t\t<ComboboxControl\n\t\t\t__nextHasNoMarginBottom\n\t\t\tlabel={ __( 'User' ) }\n\t\t\thelp={ __(\n\t\t\t\t'Select the avatar user to display, if it is blank it will use the post/page author.'\n\t\t\t) }\n\t\t\tvalue={ value }\n\t\t\tonChange={ onChange }\n\t\t\toptions={ filteredAuthorsList || options }\n\t\t\tonFilterValueChange={ ( inputValue ) =>\n\t\t\t\tsetFilteredAuthorsList(\n\t\t\t\t\toptions.filter( ( option ) =>\n\t\t\t\t\t\toption.label\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.startsWith( inputValue.toLowerCase() )\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t}\n\t\t/>\n\t);\n}\n\nexport default UserControl;\n"]}