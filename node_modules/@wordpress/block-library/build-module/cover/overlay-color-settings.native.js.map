{"version":3,"sources":["@wordpress/block-library/src/cover/overlay-color-settings.native.js"],"names":["__","getColorObjectByColorValue","getColorObjectByAttributeValues","getGradientValueBySlug","getGradientSlugByValue","__experimentalPanelColorGradientSettings","PanelColorGradientSettings","useMemo","useMobileGlobalStylesColors","OverlayColorSettings","overlayColor","customOverlayColor","gradient","customGradient","setAttributes","colors","gradients","gradientValue","colorValue","color","settings","setOverlayAttribute","attributeName","value","undefined","onColorChange","colorObject","slug","onGradientChange","onColorCleared","label"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport {\n\tgetColorObjectByColorValue,\n\tgetColorObjectByAttributeValues,\n\tgetGradientValueBySlug,\n\tgetGradientSlugByValue,\n\t__experimentalPanelColorGradientSettings as PanelColorGradientSettings,\n} from '@wordpress/block-editor';\nimport { useMemo } from '@wordpress/element';\nimport { useMobileGlobalStylesColors } from '@wordpress/components';\n\nfunction OverlayColorSettings( {\n\toverlayColor,\n\tcustomOverlayColor,\n\tgradient,\n\tcustomGradient,\n\tsetAttributes,\n} ) {\n\tconst colors = useMobileGlobalStylesColors();\n\tconst gradients = useMobileGlobalStylesColors( 'gradients' );\n\n\tconst gradientValue =\n\t\tcustomGradient || getGradientValueBySlug( gradients, gradient );\n\n\tconst colorValue = getColorObjectByAttributeValues(\n\t\tcolors,\n\t\toverlayColor,\n\t\tcustomOverlayColor\n\t).color;\n\n\tconst settings = useMemo( () => {\n\t\tconst setOverlayAttribute = ( attributeName, value ) => {\n\t\t\tsetAttributes( {\n\t\t\t\t// Clear all related attributes (only one should be set)\n\t\t\t\toverlayColor: undefined,\n\t\t\t\tcustomOverlayColor: undefined,\n\t\t\t\tgradient: undefined,\n\t\t\t\tcustomGradient: undefined,\n\t\t\t\t[ attributeName ]: value,\n\t\t\t} );\n\t\t};\n\n\t\tconst onColorChange = ( value ) => {\n\t\t\t// Do nothing for falsy values.\n\t\t\tif ( ! value ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst colorObject = getColorObjectByColorValue( colors, value );\n\t\t\tif ( colorObject?.slug ) {\n\t\t\t\tsetOverlayAttribute( 'overlayColor', colorObject.slug );\n\t\t\t} else {\n\t\t\t\tsetOverlayAttribute( 'customOverlayColor', value );\n\t\t\t}\n\t\t};\n\n\t\tconst onGradientChange = ( value ) => {\n\t\t\t// Do nothing for falsy values.\n\t\t\tif ( ! value ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst slug = getGradientSlugByValue( gradients, value );\n\t\t\tif ( slug ) {\n\t\t\t\tsetOverlayAttribute( 'gradient', slug );\n\t\t\t} else {\n\t\t\t\tsetOverlayAttribute( 'customGradient', value );\n\t\t\t}\n\t\t};\n\n\t\tconst onColorCleared = () => {\n\t\t\tsetAttributes( {\n\t\t\t\toverlayColor: undefined,\n\t\t\t\tcustomOverlayColor: undefined,\n\t\t\t\tgradient: undefined,\n\t\t\t\tcustomGradient: undefined,\n\t\t\t} );\n\t\t};\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tlabel: __( 'Color' ),\n\t\t\t\tonColorChange,\n\t\t\t\tcolorValue,\n\t\t\t\tgradientValue,\n\t\t\t\tonGradientChange,\n\t\t\t\tonColorCleared,\n\t\t\t},\n\t\t];\n\t}, [ colorValue, gradientValue, colors, gradients ] );\n\n\treturn (\n\t\t<PanelColorGradientSettings\n\t\t\ttitle={ __( 'Overlay' ) }\n\t\t\tinitialOpen={ false }\n\t\t\tsettings={ settings }\n\t\t/>\n\t);\n}\n\nexport default OverlayColorSettings;\n"]}