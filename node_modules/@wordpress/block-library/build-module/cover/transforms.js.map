{"version":3,"sources":["@wordpress/block-library/src/cover/transforms.js"],"names":["createBlock","IMAGE_BACKGROUND_TYPE","VIDEO_BACKGROUND_TYPE","cleanEmptyObject","transforms","from","type","blocks","transform","caption","url","alt","align","id","anchor","style","dimRatio","color","duotone","content","fontSize","src","backgroundType","attributes","innerBlocks","backgroundColor","gradient","length","name","background","undefined","parentAttributes","overlayColor","customOverlayColor","customGradient","attributesWithoutBackgroundColors","to","isMatch","title","useFeaturedImage","transformedColorAttributes","groupAttributes"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { IMAGE_BACKGROUND_TYPE, VIDEO_BACKGROUND_TYPE } from './shared';\nimport cleanEmptyObject from '../utils/clean-empty-object';\n\nconst transforms = {\n\tfrom: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/image' ],\n\t\t\ttransform: ( { caption, url, alt, align, id, anchor, style } ) =>\n\t\t\t\tcreateBlock(\n\t\t\t\t\t'core/cover',\n\t\t\t\t\t{\n\t\t\t\t\t\tdimRatio: 50,\n\t\t\t\t\t\turl,\n\t\t\t\t\t\talt,\n\t\t\t\t\t\talign,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tanchor,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\t\tduotone: style?.color?.duotone,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\tcreateBlock( 'core/paragraph', {\n\t\t\t\t\t\t\tcontent: caption,\n\t\t\t\t\t\t\tfontSize: 'large',\n\t\t\t\t\t\t\talign: 'center',\n\t\t\t\t\t\t} ),\n\t\t\t\t\t]\n\t\t\t\t),\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/video' ],\n\t\t\ttransform: ( { caption, src, align, id, anchor } ) =>\n\t\t\t\tcreateBlock(\n\t\t\t\t\t'core/cover',\n\t\t\t\t\t{\n\t\t\t\t\t\tdimRatio: 50,\n\t\t\t\t\t\turl: src,\n\t\t\t\t\t\talign,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tbackgroundType: VIDEO_BACKGROUND_TYPE,\n\t\t\t\t\t\tanchor,\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\tcreateBlock( 'core/paragraph', {\n\t\t\t\t\t\t\tcontent: caption,\n\t\t\t\t\t\t\tfontSize: 'large',\n\t\t\t\t\t\t\talign: 'center',\n\t\t\t\t\t\t} ),\n\t\t\t\t\t]\n\t\t\t\t),\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/group' ],\n\t\t\ttransform: ( attributes, innerBlocks ) => {\n\t\t\t\tconst { align, anchor, backgroundColor, gradient, style } =\n\t\t\t\t\tattributes;\n\n\t\t\t\t// If the Group block being transformed has a Cover block as its\n\t\t\t\t// only child return that Cover block.\n\t\t\t\tif (\n\t\t\t\t\tinnerBlocks?.length === 1 &&\n\t\t\t\t\tinnerBlocks[ 0 ]?.name === 'core/cover'\n\t\t\t\t) {\n\t\t\t\t\treturn createBlock(\n\t\t\t\t\t\t'core/cover',\n\t\t\t\t\t\tinnerBlocks[ 0 ].attributes,\n\t\t\t\t\t\tinnerBlocks[ 0 ].innerBlocks\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// If no background or gradient color is provided, default to 50% opacity.\n\t\t\t\t// This matches the styling of a Cover block with a background image,\n\t\t\t\t// in the state where a background image has been removed.\n\t\t\t\tconst dimRatio =\n\t\t\t\t\tbackgroundColor ||\n\t\t\t\t\tgradient ||\n\t\t\t\t\tstyle?.color?.background ||\n\t\t\t\t\tstyle?.color?.gradient\n\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t: 50;\n\n\t\t\t\t// Move the background or gradient color to the parent Cover block.\n\t\t\t\tconst parentAttributes = {\n\t\t\t\t\talign,\n\t\t\t\t\tanchor,\n\t\t\t\t\tdimRatio,\n\t\t\t\t\toverlayColor: backgroundColor,\n\t\t\t\t\tcustomOverlayColor: style?.color?.background,\n\t\t\t\t\tgradient,\n\t\t\t\t\tcustomGradient: style?.color?.gradient,\n\t\t\t\t};\n\n\t\t\t\tconst attributesWithoutBackgroundColors = {\n\t\t\t\t\t...attributes,\n\t\t\t\t\tbackgroundColor: undefined,\n\t\t\t\t\tgradient: undefined,\n\t\t\t\t\tstyle: cleanEmptyObject( {\n\t\t\t\t\t\t...attributes?.style,\n\t\t\t\t\t\tcolor: style?.color\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t...style?.color,\n\t\t\t\t\t\t\t\t\tbackground: undefined,\n\t\t\t\t\t\t\t\t\tgradient: undefined,\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t} ),\n\t\t\t\t};\n\n\t\t\t\t// Preserve the block by nesting it within the Cover block,\n\t\t\t\t// instead of converting the Group block directly to the Cover block.\n\t\t\t\treturn createBlock( 'core/cover', parentAttributes, [\n\t\t\t\t\tcreateBlock(\n\t\t\t\t\t\t'core/group',\n\t\t\t\t\t\tattributesWithoutBackgroundColors,\n\t\t\t\t\t\tinnerBlocks\n\t\t\t\t\t),\n\t\t\t\t] );\n\t\t\t},\n\t\t},\n\t],\n\tto: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/image' ],\n\t\t\tisMatch: ( {\n\t\t\t\tbackgroundType,\n\t\t\t\turl,\n\t\t\t\toverlayColor,\n\t\t\t\tcustomOverlayColor,\n\t\t\t\tgradient,\n\t\t\t\tcustomGradient,\n\t\t\t} ) => {\n\t\t\t\tif ( url ) {\n\t\t\t\t\t// If a url exists the transform could happen if that URL represents an image background.\n\t\t\t\t\treturn backgroundType === IMAGE_BACKGROUND_TYPE;\n\t\t\t\t}\n\t\t\t\t// If a url is not set the transform could happen if the cover has no background color or gradient;\n\t\t\t\treturn (\n\t\t\t\t\t! overlayColor &&\n\t\t\t\t\t! customOverlayColor &&\n\t\t\t\t\t! gradient &&\n\t\t\t\t\t! customGradient\n\t\t\t\t);\n\t\t\t},\n\t\t\ttransform: ( { title, url, alt, align, id, anchor, style } ) =>\n\t\t\t\tcreateBlock( 'core/image', {\n\t\t\t\t\tcaption: title,\n\t\t\t\t\turl,\n\t\t\t\t\talt,\n\t\t\t\t\talign,\n\t\t\t\t\tid,\n\t\t\t\t\tanchor,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\tduotone: style?.color?.duotone,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t} ),\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/video' ],\n\t\t\tisMatch: ( {\n\t\t\t\tbackgroundType,\n\t\t\t\turl,\n\t\t\t\toverlayColor,\n\t\t\t\tcustomOverlayColor,\n\t\t\t\tgradient,\n\t\t\t\tcustomGradient,\n\t\t\t} ) => {\n\t\t\t\tif ( url ) {\n\t\t\t\t\t// If a url exists the transform could happen if that URL represents a video background.\n\t\t\t\t\treturn backgroundType === VIDEO_BACKGROUND_TYPE;\n\t\t\t\t}\n\t\t\t\t// If a url is not set the transform could happen if the cover has no background color or gradient;\n\t\t\t\treturn (\n\t\t\t\t\t! overlayColor &&\n\t\t\t\t\t! customOverlayColor &&\n\t\t\t\t\t! gradient &&\n\t\t\t\t\t! customGradient\n\t\t\t\t);\n\t\t\t},\n\t\t\ttransform: ( { title, url, align, id, anchor } ) =>\n\t\t\t\tcreateBlock( 'core/video', {\n\t\t\t\t\tcaption: title,\n\t\t\t\t\tsrc: url,\n\t\t\t\t\tid,\n\t\t\t\t\talign,\n\t\t\t\t\tanchor,\n\t\t\t\t} ),\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/group' ],\n\t\t\tisMatch: ( { url, useFeaturedImage } ) => {\n\t\t\t\t// If the Cover block uses background media, skip this transform,\n\t\t\t\t// and instead use the Group block's default transform.\n\t\t\t\tif ( url || useFeaturedImage ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\ttransform: ( attributes, innerBlocks ) => {\n\t\t\t\t// Convert Cover overlay colors to comparable Group background colors.\n\t\t\t\tconst transformedColorAttributes = {\n\t\t\t\t\tbackgroundColor: attributes?.overlayColor,\n\t\t\t\t\tgradient: attributes?.gradient,\n\t\t\t\t\tstyle: cleanEmptyObject( {\n\t\t\t\t\t\t...attributes?.style,\n\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\tattributes?.customOverlayColor ||\n\t\t\t\t\t\t\tattributes?.customGradient ||\n\t\t\t\t\t\t\tattributes?.style?.color\n\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\tbackground:\n\t\t\t\t\t\t\t\t\t\t\tattributes?.customOverlayColor,\n\t\t\t\t\t\t\t\t\t\tgradient: attributes?.customGradient,\n\t\t\t\t\t\t\t\t\t\t...attributes?.style?.color,\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t} ),\n\t\t\t\t};\n\n\t\t\t\t// If the Cover block contains only a single Group block as a direct child,\n\t\t\t\t// then attempt to merge the Cover's background colors with the child Group block,\n\t\t\t\t// and remove the Cover block as the wrapper.\n\t\t\t\tif (\n\t\t\t\t\tinnerBlocks?.length === 1 &&\n\t\t\t\t\tinnerBlocks[ 0 ]?.name === 'core/group'\n\t\t\t\t) {\n\t\t\t\t\tconst groupAttributes = cleanEmptyObject(\n\t\t\t\t\t\tinnerBlocks[ 0 ].attributes || {}\n\t\t\t\t\t);\n\n\t\t\t\t\t// If the Group block contains any kind of background color or gradient,\n\t\t\t\t\t// skip merging Cover background colors, and preserve the Group block's colors.\n\t\t\t\t\tif (\n\t\t\t\t\t\tgroupAttributes?.backgroundColor ||\n\t\t\t\t\t\tgroupAttributes?.gradient ||\n\t\t\t\t\t\tgroupAttributes?.style?.color?.background ||\n\t\t\t\t\t\tgroupAttributes?.style?.color?.gradient\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn createBlock(\n\t\t\t\t\t\t\t'core/group',\n\t\t\t\t\t\t\tgroupAttributes,\n\t\t\t\t\t\t\tinnerBlocks[ 0 ]?.innerBlocks\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn createBlock(\n\t\t\t\t\t\t'core/group',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...transformedColorAttributes,\n\t\t\t\t\t\t\t...groupAttributes,\n\t\t\t\t\t\t\tstyle: cleanEmptyObject( {\n\t\t\t\t\t\t\t\t...groupAttributes?.style,\n\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\ttransformedColorAttributes?.style?.color ||\n\t\t\t\t\t\t\t\t\tgroupAttributes?.style?.color\n\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t...transformedColorAttributes\n\t\t\t\t\t\t\t\t\t\t\t\t\t?.style?.color,\n\t\t\t\t\t\t\t\t\t\t\t\t...groupAttributes?.style\n\t\t\t\t\t\t\t\t\t\t\t\t\t?.color,\n\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\t} ),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tinnerBlocks[ 0 ]?.innerBlocks\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// In all other cases, transform the Cover block directly to a Group block.\n\t\t\t\treturn createBlock(\n\t\t\t\t\t'core/group',\n\t\t\t\t\t{ ...attributes, ...transformedColorAttributes },\n\t\t\t\t\tinnerBlocks\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t],\n};\n\nexport default transforms;\n"]}