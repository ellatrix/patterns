{"version":3,"sources":["@wordpress/block-library/src/post-navigation-link/variations.js"],"names":["__","next","previous","variations","isDefault","name","title","description","icon","attributes","type","scope","forEach","variation","isActive","blockAttributes","variationAttributes"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,EAAT,QAAmB,iBAAnB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AAEA,MAAMC,UAAU,GAAG,CAClB;AACCC,EAAAA,SAAS,EAAE,IADZ;AAECC,EAAAA,IAAI,EAAE,WAFP;AAGCC,EAAAA,KAAK,EAAEN,EAAE,CAAE,WAAF,CAHV;AAICO,EAAAA,WAAW,EAAEP,EAAE,CACd,uDADc,CAJhB;AAOCQ,EAAAA,IAAI,EAAEP,IAPP;AAQCQ,EAAAA,UAAU,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR,GARb;AASCC,EAAAA,KAAK,EAAE,CAAE,UAAF,EAAc,WAAd;AATR,CADkB,EAYlB;AACCN,EAAAA,IAAI,EAAE,eADP;AAECC,EAAAA,KAAK,EAAEN,EAAE,CAAE,eAAF,CAFV;AAGCO,EAAAA,WAAW,EAAEP,EAAE,CACd,wDADc,CAHhB;AAMCQ,EAAAA,IAAI,EAAEN,QANP;AAOCO,EAAAA,UAAU,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAPb;AAQCC,EAAAA,KAAK,EAAE,CAAE,UAAF,EAAc,WAAd;AARR,CAZkB,CAAnB;AAwBA;AACA;AACA;AACA;AACA;;AACAR,UAAU,CAACS,OAAX,CAAsBC,SAAF,IAAiB;AACpC,MAAKA,SAAS,CAACC,QAAf,EAA0B;;AAC1BD,EAAAA,SAAS,CAACC,QAAV,GAAqB,CAAEC,eAAF,EAAmBC,mBAAnB,KACpBD,eAAe,CAACL,IAAhB,KAAyBM,mBAAmB,CAACN,IAD9C;AAEA,CAJD;AAMA,eAAeP,UAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { next, previous } from '@wordpress/icons';\n\nconst variations = [\n\t{\n\t\tisDefault: true,\n\t\tname: 'post-next',\n\t\ttitle: __( 'Next post' ),\n\t\tdescription: __(\n\t\t\t'Displays the post link that follows the current post.'\n\t\t),\n\t\ticon: next,\n\t\tattributes: { type: 'next' },\n\t\tscope: [ 'inserter', 'transform' ],\n\t},\n\t{\n\t\tname: 'post-previous',\n\t\ttitle: __( 'Previous post' ),\n\t\tdescription: __(\n\t\t\t'Displays the post link that precedes the current post.'\n\t\t),\n\t\ticon: previous,\n\t\tattributes: { type: 'previous' },\n\t\tscope: [ 'inserter', 'transform' ],\n\t},\n];\n\n/**\n * Add `isActive` function to all `post-navigation-link` variations, if not defined.\n * `isActive` function is used to find a variation match from a created\n *  Block by providing its attributes.\n */\nvariations.forEach( ( variation ) => {\n\tif ( variation.isActive ) return;\n\tvariation.isActive = ( blockAttributes, variationAttributes ) =>\n\t\tblockAttributes.type === variationAttributes.type;\n} );\n\nexport default variations;\n"]}