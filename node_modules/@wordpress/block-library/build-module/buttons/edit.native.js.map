{"version":3,"sources":["@wordpress/block-library/src/buttons/edit.native.js"],"names":["View","BlockControls","InnerBlocks","JustifyContentControl","store","blockEditorStore","createBlock","getBlockSupport","debounce","useResizeObserver","useDispatch","useSelect","useState","useEffect","useRef","useCallback","alignmentHelpers","name","buttonBlockName","styles","ALLOWED_BLOCKS","layoutProp","type","alignments","ButtonsEdit","attributes","layout","align","clientId","isSelected","setAttributes","blockWidth","resizeObserver","sizes","maxWidth","setMaxWidth","marginLeft","spacing","layoutBlockSupport","defaultBlockLayout","default","usedLayout","justifyContent","isInnerButtonSelected","shouldDelete","select","getBlockCount","getBlockParents","getSelectedBlockClientId","selectedBlockClientId","selectedBlockParents","preferredStyle","preferredStyleVariations","getSettings","__experimentalPreferredStyleVariations","value","getBlockOrder","insertBlock","removeBlock","selectBlock","width","isFullWidth","isFullWidthBlock","onAddNextButton","selectedId","order","selectedButtonIndex","findIndex","i","index","length","insertedBlock","renderFooterAppender","appenderContainer","justifyControls","remove","shouldRenderFooterAppender","position","variant","className","current","undefined"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tBlockControls,\n\tInnerBlocks,\n\tJustifyContentControl,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { createBlock, getBlockSupport } from '@wordpress/blocks';\nimport { debounce, useResizeObserver } from '@wordpress/compose';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useState, useEffect, useRef, useCallback } from '@wordpress/element';\nimport { alignmentHelpers } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { name as buttonBlockName } from '../button/';\nimport styles from './editor.scss';\n\nconst ALLOWED_BLOCKS = [ buttonBlockName ];\n\nconst layoutProp = { type: 'default', alignments: [] };\n\nexport default function ButtonsEdit( {\n\tattributes: { layout, align },\n\tclientId,\n\tisSelected,\n\tsetAttributes,\n\tblockWidth,\n\tname,\n} ) {\n\tconst [ resizeObserver, sizes ] = useResizeObserver();\n\tconst [ maxWidth, setMaxWidth ] = useState( 0 );\n\tconst { marginLeft: spacing } = styles.spacing;\n\n\t// Extract attributes from block layout\n\tconst layoutBlockSupport = getBlockSupport( name, '__experimentalLayout' );\n\tconst defaultBlockLayout = layoutBlockSupport?.default;\n\tconst usedLayout = layout || defaultBlockLayout || {};\n\tconst { justifyContent } = usedLayout;\n\n\tconst { isInnerButtonSelected, shouldDelete } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockCount, getBlockParents, getSelectedBlockClientId } =\n\t\t\t\tselect( blockEditorStore );\n\t\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\t\t\tconst selectedBlockParents = getBlockParents(\n\t\t\t\tselectedBlockClientId,\n\t\t\t\ttrue\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tisInnerButtonSelected: selectedBlockParents[ 0 ] === clientId,\n\t\t\t\t// The purpose of `shouldDelete` check is giving the ability to\n\t\t\t\t// pass to mobile toolbar function called `onDelete` which removes\n\t\t\t\t// the whole `Buttons` container along with the last inner button\n\t\t\t\t// when there is exactly one button.\n\t\t\t\tshouldDelete: getBlockCount( clientId ) === 1,\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tconst preferredStyle = useSelect( ( select ) => {\n\t\tconst preferredStyleVariations =\n\t\t\tselect( blockEditorStore ).getSettings()\n\t\t\t\t.__experimentalPreferredStyleVariations;\n\t\treturn preferredStyleVariations?.value?.[ buttonBlockName ];\n\t}, [] );\n\n\tconst { getBlockOrder } = useSelect( blockEditorStore );\n\tconst { insertBlock, removeBlock, selectBlock } =\n\t\tuseDispatch( blockEditorStore );\n\n\tuseEffect( () => {\n\t\tconst { width } = sizes || {};\n\t\tconst { isFullWidth } = alignmentHelpers;\n\n\t\tif ( width ) {\n\t\t\tconst isFullWidthBlock = isFullWidth( align );\n\t\t\tsetMaxWidth( isFullWidthBlock ? blockWidth : width );\n\t\t}\n\t}, [ sizes, align ] );\n\n\tconst onAddNextButton = useCallback(\n\t\tdebounce( ( selectedId ) => {\n\t\t\tconst order = getBlockOrder( clientId );\n\t\t\tconst selectedButtonIndex = order.findIndex(\n\t\t\t\t( i ) => i === selectedId\n\t\t\t);\n\n\t\t\tconst index =\n\t\t\t\tselectedButtonIndex === -1\n\t\t\t\t\t? order.length + 1\n\t\t\t\t\t: selectedButtonIndex;\n\n\t\t\tconst insertedBlock = createBlock( 'core/button' );\n\n\t\t\tinsertBlock( insertedBlock, index, clientId );\n\t\t\tselectBlock( insertedBlock.clientId );\n\t\t}, 200 ),\n\t\t[]\n\t);\n\n\tconst renderFooterAppender = useRef( () => (\n\t\t<View style={ styles.appenderContainer }>\n\t\t\t<InnerBlocks.ButtonBlockAppender\n\t\t\t\tisFloating={ true }\n\t\t\t\tonAddBlock={ onAddNextButton }\n\t\t\t/>\n\t\t</View>\n\t) );\n\n\tconst justifyControls = [ 'left', 'center', 'right' ];\n\n\tconst remove = useCallback( () => removeBlock( clientId ), [ clientId ] );\n\tconst shouldRenderFooterAppender = isSelected || isInnerButtonSelected;\n\treturn (\n\t\t<>\n\t\t\t{ isSelected && (\n\t\t\t\t<BlockControls group=\"block\">\n\t\t\t\t\t<JustifyContentControl\n\t\t\t\t\t\tallowedControls={ justifyControls }\n\t\t\t\t\t\tvalue={ justifyContent }\n\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\t\t...usedLayout,\n\t\t\t\t\t\t\t\t\tjustifyContent: value,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpopoverProps={ {\n\t\t\t\t\t\t\tposition: 'bottom right',\n\t\t\t\t\t\t\tvariant: 'toolbar',\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t</BlockControls>\n\t\t\t) }\n\t\t\t{ resizeObserver }\n\t\t\t<InnerBlocks\n\t\t\t\tallowedBlocks={ ALLOWED_BLOCKS }\n\t\t\t\ttemplate={ [\n\t\t\t\t\t[\n\t\t\t\t\t\tbuttonBlockName,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tclassName:\n\t\t\t\t\t\t\t\tpreferredStyle &&\n\t\t\t\t\t\t\t\t`is-style-${ preferredStyle }`,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t] }\n\t\t\t\trenderFooterAppender={\n\t\t\t\t\tshouldRenderFooterAppender && renderFooterAppender.current\n\t\t\t\t}\n\t\t\t\torientation=\"horizontal\"\n\t\t\t\thorizontalAlignment={ justifyContent }\n\t\t\t\tonDeleteBlock={ shouldDelete ? remove : undefined }\n\t\t\t\tonAddBlock={ onAddNextButton }\n\t\t\t\tparentWidth={ maxWidth } // This value controls the width of that the buttons are able to expand to.\n\t\t\t\tmarginHorizontal={ spacing }\n\t\t\t\tmarginVertical={ spacing }\n\t\t\t\t__experimentalLayout={ layoutProp }\n\t\t\t\ttemplateInsertUpdatesSelection\n\t\t\t\tblockWidth={ blockWidth }\n\t\t\t/>\n\t\t</>\n\t);\n}\n"]}