{"version":3,"sources":["@wordpress/block-library/src/spacer/edit.native.js"],"names":["View","useWindowDimensions","useConvertUnitToMobile","withPreferredColorScheme","InspectorControls","isValueSpacingPreset","useSetting","getCustomValueFromPreset","getPxFromCssUnit","useEffect","Controls","DEFAULT_VALUES","styles","DEFAULT_FONT_SIZE","Spacer","attributes","context","setAttributes","isSelected","getStylesFromColorScheme","height","screenHeight","width","screenWidth","cssUnitOptions","fontSize","spacingSizes","name","slug","size","orientation","defaultStyle","staticSpacer","staticDarkSpacer","convertedHeight","convertedWidth","presetValues","heightValue","parsedPresetHeightValue","parseFloat","px","presetHeight","widthValue","parsedPresetWidthValue","presetWidth","selectedSpacer"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View, useWindowDimensions } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { useConvertUnitToMobile } from '@wordpress/components';\nimport { withPreferredColorScheme } from '@wordpress/compose';\nimport {\n\tInspectorControls,\n\tisValueSpacingPreset,\n\tuseSetting,\n\tgetCustomValueFromPreset,\n\tgetPxFromCssUnit,\n} from '@wordpress/block-editor';\nimport { useEffect } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport Controls, { DEFAULT_VALUES } from './controls';\nimport styles from './editor.native.scss';\n\nconst DEFAULT_FONT_SIZE = 16;\n\nconst Spacer = ( {\n\tattributes,\n\tcontext,\n\tsetAttributes,\n\tisSelected,\n\tgetStylesFromColorScheme,\n} ) => {\n\tconst { height: screenHeight, width: screenWidth } = useWindowDimensions();\n\tconst cssUnitOptions = {\n\t\theight: screenHeight,\n\t\twidth: screenWidth,\n\t\tfontSize: DEFAULT_FONT_SIZE,\n\t};\n\tconst { height, width } = attributes;\n\tconst spacingSizes = [\n\t\t{ name: 0, slug: '0', size: 0 },\n\t\t...( useSetting( 'spacing.spacingSizes' ) || [] ),\n\t];\n\tconst { orientation } = context;\n\tconst defaultStyle = getStylesFromColorScheme(\n\t\tstyles.staticSpacer,\n\t\tstyles.staticDarkSpacer\n\t);\n\n\tuseEffect( () => {\n\t\tif ( orientation === 'horizontal' && ! width ) {\n\t\t\tsetAttributes( {\n\t\t\t\theight: '0px',\n\t\t\t\twidth: '72px',\n\t\t\t} );\n\t\t}\n\t}, [] );\n\n\tlet convertedHeight = useConvertUnitToMobile( height );\n\tlet convertedWidth = useConvertUnitToMobile( width );\n\tconst presetValues = {};\n\n\tif ( isValueSpacingPreset( height ) ) {\n\t\tconst heightValue = getCustomValueFromPreset( height, spacingSizes );\n\t\tconst parsedPresetHeightValue = parseFloat(\n\t\t\tgetPxFromCssUnit( heightValue, cssUnitOptions )\n\t\t);\n\n\t\tconvertedHeight = parsedPresetHeightValue || DEFAULT_VALUES.px;\n\t\tpresetValues.presetHeight = convertedHeight;\n\t}\n\n\tif ( isValueSpacingPreset( width ) ) {\n\t\tconst widthValue = getCustomValueFromPreset( width, spacingSizes );\n\t\tconst parsedPresetWidthValue = parseFloat(\n\t\t\tgetPxFromCssUnit( widthValue, cssUnitOptions )\n\t\t);\n\n\t\tconvertedWidth = parsedPresetWidthValue || DEFAULT_VALUES.px;\n\t\tpresetValues.presetWidth = convertedWidth;\n\t}\n\n\treturn (\n\t\t<View\n\t\t\tstyle={ [\n\t\t\t\tdefaultStyle,\n\t\t\t\tisSelected && styles.selectedSpacer,\n\t\t\t\t{ height: convertedHeight, width: convertedWidth },\n\t\t\t] }\n\t\t>\n\t\t\t{ isSelected && (\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<Controls\n\t\t\t\t\t\tattributes={ attributes }\n\t\t\t\t\t\tcontext={ context }\n\t\t\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t\t\t\t{ ...presetValues }\n\t\t\t\t\t/>\n\t\t\t\t</InspectorControls>\n\t\t\t) }\n\t\t</View>\n\t);\n};\n\nexport default withPreferredColorScheme( Spacer );\n"]}