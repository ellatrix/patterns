{"version":3,"sources":["@wordpress/block-library/src/image/utils.js"],"names":["isEmpty","NEW_TAB_REL","removeNewTabRel","currentRel","newRel","undefined","forEach","relVal","regExp","RegExp","replace","trim","getUpdatedLinkTargetSettings","value","rel","linkTarget","updatedRel","getImageSizeAttributes","image","size","url","media_details","sizes","source_url","width","height","sizeSlug"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,OAAT,QAAwB,QAAxB;AAEA;AACA;AACA;;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,SAASC,eAAT,CAA0BC,UAA1B,EAAuC;AAC7C,MAAIC,MAAM,GAAGD,UAAb;;AAEA,MAAKA,UAAU,KAAKE,SAAf,IAA4B,CAAEL,OAAO,CAAEI,MAAF,CAA1C,EAAuD;AACtD,QAAK,CAAEJ,OAAO,CAAEI,MAAF,CAAd,EAA2B;AAC1BH,MAAAA,WAAW,CAACK,OAAZ,CAAuBC,MAAF,IAAc;AAClC,cAAMC,MAAM,GAAG,IAAIC,MAAJ,CAAY,QAAQF,MAAR,GAAiB,KAA7B,EAAoC,IAApC,CAAf;AACAH,QAAAA,MAAM,GAAGA,MAAM,CAACM,OAAP,CAAgBF,MAAhB,EAAwB,EAAxB,CAAT;AACA,OAHD,EAD0B,CAM1B;;AACA,UAAKJ,MAAM,KAAKD,UAAhB,EAA6B;AAC5BC,QAAAA,MAAM,GAAGA,MAAM,CAACO,IAAP,EAAT;AACA;;AAED,UAAKX,OAAO,CAAEI,MAAF,CAAZ,EAAyB;AACxBA,QAAAA,MAAM,GAAGC,SAAT;AACA;AACD;AACD;;AAED,SAAOD,MAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASQ,4BAAT,CAAuCC,KAAvC,QAAwD;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAC9D,QAAMC,UAAU,GAAGF,KAAK,GAAG,QAAH,GAAcR,SAAtC;AAEA,MAAIW,UAAJ;;AACA,MAAK,CAAED,UAAF,IAAgB,CAAED,GAAvB,EAA6B;AAC5BE,IAAAA,UAAU,GAAGX,SAAb;AACA,GAFD,MAEO;AACNW,IAAAA,UAAU,GAAGd,eAAe,CAAEY,GAAF,CAA5B;AACA;;AAED,SAAO;AACNC,IAAAA,UADM;AAEND,IAAAA,GAAG,EAAEE;AAFC,GAAP;AAIA;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,sBAAT,CAAiCC,KAAjC,EAAwCC,IAAxC,EAA+C;AAAA;;AACrD,QAAMC,GAAG,GAAGF,KAAH,aAAGA,KAAH,+CAAGA,KAAK,CAAEG,aAAV,kFAAG,qBAAsBC,KAAzB,oFAAG,sBAA+BH,IAA/B,CAAH,2DAAG,uBAAuCI,UAAnD;;AAEA,MAAKH,GAAL,EAAW;AACV,WAAO;AAAEA,MAAAA,GAAF;AAAOI,MAAAA,KAAK,EAAEnB,SAAd;AAAyBoB,MAAAA,MAAM,EAAEpB,SAAjC;AAA4CqB,MAAAA,QAAQ,EAAEP;AAAtD,KAAP;AACA;;AAED,SAAO,EAAP;AACA","sourcesContent":["/**\n * External dependencies\n */\nimport { isEmpty } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { NEW_TAB_REL } from './constants';\n\nexport function removeNewTabRel( currentRel ) {\n\tlet newRel = currentRel;\n\n\tif ( currentRel !== undefined && ! isEmpty( newRel ) ) {\n\t\tif ( ! isEmpty( newRel ) ) {\n\t\t\tNEW_TAB_REL.forEach( ( relVal ) => {\n\t\t\t\tconst regExp = new RegExp( '\\\\b' + relVal + '\\\\b', 'gi' );\n\t\t\t\tnewRel = newRel.replace( regExp, '' );\n\t\t\t} );\n\n\t\t\t// Only trim if NEW_TAB_REL values was replaced.\n\t\t\tif ( newRel !== currentRel ) {\n\t\t\t\tnewRel = newRel.trim();\n\t\t\t}\n\n\t\t\tif ( isEmpty( newRel ) ) {\n\t\t\t\tnewRel = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newRel;\n}\n\n/**\n * Helper to get the link target settings to be stored.\n *\n * @param {boolean} value          The new link target value.\n * @param {Object}  attributes     Block attributes.\n * @param {Object}  attributes.rel Image block's rel attribute.\n *\n * @return {Object} Updated link target settings.\n */\nexport function getUpdatedLinkTargetSettings( value, { rel } ) {\n\tconst linkTarget = value ? '_blank' : undefined;\n\n\tlet updatedRel;\n\tif ( ! linkTarget && ! rel ) {\n\t\tupdatedRel = undefined;\n\t} else {\n\t\tupdatedRel = removeNewTabRel( rel );\n\t}\n\n\treturn {\n\t\tlinkTarget,\n\t\trel: updatedRel,\n\t};\n}\n\n/**\n * Determines new Image block attributes size selection.\n *\n * @param {Object} image Media file object for gallery image.\n * @param {string} size  Selected size slug to apply.\n */\nexport function getImageSizeAttributes( image, size ) {\n\tconst url = image?.media_details?.sizes?.[ size ]?.source_url;\n\n\tif ( url ) {\n\t\treturn { url, width: undefined, height: undefined, sizeSlug: size };\n\t}\n\n\treturn {};\n}\n"]}