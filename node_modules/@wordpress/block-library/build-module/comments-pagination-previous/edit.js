import _extends from "@babel/runtime/helpers/esm/extends";
import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { __ } from '@wordpress/i18n';
import { useBlockProps, PlainText } from '@wordpress/block-editor';
const arrowMap = {
  none: '',
  arrow: '←',
  chevron: '«'
};
export default function CommentsPaginationPreviousEdit(_ref) {
  let {
    attributes: {
      label
    },
    setAttributes,
    context: {
      'comments/paginationArrow': paginationArrow
    }
  } = _ref;
  const displayArrow = arrowMap[paginationArrow];
  return createElement("a", _extends({
    href: "#comments-pagination-previous-pseudo-link",
    onClick: event => event.preventDefault()
  }, useBlockProps()), displayArrow && createElement("span", {
    className: `wp-block-comments-pagination-previous-arrow is-arrow-${paginationArrow}`
  }, displayArrow), createElement(PlainText, {
    __experimentalVersion: 2,
    tagName: "span",
    "aria-label": __('Older comments page link'),
    placeholder: __('Older Comments'),
    value: label,
    onChange: newLabel => setAttributes({
      label: newLabel
    })
  }));
}
//# sourceMappingURL=edit.js.map