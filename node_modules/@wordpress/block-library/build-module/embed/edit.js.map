{"version":3,"sources":["@wordpress/block-library/src/embed/edit.js"],"names":["createUpgradedEmbedBlock","getClassNames","fallback","getEmbedInfoByProvider","getMergedAttributesWithPreview","EmbedControls","embedContentIcon","EmbedLoading","EmbedPlaceholder","EmbedPreview","classnames","__","_x","sprintf","useState","useEffect","useDispatch","useSelect","useBlockProps","store","coreStore","View","EmbedEdit","props","attributes","providerNameSlug","previewable","responsive","url","attributesUrl","isSelected","onReplace","setAttributes","insertBlocksAfter","onFocus","defaultEmbedInfo","title","icon","setURL","isEditingURL","setIsEditingURL","invalidateResolution","preview","fetching","themeSupportsResponsive","cannotEmbed","select","getEmbedPreview","isPreviewEmbedFallback","isRequestingEmbedPreview","getThemeSupports","embedPreview","previewIsFallback","badEmbedProvider","html","type","undefined","wordpressCantEmbed","data","status","validPreview","getMergedAttributes","ignorePreviousClassName","toggleResponsive","allowResponsive","className","newAllowResponsive","newURL","replace","upgradedBlock","blockProps","label","showEmbedPlaceholder","event","preventDefault","target","value","caption","classFromPreview"],"mappings":"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","sourcesContent":["/**\n * Internal dependencies\n */\nimport {\n\tcreateUpgradedEmbedBlock,\n\tgetClassNames,\n\tfallback,\n\tgetEmbedInfoByProvider,\n\tgetMergedAttributesWithPreview,\n} from './util';\nimport EmbedControls from './embed-controls';\nimport { embedContentIcon } from './icons';\nimport EmbedLoading from './embed-loading';\nimport EmbedPlaceholder from './embed-placeholder';\nimport EmbedPreview from './embed-preview';\n\n/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __, _x, sprintf } from '@wordpress/i18n';\nimport { useState, useEffect } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { View } from '@wordpress/primitives';\n\nconst EmbedEdit = ( props ) => {\n\tconst {\n\t\tattributes: {\n\t\t\tproviderNameSlug,\n\t\t\tpreviewable,\n\t\t\tresponsive,\n\t\t\turl: attributesUrl,\n\t\t},\n\t\tattributes,\n\t\tisSelected,\n\t\tonReplace,\n\t\tsetAttributes,\n\t\tinsertBlocksAfter,\n\t\tonFocus,\n\t} = props;\n\n\tconst defaultEmbedInfo = {\n\t\ttitle: _x( 'Embed', 'block title' ),\n\t\ticon: embedContentIcon,\n\t};\n\tconst { icon, title } =\n\t\tgetEmbedInfoByProvider( providerNameSlug ) || defaultEmbedInfo;\n\n\tconst [ url, setURL ] = useState( attributesUrl );\n\tconst [ isEditingURL, setIsEditingURL ] = useState( false );\n\tconst { invalidateResolution } = useDispatch( coreStore );\n\n\tconst { preview, fetching, themeSupportsResponsive, cannotEmbed } =\n\t\tuseSelect(\n\t\t\t( select ) => {\n\t\t\t\tconst {\n\t\t\t\t\tgetEmbedPreview,\n\t\t\t\t\tisPreviewEmbedFallback,\n\t\t\t\t\tisRequestingEmbedPreview,\n\t\t\t\t\tgetThemeSupports,\n\t\t\t\t} = select( coreStore );\n\t\t\t\tif ( ! attributesUrl ) {\n\t\t\t\t\treturn { fetching: false, cannotEmbed: false };\n\t\t\t\t}\n\n\t\t\t\tconst embedPreview = getEmbedPreview( attributesUrl );\n\t\t\t\tconst previewIsFallback =\n\t\t\t\t\tisPreviewEmbedFallback( attributesUrl );\n\n\t\t\t\t// The external oEmbed provider does not exist. We got no type info and no html.\n\t\t\t\tconst badEmbedProvider =\n\t\t\t\t\tembedPreview?.html === false &&\n\t\t\t\t\tembedPreview?.type === undefined;\n\t\t\t\t// Some WordPress URLs that can't be embedded will cause the API to return\n\t\t\t\t// a valid JSON response with no HTML and `data.status` set to 404, rather\n\t\t\t\t// than generating a fallback response as other embeds do.\n\t\t\t\tconst wordpressCantEmbed = embedPreview?.data?.status === 404;\n\t\t\t\tconst validPreview =\n\t\t\t\t\t!! embedPreview &&\n\t\t\t\t\t! badEmbedProvider &&\n\t\t\t\t\t! wordpressCantEmbed;\n\t\t\t\treturn {\n\t\t\t\t\tpreview: validPreview ? embedPreview : undefined,\n\t\t\t\t\tfetching: isRequestingEmbedPreview( attributesUrl ),\n\t\t\t\t\tthemeSupportsResponsive:\n\t\t\t\t\t\tgetThemeSupports()[ 'responsive-embeds' ],\n\t\t\t\t\tcannotEmbed: ! validPreview || previewIsFallback,\n\t\t\t\t};\n\t\t\t},\n\t\t\t[ attributesUrl ]\n\t\t);\n\n\t/**\n\t * Returns the attributes derived from the preview, merged with the current attributes.\n\t *\n\t * @param {boolean} ignorePreviousClassName Determines if the previous className attribute should be ignored when merging.\n\t * @return {Object} Merged attributes.\n\t */\n\tconst getMergedAttributes = ( ignorePreviousClassName = false ) =>\n\t\tgetMergedAttributesWithPreview(\n\t\t\tattributes,\n\t\t\tpreview,\n\t\t\ttitle,\n\t\t\tresponsive,\n\t\t\tignorePreviousClassName\n\t\t);\n\n\tconst toggleResponsive = () => {\n\t\tconst { allowResponsive, className } = attributes;\n\t\tconst { html } = preview;\n\t\tconst newAllowResponsive = ! allowResponsive;\n\n\t\tsetAttributes( {\n\t\t\tallowResponsive: newAllowResponsive,\n\t\t\tclassName: getClassNames(\n\t\t\t\thtml,\n\t\t\t\tclassName,\n\t\t\t\tresponsive && newAllowResponsive\n\t\t\t),\n\t\t} );\n\t};\n\n\tuseEffect( () => {\n\t\tif ( ! preview?.html || ! cannotEmbed || fetching ) {\n\t\t\treturn;\n\t\t}\n\t\t// At this stage, we're not fetching the preview and know it can't be embedded,\n\t\t// so try removing any trailing slash, and resubmit.\n\t\tconst newURL = attributesUrl.replace( /\\/$/, '' );\n\t\tsetURL( newURL );\n\t\tsetIsEditingURL( false );\n\t\tsetAttributes( { url: newURL } );\n\t}, [ preview?.html, attributesUrl ] );\n\n\t// Handle incoming preview.\n\tuseEffect( () => {\n\t\tif ( preview && ! isEditingURL ) {\n\t\t\t// When obtaining an incoming preview, we set the attributes derived from\n\t\t\t// the preview data. In this case when getting the merged attributes,\n\t\t\t// we ignore the previous classname because it might not match the expected\n\t\t\t// classes by the new preview.\n\t\t\tsetAttributes( getMergedAttributes( true ) );\n\n\t\t\tif ( onReplace ) {\n\t\t\t\tconst upgradedBlock = createUpgradedEmbedBlock(\n\t\t\t\t\tprops,\n\t\t\t\t\tgetMergedAttributes()\n\t\t\t\t);\n\n\t\t\t\tif ( upgradedBlock ) {\n\t\t\t\t\tonReplace( upgradedBlock );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [ preview, isEditingURL ] );\n\n\tconst blockProps = useBlockProps();\n\n\tif ( fetching ) {\n\t\treturn (\n\t\t\t<View { ...blockProps }>\n\t\t\t\t<EmbedLoading />\n\t\t\t</View>\n\t\t);\n\t}\n\n\t// translators: %s: type of embed e.g: \"YouTube\", \"Twitter\", etc. \"Embed\" is used when no specific type exists\n\tconst label = sprintf( __( '%s URL' ), title );\n\n\t// No preview, or we can't embed the current URL, or we've clicked the edit button.\n\tconst showEmbedPlaceholder = ! preview || cannotEmbed || isEditingURL;\n\n\tif ( showEmbedPlaceholder ) {\n\t\treturn (\n\t\t\t<View { ...blockProps }>\n\t\t\t\t<EmbedPlaceholder\n\t\t\t\t\ticon={ icon }\n\t\t\t\t\tlabel={ label }\n\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\tonSubmit={ ( event ) => {\n\t\t\t\t\t\tif ( event ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsetIsEditingURL( false );\n\t\t\t\t\t\tsetAttributes( { url } );\n\t\t\t\t\t} }\n\t\t\t\t\tvalue={ url }\n\t\t\t\t\tcannotEmbed={ cannotEmbed }\n\t\t\t\t\tonChange={ ( event ) => setURL( event.target.value ) }\n\t\t\t\t\tfallback={ () => fallback( url, onReplace ) }\n\t\t\t\t\ttryAgain={ () => {\n\t\t\t\t\t\tinvalidateResolution( 'getEmbedPreview', [ url ] );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</View>\n\t\t);\n\t}\n\n\t// Even though we set attributes that get derived from the preview,\n\t// we don't access them directly because for the initial render,\n\t// the `setAttributes` call will not have taken effect. If we're\n\t// rendering responsive content, setting the responsive classes\n\t// after the preview has been rendered can result in unwanted\n\t// clipping or scrollbars. The `getAttributesFromPreview` function\n\t// that `getMergedAttributes` uses is memoized so that we're not\n\t// calculating them on every render.\n\tconst {\n\t\tcaption,\n\t\ttype,\n\t\tallowResponsive,\n\t\tclassName: classFromPreview,\n\t} = getMergedAttributes();\n\tconst className = classnames( classFromPreview, props.className );\n\n\treturn (\n\t\t<>\n\t\t\t<EmbedControls\n\t\t\t\tshowEditButton={ preview && ! cannotEmbed }\n\t\t\t\tthemeSupportsResponsive={ themeSupportsResponsive }\n\t\t\t\tblockSupportsResponsive={ responsive }\n\t\t\t\tallowResponsive={ allowResponsive }\n\t\t\t\ttoggleResponsive={ toggleResponsive }\n\t\t\t\tswitchBackToURLInput={ () => setIsEditingURL( true ) }\n\t\t\t/>\n\t\t\t<View { ...blockProps }>\n\t\t\t\t<EmbedPreview\n\t\t\t\t\tpreview={ preview }\n\t\t\t\t\tpreviewable={ previewable }\n\t\t\t\t\tclassName={ className }\n\t\t\t\t\turl={ url }\n\t\t\t\t\ttype={ type }\n\t\t\t\t\tcaption={ caption }\n\t\t\t\t\tonCaptionChange={ ( value ) =>\n\t\t\t\t\t\tsetAttributes( { caption: value } )\n\t\t\t\t\t}\n\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\ticon={ icon }\n\t\t\t\t\tlabel={ label }\n\t\t\t\t\tinsertBlocksAfter={ insertBlocksAfter }\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</>\n\t);\n};\n\nexport default EmbedEdit;\n"]}