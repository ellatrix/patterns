{"version":3,"sources":["@wordpress/block-library/src/page-list/use-convert-to-navigation-links.js"],"names":["createBlock","useSelect","useDispatch","store","blockEditorStore","createNavigationLinks","pages","linkMap","navigationLinks","forEach","id","title","link","url","type","parent","innerBlocks","label","rendered","kind","push","parentLinkInnerBlocks","findNavigationLinkById","navigationLink","attributes","length","foundNavigationLink","convertToNavigationLinks","parentPageID","parentPage","transformSubmenus","listOfLinks","block","index","listOfLinksArray","transformedBlock","useConvertToNavigationLinks","clientId","replaceBlock","selectBlock","parentNavBlockClientId","select","getSelectedBlockClientId","getBlockParentsByBlockName","_selectedBlockClientId"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,WAAT,QAA4B,mBAA5B;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,iBAAvC;AACA,SAASC,KAAK,IAAIC,gBAAlB,QAA0C,yBAA1C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,qBAAT,GAA6C;AAAA,MAAbC,KAAa,uEAAL,EAAK;AAC5C,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,eAAe,GAAG,EAAxB;AACAF,EAAAA,KAAK,CAACG,OAAN,CAAe,QAA8C;AAAA;;AAAA,QAA5C;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA,IAAI,EAAEC,GAAnB;AAAwBC,MAAAA,IAAxB;AAA8BC,MAAAA;AAA9B,KAA4C;AAC5D;AACA,UAAMC,WAAW,2CAAGT,OAAO,CAAEG,EAAF,CAAV,gDAAG,YAAeM,WAAlB,yEAAiC,EAAlD;AACAT,IAAAA,OAAO,CAAEG,EAAF,CAAP,GAAgBV,WAAW,CAC1B,sBAD0B,EAE1B;AACCU,MAAAA,EADD;AAECO,MAAAA,KAAK,EAAEN,KAAK,CAACO,QAFd;AAGCL,MAAAA,GAHD;AAICC,MAAAA,IAJD;AAKCK,MAAAA,IAAI,EAAE;AALP,KAF0B,EAS1BH,WAT0B,CAA3B;;AAYA,QAAK,CAAED,MAAP,EAAgB;AACfP,MAAAA,eAAe,CAACY,IAAhB,CAAsBb,OAAO,CAAEG,EAAF,CAA7B;AACA,KAFD,MAEO;AACN,UAAK,CAAEH,OAAO,CAAEQ,MAAF,CAAd,EAA2B;AAC1B;AACAR,QAAAA,OAAO,CAAEQ,MAAF,CAAP,GAAoB;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAApB;AACA,OAJK,CAKN;;;AACA,YAAMK,qBAAqB,GAAGd,OAAO,CAAEQ,MAAF,CAAP,CAAkBC,WAAhD;AACAK,MAAAA,qBAAqB,CAACD,IAAtB,CAA4Bb,OAAO,CAAEG,EAAF,CAAnC;AACA;AACD,GA1BD;AA4BA,SAAOF,eAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASc,sBAAT,CAAiCd,eAAjC,EAAkDE,EAAlD,EAAuD;AACtD,OAAM,MAAMa,cAAZ,IAA8Bf,eAA9B,EAAgD;AAC/C;AACA,QAAKe,cAAc,CAACC,UAAf,CAA0Bd,EAA1B,KAAiCA,EAAtC,EAA2C;AAC1C,aAAOa,cAAP;AACA,KAJ8C,CAM/C;;;AACA,QAAKA,cAAc,CAACP,WAAf,IAA8BO,cAAc,CAACP,WAAf,CAA2BS,MAA9D,EAAuE;AACtE,YAAMC,mBAAmB,GAAGJ,sBAAsB,CACjDC,cAAc,CAACP,WADkC,EAEjDN,EAFiD,CAAlD;;AAKA,UAAKgB,mBAAL,EAA2B;AAC1B,eAAOA,mBAAP;AACA;AACD;AACD;;AAED,SAAO,IAAP;AACA;;AAED,OAAO,SAASC,wBAAT,GAAqE;AAAA,MAAlCrB,KAAkC,uEAA1B,EAA0B;AAAA,MAAtBsB,YAAsB,uEAAP,IAAO;AAC3E,MAAIpB,eAAe,GAAGH,qBAAqB,CAAEC,KAAF,CAA3C,CAD2E,CAG3E;;AACA,MAAKsB,YAAL,EAAoB;AACnB,UAAMC,UAAU,GAAGP,sBAAsB,CACxCd,eADwC,EAExCoB,YAFwC,CAAzC;;AAIA,QAAKC,UAAU,IAAIA,UAAU,CAACb,WAA9B,EAA4C;AAC3CR,MAAAA,eAAe,GAAGqB,UAAU,CAACb,WAA7B;AACA;AACD,GAZ0E,CAc3E;AACA;;;AACA,QAAMc,iBAAiB,GAAKC,WAAF,IAAmB;AAC5CA,IAAAA,WAAW,CAACtB,OAAZ,CAAqB,CAAEuB,KAAF,EAASC,KAAT,EAAgBC,gBAAhB,KAAsC;AAC1D,YAAM;AAAEV,QAAAA,UAAF;AAAcR,QAAAA;AAAd,UAA8BgB,KAApC;;AACA,UAAKhB,WAAW,CAACS,MAAZ,KAAuB,CAA5B,EAAgC;AAC/BK,QAAAA,iBAAiB,CAAEd,WAAF,CAAjB;AACA,cAAMmB,gBAAgB,GAAGnC,WAAW,CACnC,yBADmC,EAEnCwB,UAFmC,EAGnCR,WAHmC,CAApC;AAKAkB,QAAAA,gBAAgB,CAAED,KAAF,CAAhB,GAA4BE,gBAA5B;AACA;AACD,KAXD;AAYA,GAbD;;AAeAL,EAAAA,iBAAiB,CAAEtB,eAAF,CAAjB;AACA,SAAOA,eAAP;AACA;AAED,OAAO,SAAS4B,2BAAT,QAIH;AAAA,MAJyC;AAC5CC,IAAAA,QAD4C;AAE5C/B,IAAAA,KAF4C;AAG5CsB,IAAAA;AAH4C,GAIzC;AACH,QAAM;AAAEU,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAgCrC,WAAW,CAAEE,gBAAF,CAAjD;AAEA,QAAM;AAAEoC,IAAAA;AAAF,MAA6BvC,SAAS,CACzCwC,MAAF,IAAc;AACb,UAAM;AAAEC,MAAAA,wBAAF;AAA4BC,MAAAA;AAA5B,QACLF,MAAM,CAAErC,gBAAF,CADP;;AAGA,UAAMwC,sBAAsB,GAAGF,wBAAwB,EAAvD;;AAEA,WAAO;AACNF,MAAAA,sBAAsB,EAAEG,0BAA0B,CACjDC,sBADiD,EAEjD,iBAFiD,EAGjD,IAHiD,CAA1B,CAIrB,CAJqB;AADlB,KAAP;AAOA,GAd0C,EAe3C,CAAEP,QAAF,CAf2C,CAA5C;AAkBA,SAAO,MAAM;AACZ,UAAM7B,eAAe,GAAGmB,wBAAwB,CAAErB,KAAF,EAASsB,YAAT,CAAhD,CADY,CAGZ;;AACAU,IAAAA,YAAY,CAAED,QAAF,EAAY7B,eAAZ,CAAZ,CAJY,CAMZ;;AACA+B,IAAAA,WAAW,CAAEC,sBAAF,CAAX;AACA,GARD;AASA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createBlock } from '@wordpress/blocks';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Converts an array of pages into a nested array of navigation link blocks.\n *\n * @param {Array} pages An array of pages.\n *\n * @return {Array} A nested array of navigation link blocks.\n */\nfunction createNavigationLinks( pages = [] ) {\n\tconst linkMap = {};\n\tconst navigationLinks = [];\n\tpages.forEach( ( { id, title, link: url, type, parent } ) => {\n\t\t// See if a placeholder exists. This is created if children appear before parents in list.\n\t\tconst innerBlocks = linkMap[ id ]?.innerBlocks ?? [];\n\t\tlinkMap[ id ] = createBlock(\n\t\t\t'core/navigation-link',\n\t\t\t{\n\t\t\t\tid,\n\t\t\t\tlabel: title.rendered,\n\t\t\t\turl,\n\t\t\t\ttype,\n\t\t\t\tkind: 'post-type',\n\t\t\t},\n\t\t\tinnerBlocks\n\t\t);\n\n\t\tif ( ! parent ) {\n\t\t\tnavigationLinks.push( linkMap[ id ] );\n\t\t} else {\n\t\t\tif ( ! linkMap[ parent ] ) {\n\t\t\t\t// Use a placeholder if the child appears before parent in list.\n\t\t\t\tlinkMap[ parent ] = { innerBlocks: [] };\n\t\t\t}\n\t\t\t// Although these variables are not referenced, they are needed to store the innerBlocks in memory.\n\t\t\tconst parentLinkInnerBlocks = linkMap[ parent ].innerBlocks;\n\t\t\tparentLinkInnerBlocks.push( linkMap[ id ] );\n\t\t}\n\t} );\n\n\treturn navigationLinks;\n}\n\n/**\n * Finds a navigation link block by id, recursively.\n * It might be possible to make this a more generic helper function.\n *\n * @param {Array}  navigationLinks An array of navigation link blocks.\n * @param {number} id              The id of the navigation link to find.\n *\n * @return {Object|null} The navigation link block with the given id.\n */\nfunction findNavigationLinkById( navigationLinks, id ) {\n\tfor ( const navigationLink of navigationLinks ) {\n\t\t// Is this the link we're looking for?\n\t\tif ( navigationLink.attributes.id === id ) {\n\t\t\treturn navigationLink;\n\t\t}\n\n\t\t// If not does it have innerBlocks?\n\t\tif ( navigationLink.innerBlocks && navigationLink.innerBlocks.length ) {\n\t\t\tconst foundNavigationLink = findNavigationLinkById(\n\t\t\t\tnavigationLink.innerBlocks,\n\t\t\t\tid\n\t\t\t);\n\n\t\t\tif ( foundNavigationLink ) {\n\t\t\t\treturn foundNavigationLink;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function convertToNavigationLinks( pages = [], parentPageID = null ) {\n\tlet navigationLinks = createNavigationLinks( pages );\n\n\t// If a parent page ID is provided, only return the children of that page.\n\tif ( parentPageID ) {\n\t\tconst parentPage = findNavigationLinkById(\n\t\t\tnavigationLinks,\n\t\t\tparentPageID\n\t\t);\n\t\tif ( parentPage && parentPage.innerBlocks ) {\n\t\t\tnavigationLinks = parentPage.innerBlocks;\n\t\t}\n\t}\n\n\t// Transform all links with innerBlocks into Submenus. This can't be done\n\t// sooner because page objects have no information on their children.\n\tconst transformSubmenus = ( listOfLinks ) => {\n\t\tlistOfLinks.forEach( ( block, index, listOfLinksArray ) => {\n\t\t\tconst { attributes, innerBlocks } = block;\n\t\t\tif ( innerBlocks.length !== 0 ) {\n\t\t\t\ttransformSubmenus( innerBlocks );\n\t\t\t\tconst transformedBlock = createBlock(\n\t\t\t\t\t'core/navigation-submenu',\n\t\t\t\t\tattributes,\n\t\t\t\t\tinnerBlocks\n\t\t\t\t);\n\t\t\t\tlistOfLinksArray[ index ] = transformedBlock;\n\t\t\t}\n\t\t} );\n\t};\n\n\ttransformSubmenus( navigationLinks );\n\treturn navigationLinks;\n}\n\nexport function useConvertToNavigationLinks( {\n\tclientId,\n\tpages,\n\tparentPageID,\n} ) {\n\tconst { replaceBlock, selectBlock } = useDispatch( blockEditorStore );\n\n\tconst { parentNavBlockClientId } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getSelectedBlockClientId, getBlockParentsByBlockName } =\n\t\t\t\tselect( blockEditorStore );\n\n\t\t\tconst _selectedBlockClientId = getSelectedBlockClientId();\n\n\t\t\treturn {\n\t\t\t\tparentNavBlockClientId: getBlockParentsByBlockName(\n\t\t\t\t\t_selectedBlockClientId,\n\t\t\t\t\t'core/navigation',\n\t\t\t\t\ttrue\n\t\t\t\t)[ 0 ],\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\treturn () => {\n\t\tconst navigationLinks = convertToNavigationLinks( pages, parentPageID );\n\n\t\t// Replace the Page List block with the Navigation Links.\n\t\treplaceBlock( clientId, navigationLinks );\n\n\t\t// Select the Navigation block to reveal the changes.\n\t\tselectBlock( parentNavBlockClientId );\n\t};\n}\n"]}