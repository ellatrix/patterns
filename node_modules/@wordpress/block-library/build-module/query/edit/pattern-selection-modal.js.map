{"version":3,"sources":["@wordpress/block-library/src/query/edit/pattern-selection-modal.js"],"names":["useState","useMemo","useDispatch","Modal","SearchControl","useAsyncList","BlockContextProvider","store","blockEditorStore","__experimentalBlockPatternsList","BlockPatternsList","__","useBlockNameForPatterns","getTransformedBlocksFromPattern","usePatterns","searchPatterns","PatternSelectionModal","clientId","attributes","setIsPatternSelectionModalOpen","searchValue","setSearchValue","replaceBlock","selectBlock","onBlockPatternSelect","pattern","blocks","newBlocks","queryClientIds","blockPreviewContext","previewPostType","query","postType","blockNameForPatterns","blockPatterns","filteredBlockPatterns","shownBlockPatterns"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,QAAT,EAAmBC,OAAnB,QAAkC,oBAAlC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,uBAArC;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SACCC,oBADD,EAECC,KAAK,IAAIC,gBAFV,EAGCC,+BAA+B,IAAIC,iBAHpC,QAIO,yBAJP;AAKA,SAASC,EAAT,QAAmB,iBAAnB;AAEA;AACA;AACA;;AACA,SACCC,uBADD,EAECC,+BAFD,EAGCC,WAHD,QAIO,UAJP;AAKA,SAASC,cAAT,QAA+B,6BAA/B;AAEA,eAAe,SAASC,qBAAT,OAIX;AAAA,MAJ2C;AAC9CC,IAAAA,QAD8C;AAE9CC,IAAAA,UAF8C;AAG9CC,IAAAA;AAH8C,GAI3C;AACH,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCrB,QAAQ,CAAE,EAAF,CAAhD;AACA,QAAM;AAAEsB,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAgCrB,WAAW,CAAEM,gBAAF,CAAjD;;AACA,QAAMgB,oBAAoB,GAAG,CAAEC,OAAF,EAAWC,MAAX,KAAuB;AACnD,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAgCf,+BAA+B,CACpEa,MADoE,EAEpER,UAFoE,CAArE;AAIAI,IAAAA,YAAY,CAAEL,QAAF,EAAYU,SAAZ,CAAZ;;AACA,QAAKC,cAAc,CAAE,CAAF,CAAnB,EAA2B;AAC1BL,MAAAA,WAAW,CAAEK,cAAc,CAAE,CAAF,CAAhB,CAAX;AACA;AACD,GATD,CAHG,CAaH;AACA;;;AACA,QAAMC,mBAAmB,GAAG5B,OAAO,CAClC,OAAQ;AACP6B,IAAAA,eAAe,EAAEZ,UAAU,CAACa,KAAX,CAAiBC;AAD3B,GAAR,CADkC,EAIlC,CAAEd,UAAU,CAACa,KAAX,CAAiBC,QAAnB,CAJkC,CAAnC;AAMA,QAAMC,oBAAoB,GAAGrB,uBAAuB,CACnDK,QADmD,EAEnDC,UAFmD,CAApD;AAIA,QAAMgB,aAAa,GAAGpB,WAAW,CAAEG,QAAF,EAAYgB,oBAAZ,CAAjC;AACA,QAAME,qBAAqB,GAAGlC,OAAO,CAAE,MAAM;AAC5C,WAAOc,cAAc,CAAEmB,aAAF,EAAiBd,WAAjB,CAArB;AACA,GAFoC,EAElC,CAAEc,aAAF,EAAiBd,WAAjB,CAFkC,CAArC;AAGA,QAAMgB,kBAAkB,GAAG/B,YAAY,CAAE8B,qBAAF,CAAvC;AAEA,SACC,cAAC,KAAD;AACC,IAAA,gBAAgB,EAAC,8CADlB;AAEC,IAAA,KAAK,EAAGxB,EAAE,CAAE,kBAAF,CAFX;AAGC,IAAA,cAAc,EAAG,MAAMQ,8BAA8B,CAAE,KAAF;AAHtD,KAKC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC,cAAC,aAAD;AACC,IAAA,uBAAuB,MADxB;AAEC,IAAA,QAAQ,EAAGE,cAFZ;AAGC,IAAA,KAAK,EAAGD,WAHT;AAIC,IAAA,KAAK,EAAGT,EAAE,CAAE,qBAAF,CAJX;AAKC,IAAA,WAAW,EAAGA,EAAE,CAAE,QAAF;AALjB,IADD,CADD,EAUC,cAAC,oBAAD;AAAsB,IAAA,KAAK,EAAGkB;AAA9B,KACC,cAAC,iBAAD;AACC,IAAA,aAAa,EAAGM,qBADjB;AAEC,IAAA,aAAa,EAAGC,kBAFjB;AAGC,IAAA,cAAc,EAAGZ;AAHlB,IADD,CAVD,CALD,CADD;AA0BA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState, useMemo } from '@wordpress/element';\nimport { useDispatch } from '@wordpress/data';\nimport { Modal, SearchControl } from '@wordpress/components';\nimport { useAsyncList } from '@wordpress/compose';\nimport {\n\tBlockContextProvider,\n\tstore as blockEditorStore,\n\t__experimentalBlockPatternsList as BlockPatternsList,\n} from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport {\n\tuseBlockNameForPatterns,\n\tgetTransformedBlocksFromPattern,\n\tusePatterns,\n} from '../utils';\nimport { searchPatterns } from '../../utils/search-patterns';\n\nexport default function PatternSelectionModal( {\n\tclientId,\n\tattributes,\n\tsetIsPatternSelectionModalOpen,\n} ) {\n\tconst [ searchValue, setSearchValue ] = useState( '' );\n\tconst { replaceBlock, selectBlock } = useDispatch( blockEditorStore );\n\tconst onBlockPatternSelect = ( pattern, blocks ) => {\n\t\tconst { newBlocks, queryClientIds } = getTransformedBlocksFromPattern(\n\t\t\tblocks,\n\t\t\tattributes\n\t\t);\n\t\treplaceBlock( clientId, newBlocks );\n\t\tif ( queryClientIds[ 0 ] ) {\n\t\t\tselectBlock( queryClientIds[ 0 ] );\n\t\t}\n\t};\n\t// When we preview Query Loop blocks we should prefer the current\n\t// block's postType, which is passed through block context.\n\tconst blockPreviewContext = useMemo(\n\t\t() => ( {\n\t\t\tpreviewPostType: attributes.query.postType,\n\t\t} ),\n\t\t[ attributes.query.postType ]\n\t);\n\tconst blockNameForPatterns = useBlockNameForPatterns(\n\t\tclientId,\n\t\tattributes\n\t);\n\tconst blockPatterns = usePatterns( clientId, blockNameForPatterns );\n\tconst filteredBlockPatterns = useMemo( () => {\n\t\treturn searchPatterns( blockPatterns, searchValue );\n\t}, [ blockPatterns, searchValue ] );\n\tconst shownBlockPatterns = useAsyncList( filteredBlockPatterns );\n\n\treturn (\n\t\t<Modal\n\t\t\toverlayClassName=\"block-library-query-pattern__selection-modal\"\n\t\t\ttitle={ __( 'Choose a pattern' ) }\n\t\t\tonRequestClose={ () => setIsPatternSelectionModalOpen( false ) }\n\t\t>\n\t\t\t<div className=\"block-library-query-pattern__selection-content\">\n\t\t\t\t<div className=\"block-library-query-pattern__selection-search\">\n\t\t\t\t\t<SearchControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tonChange={ setSearchValue }\n\t\t\t\t\t\tvalue={ searchValue }\n\t\t\t\t\t\tlabel={ __( 'Search for patterns' ) }\n\t\t\t\t\t\tplaceholder={ __( 'Search' ) }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<BlockContextProvider value={ blockPreviewContext }>\n\t\t\t\t\t<BlockPatternsList\n\t\t\t\t\t\tblockPatterns={ filteredBlockPatterns }\n\t\t\t\t\t\tshownPatterns={ shownBlockPatterns }\n\t\t\t\t\t\tonClickPattern={ onBlockPatternSelect }\n\t\t\t\t\t/>\n\t\t\t\t</BlockContextProvider>\n\t\t\t</div>\n\t\t</Modal>\n\t);\n}\n"]}