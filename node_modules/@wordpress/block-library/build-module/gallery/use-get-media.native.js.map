{"version":3,"sources":["@wordpress/block-library/src/gallery/use-get-media.native.js"],"names":["useSelect","store","coreStore","EMPTY_IMAGE_MEDIA","useGetMedia","innerBlockImages","select","imagesUploading","some","attributes","url","indexOf","imageIds","filter","id","undefined","map","imageBlock","length","getMediaItems","include","join","per_page","orderby"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,sBAAnC;AAEA,MAAMC,iBAAiB,GAAG,EAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,WAAT,CAAsBC,gBAAtB,EAAyC;AACvD,SAAOL,SAAS,CACbM,MAAF,IAAc;AAAA;;AACb,UAAMC,eAAe,GAAGF,gBAAgB,CAACG,IAAjB,CACvB;AAAA;;AAAA,UAAE;AAAEC,QAAAA;AAAF,OAAF;AAAA,aAAsB,CAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,+BAAAA,UAAU,CAAEC,GAAZ,oEAAiBC,OAAjB,CAA0B,OAA1B,OAAwC,CAA9D;AAAA,KADuB,CAAxB;AAGA,UAAMC,QAAQ,GAAGP,gBAAgB,CAC/BQ,MADe,CACP,SAAsB;AAAA,UAApB;AAAEJ,QAAAA;AAAF,OAAoB;AAC9B,YAAM;AAAEK,QAAAA,EAAF;AAAMJ,QAAAA;AAAN,UAAcD,UAApB;AACA,aAAOK,EAAE,KAAKC,SAAP,IAAoB,CAAAL,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEC,OAAL,CAAc,OAAd,OAA4B,CAAvD;AACA,KAJe,EAKfK,GALe,CAKRC,UAAF,IAAkBA,UAAU,CAACR,UAAX,CAAsBK,EAL9B,CAAjB;;AAOA,QAAKF,QAAQ,CAACM,MAAT,KAAoB,CAApB,IAAyBX,eAA9B,EAAgD;AAC/C,aAAOJ,iBAAP;AACA;;AAED,oCACCG,MAAM,CAAEJ,SAAF,CAAN,CAAoBiB,aAApB,CAAmC;AAClCC,MAAAA,OAAO,EAAER,QAAQ,CAACS,IAAT,CAAe,GAAf,CADyB;AAElCC,MAAAA,QAAQ,EACPV,QAAQ,CAACM;AAAO;AAHiB;AAIlCK,MAAAA,OAAO,EAAE;AAJyB,KAAnC,CADD,yEAMQpB,iBANR;AAQA,GAxBc,EAyBf,CAAEE,gBAAF,CAzBe,CAAhB;AA2BA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\nconst EMPTY_IMAGE_MEDIA = [];\n\n/**\n * Retrieves the extended media info for each gallery image from the store. This is used to\n * determine which image size options are available for the current gallery.\n *\n * @param {Array} innerBlockImages An array of the innerBlock images currently in the gallery.\n *\n * @return {Array} An array of media info options for each gallery image.\n */\nexport default function useGetMedia( innerBlockImages ) {\n\treturn useSelect(\n\t\t( select ) => {\n\t\t\tconst imagesUploading = innerBlockImages.some(\n\t\t\t\t( { attributes } ) => attributes?.url?.indexOf( 'file:' ) === 0\n\t\t\t);\n\t\t\tconst imageIds = innerBlockImages\n\t\t\t\t.filter( ( { attributes } ) => {\n\t\t\t\t\tconst { id, url } = attributes;\n\t\t\t\t\treturn id !== undefined && url?.indexOf( 'file:' ) !== 0;\n\t\t\t\t} )\n\t\t\t\t.map( ( imageBlock ) => imageBlock.attributes.id );\n\n\t\t\tif ( imageIds.length === 0 || imagesUploading ) {\n\t\t\t\treturn EMPTY_IMAGE_MEDIA;\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\tselect( coreStore ).getMediaItems( {\n\t\t\t\t\tinclude: imageIds.join( ',' ),\n\t\t\t\t\tper_page:\n\t\t\t\t\t\timageIds.length /* 'hard' limit necessary as unbounded queries aren't supported on native */,\n\t\t\t\t\torderby: 'include',\n\t\t\t\t} ) ?? EMPTY_IMAGE_MEDIA\n\t\t\t);\n\t\t},\n\t\t[ innerBlockImages ]\n\t);\n}\n"]}