{"version":3,"sources":["@wordpress/block-library/src/calendar/edit.js"],"names":["memoize","calendar","icon","Disabled","Placeholder","Spinner","useSelect","ServerSideRender","useBlockProps","store","coreStore","__","getYearMonth","date","dateObj","Date","year","getFullYear","month","getMonth","CalendarEdit","attributes","blockProps","hasPosts","hasPostsResolved","select","getEntityRecords","hasFinishedResolution","singlePublishedPostQuery","status","per_page","posts","postsResolved","_date","editorSelectors","postType","getEditedPostAttribute","length"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport memoize from 'memize';\n\n/**\n * WordPress dependencies\n */\nimport { calendar as icon } from '@wordpress/icons';\nimport { Disabled, Placeholder, Spinner } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport ServerSideRender from '@wordpress/server-side-render';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Returns the year and month of a specified date.\n *\n * @see `WP_REST_Posts_Controller::prepare_date_response()`.\n *\n * @param {string} date Date in `ISO8601/RFC3339` format.\n * @return {Object} Year and date of the specified date.\n */\nconst getYearMonth = memoize( ( date ) => {\n\tif ( ! date ) {\n\t\treturn {};\n\t}\n\tconst dateObj = new Date( date );\n\treturn {\n\t\tyear: dateObj.getFullYear(),\n\t\tmonth: dateObj.getMonth() + 1,\n\t};\n} );\n\nexport default function CalendarEdit( { attributes } ) {\n\tconst blockProps = useBlockProps();\n\tconst { date, hasPosts, hasPostsResolved } = useSelect( ( select ) => {\n\t\tconst { getEntityRecords, hasFinishedResolution } = select( coreStore );\n\n\t\tconst singlePublishedPostQuery = {\n\t\t\tstatus: 'publish',\n\t\t\tper_page: 1,\n\t\t};\n\t\tconst posts = getEntityRecords(\n\t\t\t'postType',\n\t\t\t'post',\n\t\t\tsinglePublishedPostQuery\n\t\t);\n\t\tconst postsResolved = hasFinishedResolution( 'getEntityRecords', [\n\t\t\t'postType',\n\t\t\t'post',\n\t\t\tsinglePublishedPostQuery,\n\t\t] );\n\n\t\tlet _date;\n\n\t\t// FIXME: @wordpress/block-library should not depend on @wordpress/editor.\n\t\t// Blocks can be loaded into a *non-post* block editor.\n\t\t// eslint-disable-next-line @wordpress/data-no-store-string-literals\n\t\tconst editorSelectors = select( 'core/editor' );\n\t\tif ( editorSelectors ) {\n\t\t\tconst postType = editorSelectors.getEditedPostAttribute( 'type' );\n\t\t\t// Dates are used to overwrite year and month used on the calendar.\n\t\t\t// This overwrite should only happen for 'post' post types.\n\t\t\t// For other post types the calendar always displays the current month.\n\t\t\tif ( postType === 'post' ) {\n\t\t\t\t_date = editorSelectors.getEditedPostAttribute( 'date' );\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdate: _date,\n\t\t\thasPostsResolved: postsResolved,\n\t\t\thasPosts: postsResolved && posts?.length === 1,\n\t\t};\n\t}, [] );\n\n\tif ( ! hasPosts ) {\n\t\treturn (\n\t\t\t<div { ...blockProps }>\n\t\t\t\t<Placeholder icon={ icon } label={ __( 'Calendar' ) }>\n\t\t\t\t\t{ ! hasPostsResolved ? (\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t__( 'No published posts found.' )\n\t\t\t\t\t) }\n\t\t\t\t</Placeholder>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div { ...blockProps }>\n\t\t\t<Disabled>\n\t\t\t\t<ServerSideRender\n\t\t\t\t\tblock=\"core/calendar\"\n\t\t\t\t\tattributes={ { ...attributes, ...getYearMonth( date ) } }\n\t\t\t\t/>\n\t\t\t</Disabled>\n\t\t</div>\n\t);\n}\n"]}