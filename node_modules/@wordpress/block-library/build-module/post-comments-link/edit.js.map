{"version":3,"sources":["@wordpress/block-library/src/post-comments-link/edit.js"],"names":["classnames","AlignmentControl","BlockControls","Warning","useBlockProps","useState","useEffect","useSelect","apiFetch","addQueryArgs","__","sprintf","_n","store","coreStore","PostCommentsLinkEdit","context","attributes","setAttributes","textAlign","postType","postId","commentsCount","setCommentsCount","blockProps","className","currentPostId","path","post","parse","then","res","headers","get","select","getEditedEntityRecord","link","commentsText","undefined","commentsNumber","parseInt","toLocaleString","nextAlign","event","preventDefault"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tAlignmentControl,\n\tBlockControls,\n\tWarning,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\nimport { useState, useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport apiFetch from '@wordpress/api-fetch';\nimport { addQueryArgs } from '@wordpress/url';\nimport { __, sprintf, _n } from '@wordpress/i18n';\nimport { store as coreStore } from '@wordpress/core-data';\n\nfunction PostCommentsLinkEdit( { context, attributes, setAttributes } ) {\n\tconst { textAlign } = attributes;\n\tconst { postType, postId } = context;\n\tconst [ commentsCount, setCommentsCount ] = useState();\n\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t} ),\n\t} );\n\n\tuseEffect( () => {\n\t\tif ( ! postId ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentPostId = postId;\n\t\tapiFetch( {\n\t\t\tpath: addQueryArgs( '/wp/v2/comments', {\n\t\t\t\tpost: postId,\n\t\t\t} ),\n\t\t\tparse: false,\n\t\t} ).then( ( res ) => {\n\t\t\t// Stale requests will have the `currentPostId` of an older closure.\n\t\t\tif ( currentPostId === postId ) {\n\t\t\t\tsetCommentsCount( res.headers.get( 'X-WP-Total' ) );\n\t\t\t}\n\t\t} );\n\t}, [ postId ] );\n\n\tconst post = useSelect(\n\t\t( select ) =>\n\t\t\tselect( coreStore ).getEditedEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\tpostType,\n\t\t\t\tpostId\n\t\t\t),\n\t\t[ postType, postId ]\n\t);\n\n\tif ( ! post ) {\n\t\treturn null;\n\t}\n\n\tconst { link } = post;\n\n\tlet commentsText;\n\tif ( commentsCount !== undefined ) {\n\t\tconst commentsNumber = parseInt( commentsCount );\n\n\t\tif ( commentsNumber === 0 ) {\n\t\t\tcommentsText = __( 'No comments' );\n\t\t} else {\n\t\t\tcommentsText = sprintf(\n\t\t\t\t/* translators: %s: Number of comments */\n\t\t\t\t_n( '%s comment', '%s comments', commentsNumber ),\n\t\t\t\tcommentsNumber.toLocaleString()\n\t\t\t);\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<AlignmentControl\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\n\t\t\t<div { ...blockProps }>\n\t\t\t\t{ link && commentsText !== undefined ? (\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={ link + '#comments' }\n\t\t\t\t\t\tonClick={ ( event ) => event.preventDefault() }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ commentsText }\n\t\t\t\t\t</a>\n\t\t\t\t) : (\n\t\t\t\t\t<Warning>\n\t\t\t\t\t\t{ __( 'Post Comments Link block: post not found.' ) }\n\t\t\t\t\t</Warning>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default PostCommentsLinkEdit;\n"]}