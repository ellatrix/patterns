{"version":3,"sources":["@wordpress/block-library/src/paragraph/edit.native.js"],"names":["__","createBlock","AlignmentControl","BlockControls","RichText","store","blockEditorStore","useCallback","useSelect","name","allowedParentBlockAlignments","ParagraphBlock","attributes","mergeBlocks","onReplace","setAttributes","style","clientId","parentBlockAlignment","isRTL","select","getSettings","align","content","placeholder","styles","baseColors","color","text","placeholderColor","linkColor","elements","link","onAlignmentChange","nextAlign","parentTextAlignment","includes","undefined","textAlignment","nextContent","value","isOriginal","newAttributes","block"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { createBlock } from '@wordpress/blocks';\nimport {\n\tAlignmentControl,\n\tBlockControls,\n\tRichText,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { useCallback } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\n\nconst name = 'core/paragraph';\n\nconst allowedParentBlockAlignments = [ 'left', 'center', 'right' ];\n\nfunction ParagraphBlock( {\n\tattributes,\n\tmergeBlocks,\n\tonReplace,\n\tsetAttributes,\n\tstyle,\n\tclientId,\n\tparentBlockAlignment,\n} ) {\n\tconst isRTL = useSelect( ( select ) => {\n\t\treturn !! select( blockEditorStore ).getSettings().isRTL;\n\t}, [] );\n\n\tconst { align, content, placeholder } = attributes;\n\n\tconst styles = {\n\t\t...( style?.baseColors && {\n\t\t\tcolor: style.baseColors?.color?.text,\n\t\t\tplaceholderColor: style.color || style.baseColors?.color?.text,\n\t\t\tlinkColor: style.baseColors?.elements?.link?.color?.text,\n\t\t} ),\n\t\t...style,\n\t};\n\n\tconst onAlignmentChange = useCallback( ( nextAlign ) => {\n\t\tsetAttributes( { align: nextAlign } );\n\t}, [] );\n\n\tconst parentTextAlignment = allowedParentBlockAlignments.includes(\n\t\tparentBlockAlignment\n\t)\n\t\t? parentBlockAlignment\n\t\t: undefined;\n\n\tconst textAlignment = align || parentTextAlignment;\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<AlignmentControl\n\t\t\t\t\tvalue={ align }\n\t\t\t\t\tisRTL={ isRTL }\n\t\t\t\t\tonChange={ onAlignmentChange }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<RichText\n\t\t\t\tidentifier=\"content\"\n\t\t\t\ttagName=\"p\"\n\t\t\t\tvalue={ content }\n\t\t\t\tdeleteEnter={ true }\n\t\t\t\tstyle={ styles }\n\t\t\t\tonChange={ ( nextContent ) => {\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\tcontent: nextContent,\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t\tonSplit={ ( value, isOriginal ) => {\n\t\t\t\t\tlet newAttributes;\n\n\t\t\t\t\tif ( isOriginal || value ) {\n\t\t\t\t\t\tnewAttributes = {\n\t\t\t\t\t\t\t...attributes,\n\t\t\t\t\t\t\tcontent: value,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tconst block = createBlock( name, newAttributes );\n\n\t\t\t\t\tif ( isOriginal ) {\n\t\t\t\t\t\tblock.clientId = clientId;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn block;\n\t\t\t\t} }\n\t\t\t\tonMerge={ mergeBlocks }\n\t\t\t\tonReplace={ onReplace }\n\t\t\t\tonRemove={ onReplace ? () => onReplace( [] ) : undefined }\n\t\t\t\tplaceholder={ placeholder || __( 'Start writingâ€¦' ) }\n\t\t\t\ttextAlign={ textAlignment }\n\t\t\t\t__unstableEmbedURLOnPaste\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default ParagraphBlock;\n"]}