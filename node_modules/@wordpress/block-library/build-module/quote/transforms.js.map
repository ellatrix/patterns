{"version":3,"sources":["@wordpress/block-library/src/quote/transforms.js"],"names":["createBlock","transforms","from","type","blocks","transform","value","citation","anchor","fontSize","style","content","innerBlocks","prefix","schema","blockquote","children","selector","node","handler","HTML","innerHTML","mode","isMultiBlock","isMatch","length","includes","name","some","__experimentalConvert","map","block","attributes","to","every","join"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createBlock } from '@wordpress/blocks';\n\nconst transforms = {\n\tfrom: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/pullquote' ],\n\t\t\ttransform: ( { value, citation, anchor, fontSize, style } ) => {\n\t\t\t\treturn createBlock(\n\t\t\t\t\t'core/quote',\n\t\t\t\t\t{\n\t\t\t\t\t\tcitation,\n\t\t\t\t\t\tanchor,\n\t\t\t\t\t\tfontSize,\n\t\t\t\t\t\tstyle,\n\t\t\t\t\t},\n\t\t\t\t\t[ createBlock( 'core/paragraph', { content: value } ) ]\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/group' ],\n\t\t\ttransform: ( { anchor }, innerBlocks ) =>\n\t\t\t\tcreateBlock( 'core/quote', { anchor }, innerBlocks ),\n\t\t},\n\t\t{\n\t\t\ttype: 'prefix',\n\t\t\tprefix: '>',\n\t\t\ttransform: ( content ) =>\n\t\t\t\tcreateBlock( 'core/quote', {}, [\n\t\t\t\t\tcreateBlock( 'core/paragraph', { content } ),\n\t\t\t\t] ),\n\t\t},\n\t\t{\n\t\t\ttype: 'raw',\n\t\t\tschema: () => ( {\n\t\t\t\tblockquote: {\n\t\t\t\t\tchildren: '*',\n\t\t\t\t},\n\t\t\t} ),\n\t\t\tselector: 'blockquote',\n\t\t\ttransform: ( node, handler ) => {\n\t\t\t\treturn createBlock(\n\t\t\t\t\t'core/quote',\n\t\t\t\t\t// Don't try to parse any `cite` out of this content.\n\t\t\t\t\t// * There may be more than one cite.\n\t\t\t\t\t// * There may be more attribution text than just the cite.\n\t\t\t\t\t// * If the cite is nested in the quoted text, it's wrong to\n\t\t\t\t\t//   remove it.\n\t\t\t\t\t{},\n\t\t\t\t\thandler( {\n\t\t\t\t\t\tHTML: node.innerHTML,\n\t\t\t\t\t\tmode: 'BLOCKS',\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tisMultiBlock: true,\n\t\t\tblocks: [ '*' ],\n\t\t\tisMatch: ( {}, blocks ) => {\n\t\t\t\t// When a single block is selected make the tranformation\n\t\t\t\t// available only to specific blocks that make sense.\n\t\t\t\tif ( blocks.length === 1 ) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t'core/paragraph',\n\t\t\t\t\t\t'core/heading',\n\t\t\t\t\t\t'core/list',\n\t\t\t\t\t\t'core/pullquote',\n\t\t\t\t\t].includes( blocks[ 0 ].name );\n\t\t\t\t}\n\t\t\t\treturn ! blocks.some( ( { name } ) => name === 'core/quote' );\n\t\t\t},\n\t\t\t__experimentalConvert: ( blocks ) =>\n\t\t\t\tcreateBlock(\n\t\t\t\t\t'core/quote',\n\t\t\t\t\t{},\n\t\t\t\t\tblocks.map( ( block ) =>\n\t\t\t\t\t\tcreateBlock(\n\t\t\t\t\t\t\tblock.name,\n\t\t\t\t\t\t\tblock.attributes,\n\t\t\t\t\t\t\tblock.innerBlocks\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t},\n\t],\n\tto: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/pullquote' ],\n\t\t\tisMatch: ( {}, block ) => {\n\t\t\t\treturn block.innerBlocks.every(\n\t\t\t\t\t( { name } ) => name === 'core/paragraph'\n\t\t\t\t);\n\t\t\t},\n\t\t\ttransform: (\n\t\t\t\t{ citation, anchor, fontSize, style },\n\t\t\t\tinnerBlocks\n\t\t\t) => {\n\t\t\t\tconst value = innerBlocks\n\t\t\t\t\t.map( ( { attributes } ) => `${ attributes.content }` )\n\t\t\t\t\t.join( '<br>' );\n\t\t\t\treturn createBlock( 'core/pullquote', {\n\t\t\t\t\tvalue,\n\t\t\t\t\tcitation,\n\t\t\t\t\tanchor,\n\t\t\t\t\tfontSize,\n\t\t\t\t\tstyle,\n\t\t\t\t} );\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/group' ],\n\t\t\ttransform: ( { citation, anchor }, innerBlocks ) =>\n\t\t\t\tcreateBlock(\n\t\t\t\t\t'core/group',\n\t\t\t\t\t{ anchor },\n\t\t\t\t\tcitation\n\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t...innerBlocks,\n\t\t\t\t\t\t\t\tcreateBlock( 'core/paragraph', {\n\t\t\t\t\t\t\t\t\tcontent: citation,\n\t\t\t\t\t\t\t\t} ),\n\t\t\t\t\t\t  ]\n\t\t\t\t\t\t: innerBlocks\n\t\t\t\t),\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ '*' ],\n\t\t\ttransform: ( { citation }, innerBlocks ) =>\n\t\t\t\tcitation\n\t\t\t\t\t? [\n\t\t\t\t\t\t\t...innerBlocks,\n\t\t\t\t\t\t\tcreateBlock( 'core/paragraph', {\n\t\t\t\t\t\t\t\tcontent: citation,\n\t\t\t\t\t\t\t} ),\n\t\t\t\t\t  ]\n\t\t\t\t\t: innerBlocks,\n\t\t},\n\t],\n};\n\nexport default transforms;\n"]}