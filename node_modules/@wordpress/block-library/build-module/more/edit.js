import { createElement, Fragment } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { __ } from '@wordpress/i18n';
import { PanelBody, ToggleControl } from '@wordpress/components';
import { InspectorControls, useBlockProps } from '@wordpress/block-editor';
import { ENTER } from '@wordpress/keycodes';
import { getDefaultBlockName, createBlock } from '@wordpress/blocks';

const DEFAULT_TEXT = __('Read more');

export default function MoreEdit(_ref) {
  let {
    attributes: {
      customText,
      noTeaser
    },
    insertBlocksAfter,
    setAttributes
  } = _ref;

  const onChangeInput = event => {
    setAttributes({
      customText: event.target.value !== '' ? event.target.value : undefined
    });
  };

  const onKeyDown = _ref2 => {
    let {
      keyCode
    } = _ref2;

    if (keyCode === ENTER) {
      insertBlocksAfter([createBlock(getDefaultBlockName())]);
    }
  };

  const getHideExcerptHelp = checked => checked ? __('The excerpt is hidden.') : __('The excerpt is visible.');

  const toggleHideExcerpt = () => setAttributes({
    noTeaser: !noTeaser
  });

  const style = {
    width: `${(customText ? customText : DEFAULT_TEXT).length + 1.2}em`
  };
  return createElement(Fragment, null, createElement(InspectorControls, null, createElement(PanelBody, null, createElement(ToggleControl, {
    __nextHasNoMarginBottom: true,
    label: __('Hide the excerpt on the full content page'),
    checked: !!noTeaser,
    onChange: toggleHideExcerpt,
    help: getHideExcerptHelp
  }))), createElement("div", useBlockProps(), createElement("input", {
    "aria-label": __('“Read more” link text'),
    type: "text",
    value: customText,
    placeholder: DEFAULT_TEXT,
    onChange: onChangeInput,
    onKeyDown: onKeyDown,
    style: style
  })));
}
//# sourceMappingURL=edit.js.map