"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = InspectorControlsFill;

var _element = require("@wordpress/element");

var _reactNative = require("react-native");

var _components = require("@wordpress/components");

var _warning = _interopRequireDefault(require("@wordpress/warning"));

var _deprecated = _interopRequireDefault(require("@wordpress/deprecated"));

var _groups = _interopRequireDefault(require("./groups"));

var _useDisplayBlockControls = _interopRequireDefault(require("../use-display-block-controls"));

var _blockSettings = require("../block-settings");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function InspectorControlsFill(_ref) {
  var _groups$group;

  let {
    children,
    group = 'default',
    __experimentalGroup,
    ...props
  } = _ref;

  if (__experimentalGroup) {
    (0, _deprecated.default)('`__experimentalGroup` property in `InspectorControlsFill`', {
      since: '6.2',
      version: '6.4',
      alternative: '`group`'
    });
    group = __experimentalGroup;
  }

  const isDisplayed = (0, _useDisplayBlockControls.default)();
  const Fill = (_groups$group = _groups.default[group]) === null || _groups$group === void 0 ? void 0 : _groups$group.Fill;

  if (!Fill) {
    typeof process !== "undefined" && process.env && process.env.NODE_ENV !== "production" ? (0, _warning.default)(`Unknown InspectorControl group "${group}" provided.`) : void 0;
    return null;
  }

  if (!isDisplayed) {
    return null;
  }

  return (0, _element.createElement)(_element.Fragment, null, (0, _element.createElement)(Fill, props, (0, _element.createElement)(_components.BottomSheetConsumer, null, () => (0, _element.createElement)(_reactNative.View, null, children))), _element.Children.count(children) > 0 && (0, _element.createElement)(_blockSettings.BlockSettingsButton, null));
}
//# sourceMappingURL=fill.native.js.map