"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = FormatEdit;

var _element = require("@wordpress/element");

var _richText = require("@wordpress/rich-text");

/**
 * WordPress dependencies
 */
function FormatEdit(_ref) {
  let {
    formatTypes,
    onChange,
    onFocus,
    value,
    forwardedRef
  } = _ref;
  return formatTypes.map(settings => {
    const {
      name,
      edit: Edit
    } = settings;

    if (!Edit) {
      return null;
    }

    const activeFormat = (0, _richText.getActiveFormat)(value, name);
    let isActive = activeFormat !== undefined;
    const activeObject = (0, _richText.getActiveObject)(value);
    const isObjectActive = activeObject !== undefined && activeObject.type === name; // Edge case: un-collapsed link formats.
    // If there is a missing link format at either end of the selection
    // then we shouldn't show the Edit UI because the selection has exceeded
    // the bounds of the link format.
    // Also if the format objects don't match then we're dealing with two separate
    // links so we should not allow the link to be modified over the top.

    if (name === 'core/link' && !(0, _richText.isCollapsed)(value)) {
      var _formats$value$start, _formats;

      const formats = value.formats;
      const linkFormatAtStart = (_formats$value$start = formats[value.start]) === null || _formats$value$start === void 0 ? void 0 : _formats$value$start.find(_ref2 => {
        let {
          type
        } = _ref2;
        return type === 'core/link';
      });
      const linkFormatAtEnd = (_formats = formats[value.end - 1]) === null || _formats === void 0 ? void 0 : _formats.find(_ref3 => {
        let {
          type
        } = _ref3;
        return type === 'core/link';
      });

      if (!linkFormatAtStart || !linkFormatAtEnd || linkFormatAtStart !== linkFormatAtEnd) {
        isActive = false;
      }
    }

    return (0, _element.createElement)(Edit, {
      key: name,
      isActive: isActive,
      activeAttributes: isActive ? activeFormat.attributes || {} : {},
      isObjectActive: isObjectActive,
      activeObjectAttributes: isObjectActive ? activeObject.attributes || {} : {},
      value: value,
      onChange: onChange,
      onFocus: onFocus,
      contentRef: forwardedRef
    });
  });
}
//# sourceMappingURL=format-edit.js.map