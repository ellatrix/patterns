"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useFirefoxCompat = useFirefoxCompat;

var _compose = require("@wordpress/compose");

var _data = require("@wordpress/data");

var _store = require("../../store");

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function useFirefoxCompat() {
  const {
    isMultiSelecting
  } = (0, _data.useSelect)(_store.store);
  return (0, _compose.useRefEffect)(element => {
    function onFocus() {
      if (!isMultiSelecting()) {
        return;
      } // This is a little hack to work around focus issues with nested
      // editable elements in Firefox. For some reason the editable child
      // element sometimes regains focus, while it should not be focusable
      // and focus should remain on the editable parent element.
      // To do: try to find the cause of the shifting focus.


      const parentEditable = element.parentElement.closest('[contenteditable="true"]');

      if (parentEditable) {
        parentEditable.focus();
      }
    }

    element.addEventListener('focus', onFocus);
    return () => {
      element.removeEventListener('focus', onFocus);
    };
  }, []);
}
//# sourceMappingURL=use-firefox-compat.js.map