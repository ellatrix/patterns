"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.blockAllowed = blockAllowed;
exports.createInserterSection = createInserterSection;
exports.filterInserterItems = filterInserterItems;
const REUSABLE_BLOCKS_CATEGORY = 'reusable';
const ALLOWED_EMBED_VARIATIONS = ['core/embed', 'core/embed/youtube', 'core/embed/twitter', 'core/embed/wordpress', 'core/embed/instagram', 'core/embed/vimeo'];

function blockAllowed(block, _ref) {
  let {
    onlyReusable,
    allowReusable
  } = _ref;
  const {
    id,
    category
  } = block;
  const isReusable = category === REUSABLE_BLOCKS_CATEGORY;

  if (onlyReusable) {
    return isReusable;
  }

  if (isReusable) {
    return allowReusable;
  } // We don't want to show all possible embed variations
  // as different blocks in the inserter. We'll only show a
  // few popular ones.


  return category !== 'embed' || ALLOWED_EMBED_VARIATIONS.includes(id);
}

function filterInserterItems(items) {
  let {
    onlyReusable = false,
    allowReusable = false
  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return items.filter(block => blockAllowed(block, {
    onlyReusable,
    allowReusable
  }));
}

function createInserterSection(_ref2) {
  let {
    key,
    metadata = {},
    items
  } = _ref2;

  if (!key) {
    throw new Error('A unique key for the section must be provided.');
  }

  return {
    metadata,
    data: [{
      key,
      list: items
    }]
  };
}
//# sourceMappingURL=utils.native.js.map