"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _data = require("@wordpress/data");

var _reactNativeBridge = require("@wordpress/react-native-bridge");

var _store = require("../../../store");

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function useBlockTypeImpressions(blockTypes) {
  const {
    blockTypeImpressions
  } = (0, _data.useSelect)(select => {
    const {
      getSettings: getBlockEditorSettings
    } = select(_store.store);
    const {
      impressions
    } = getBlockEditorSettings();
    return {
      blockTypeImpressions: impressions
    };
  }, []);
  const {
    updateSettings
  } = (0, _data.useDispatch)(_store.store);
  const items = blockTypes.map(blockType => ({ ...blockType,
    isNew: blockTypeImpressions[blockType.name] > 0
  }));

  const trackBlockTypeSelected = _ref => {
    let {
      name
    } = _ref;

    if (blockTypeImpressions[name] > 0) {
      const updatedBlockTypeImpressions = { ...blockTypeImpressions,
        [name]: 0
      }; // Persist block type impression to JavaScript store.

      updateSettings({
        impressions: updatedBlockTypeImpressions
      }); // Persist block type impression count to native app store.

      (0, _reactNativeBridge.setBlockTypeImpressions)(updatedBlockTypeImpressions);
    }
  };

  return {
    items,
    trackBlockTypeSelected
  };
}

var _default = useBlockTypeImpressions;
exports.default = _default;
//# sourceMappingURL=use-block-type-impressions.native.js.map