{"version":3,"sources":["@wordpress/block-editor/src/components/block-caption/index.native.js"],"names":["BlockCaption","accessible","accessibilityLabelCreator","onBlur","onChange","onFocus","isSelected","shouldDisplay","text","insertBlocksAfter","styles","container","padding","select","clientId","getBlockAttributes","getSelectedBlockClientId","getBlockName","getBlockRootClientId","blockEditorStore","caption","isBlockSelected","parentId","parentBlockName","hideCaption","RichText","isEmpty","dispatch","updateBlockAttributes"],"mappings":";;;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AACA;;AAKA;;AACA;;AAjBA;AACA;AACA;;AAGA;AACA;AACA;;AAMA;AACA;AACA;AAIA,MAAMA,YAAY,GAAG;AAAA,MAAE;AACtBC,IAAAA,UADsB;AAEtBC,IAAAA,yBAFsB;AAGtBC,IAAAA,MAHsB;AAItBC,IAAAA,QAJsB;AAKtBC,IAAAA,OALsB;AAMtBC,IAAAA,UANsB;AAOtBC,IAAAA,aAPsB;AAQtBC,IAAAA,IARsB;AAStBC,IAAAA;AATsB,GAAF;AAAA,SAWpB,4BAAC,iBAAD;AAAM,IAAA,KAAK,EAAG,CAAEC,gBAAOC,SAAT,EAAoBJ,aAAa,IAAIG,gBAAOE,OAA5C;AAAd,KACC,4BAAC,oBAAD;AACC,IAAA,yBAAyB,EAAGV,yBAD7B;AAEC,IAAA,UAAU,EAAGD,UAFd;AAGC,IAAA,UAAU,EAAGK,UAHd;AAIC,IAAA,MAAM,EAAGH,MAJV;AAKC,IAAA,QAAQ,EAAGC,QALZ;AAMC,IAAA,OAAO,EAAGC,OANX;AAOC,IAAA,aAAa,EAAGE,aAPjB;AAQC,IAAA,KAAK,EAAGC,IART;AASC,IAAA,iBAAiB,EAAGC;AATrB,IADD,CAXoB;AAAA,CAArB;;eA0Be,sBAAS,CACvB,sBAAY,CAAEI,MAAF,YAA4B;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;AACvC,QAAM;AACLC,IAAAA,kBADK;AAELC,IAAAA,wBAFK;AAGLC,IAAAA,YAHK;AAILC,IAAAA;AAJK,MAKFL,MAAM,CAAEM,YAAF,CALV;AAMA,QAAM;AAAEC,IAAAA;AAAF,MAAcL,kBAAkB,CAAED,QAAF,CAAlB,IAAkC,EAAtD;AACA,QAAMO,eAAe,GAAGL,wBAAwB,OAAOF,QAAvD,CARuC,CAUvC;AACA;AACA;AACA;;AACA,QAAMQ,QAAQ,GAAGJ,oBAAoB,CAAEJ,QAAF,CAArC;AACA,QAAMS,eAAe,GAAGN,YAAY,CAAEK,QAAF,CAApC;AAEA,QAAME,WAAW,GAAG,6BACnBD,eADmB,EAEnB,sCAFmB,EAGnB,KAHmB,CAApB,CAjBuC,CAuBvC;AACA;;AACA,QAAMhB,aAAa,GAClB,CAAEiB,WAAF,KACE,CAAEC,sBAASC,OAAT,CAAkBN,OAAlB,CAAF,GAAgC,CAAhC,IAAqCC,eADvC,CADD;AAIA,SAAO;AACNd,IAAAA,aADM;AAENC,IAAAA,IAAI,EAAEY;AAFA,GAAP;AAIA,CAjCD,CADuB,EAmCvB,wBAAc,CAAEO,QAAF,YAA8B;AAAA,MAAlB;AAAEb,IAAAA;AAAF,GAAkB;AAC3C,QAAM;AAAEc,IAAAA;AAAF,MAA4BD,QAAQ,CAAER,YAAF,CAA1C;AACA,SAAO;AACNf,IAAAA,QAAQ,EAAIgB,OAAF,IAAe;AACxBQ,MAAAA,qBAAqB,CAAEd,QAAF,EAAY;AAAEM,QAAAA;AAAF,OAAZ,CAArB;AACA;AAHK,GAAP;AAKA,CAPD,CAnCuB,CAAT,EA2CVpB,YA3CU,C","sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Caption, RichText } from '@wordpress/block-editor';\nimport { compose } from '@wordpress/compose';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { hasBlockSupport } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport styles from './styles.scss';\nimport { store as blockEditorStore } from '../../store';\n\nconst BlockCaption = ( {\n\taccessible,\n\taccessibilityLabelCreator,\n\tonBlur,\n\tonChange,\n\tonFocus,\n\tisSelected,\n\tshouldDisplay,\n\ttext,\n\tinsertBlocksAfter,\n} ) => (\n\t<View style={ [ styles.container, shouldDisplay && styles.padding ] }>\n\t\t<Caption\n\t\t\taccessibilityLabelCreator={ accessibilityLabelCreator }\n\t\t\taccessible={ accessible }\n\t\t\tisSelected={ isSelected }\n\t\t\tonBlur={ onBlur }\n\t\t\tonChange={ onChange }\n\t\t\tonFocus={ onFocus }\n\t\t\tshouldDisplay={ shouldDisplay }\n\t\t\tvalue={ text }\n\t\t\tinsertBlocksAfter={ insertBlocksAfter }\n\t\t/>\n\t</View>\n);\n\nexport default compose( [\n\twithSelect( ( select, { clientId } ) => {\n\t\tconst {\n\t\t\tgetBlockAttributes,\n\t\t\tgetSelectedBlockClientId,\n\t\t\tgetBlockName,\n\t\t\tgetBlockRootClientId,\n\t\t} = select( blockEditorStore );\n\t\tconst { caption } = getBlockAttributes( clientId ) || {};\n\t\tconst isBlockSelected = getSelectedBlockClientId() === clientId;\n\n\t\t// Detect whether the block is an inner block by checking if it has a parent block.\n\t\t// getBlockRootClientId() will return an empty string for all top-level blocks.\n\t\t// If the block is an inner block, its parent may explicitly hide child block controls.\n\t\t// See: https://github.com/wordpress-mobile/gutenberg-mobile/pull/4256\n\t\tconst parentId = getBlockRootClientId( clientId );\n\t\tconst parentBlockName = getBlockName( parentId );\n\n\t\tconst hideCaption = hasBlockSupport(\n\t\t\tparentBlockName,\n\t\t\t'__experimentalHideChildBlockControls',\n\t\t\tfalse\n\t\t);\n\n\t\t// We'll render the caption so that the soft keyboard is not forced to close on Android\n\t\t// but still hide it by setting its display style to none. See wordpress-mobile/gutenberg-mobile#1221\n\t\tconst shouldDisplay =\n\t\t\t! hideCaption &&\n\t\t\t( ! RichText.isEmpty( caption ) > 0 || isBlockSelected );\n\n\t\treturn {\n\t\t\tshouldDisplay,\n\t\t\ttext: caption,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { clientId } ) => {\n\t\tconst { updateBlockAttributes } = dispatch( blockEditorStore );\n\t\treturn {\n\t\t\tonChange: ( caption ) => {\n\t\t\t\tupdateBlockAttributes( clientId, { caption } );\n\t\t\t},\n\t\t};\n\t} ),\n] )( BlockCaption );\n"]}