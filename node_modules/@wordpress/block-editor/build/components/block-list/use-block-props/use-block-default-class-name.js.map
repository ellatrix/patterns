{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/use-block-props/use-block-default-class-name.js"],"names":["useBlockDefaultClassName","clientId","select","name","blockEditorStore","getBlockName","blockType","hasLightBlockWrapper","apiVersion"],"mappings":";;;;;;;AAGA;;AACA;;AAKA;;AATA;AACA;AACA;;AAIA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,wBAAT,CAAmCC,QAAnC,EAA8C;AACpD,SAAO,qBACJC,MAAF,IAAc;AACb,UAAMC,IAAI,GAAGD,MAAM,CAAEE,YAAF,CAAN,CAA2BC,YAA3B,CAAyCJ,QAAzC,CAAb;AACA,UAAMK,SAAS,GAAG,0BAAcH,IAAd,CAAlB;AACA,UAAMI,oBAAoB,GAAG,CAAAD,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEE,UAAX,IAAwB,CAArD;;AAEA,QAAK,CAAED,oBAAP,EAA8B;AAC7B;AACA;;AAED,WAAO,sCAA0BJ,IAA1B,CAAP;AACA,GAXK,EAYN,CAAEF,QAAF,CAZM,CAAP;AAcA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { getBlockType, getBlockDefaultClassName } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../../store';\n\n/**\n * Returns the default class name if the block is a light block and it supports\n * `className`.\n *\n * @param {string} clientId The block client ID.\n *\n * @return {string} The class name, e.g. `wp-block-paragraph`.\n */\nexport function useBlockDefaultClassName( clientId ) {\n\treturn useSelect(\n\t\t( select ) => {\n\t\t\tconst name = select( blockEditorStore ).getBlockName( clientId );\n\t\t\tconst blockType = getBlockType( name );\n\t\t\tconst hasLightBlockWrapper = blockType?.apiVersion > 1;\n\n\t\t\tif ( ! hasLightBlockWrapper ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn getBlockDefaultClassName( name );\n\t\t},\n\t\t[ clientId ]\n\t);\n}\n"]}