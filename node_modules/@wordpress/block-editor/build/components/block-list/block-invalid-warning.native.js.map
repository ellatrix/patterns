{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/block-invalid-warning.native.js"],"names":["BlockInvalidWarning","blockTitle","icon","clientId","accessibilityLabel","selector","select","getBlock","blockEditorStore","block","replaceBlock","recoverBlock","name","attributes","innerBlocks","attemptBlockRecovery"],"mappings":";;;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AAKA;;AACA;;AAhBA;AACA;AACA;;AAGA;AACA;AACA;;AAKA;AACA;AACA;AAIe,SAASA,mBAAT,OAA+D;AAAA,MAAjC;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA;AAApB,GAAiC;AAC7E,QAAMC,kBAAkB,GAAG;AAC1B;AACA,gBAAI,0CAAJ,CAF0B,EAG1BH,UAH0B,CAA3B;;AAMA,QAAMI,QAAQ,GAAKC,MAAF,IAAc;AAC9B,UAAM;AAAEC,MAAAA;AAAF,QAAeD,MAAM,CAAEE,YAAF,CAA3B;AACA,UAAMC,KAAK,GAAGF,QAAQ,CAAEJ,QAAF,CAAtB;AACA,WAAO;AACNM,MAAAA;AADM,KAAP;AAGA,GAND;;AAQA,QAAM;AAAEA,IAAAA;AAAF,MAAY,qBAAWJ,QAAX,EAAqB,CAAEF,QAAF,CAArB,CAAlB;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAmB,uBAAaF,YAAb,CAAzB;;AAEA,QAAMG,YAAY,GAAG;AAAA,QAAE;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,UAAR;AAAoBC,MAAAA;AAApB,KAAF;AAAA,WACpB,yBAAaF,IAAb,EAAmBC,UAAnB,EAA+BC,WAA/B,CADoB;AAAA,GAArB;;AAGA,QAAMC,oBAAoB,GAAG,MAAM;AAClCL,IAAAA,YAAY,CAAED,KAAK,CAACN,QAAR,EAAkBQ,YAAY,CAAEF,KAAF,CAA9B,CAAZ;AACA,GAFD;;AAIA,SACC,4BAAC,qCAAD;AACC,IAAA,OAAO,EAAGM,oBADX;AAEC,IAAA,UAAU,EAAG,IAFd;AAGC,IAAA,iBAAiB,EAAG;AAHrB,KAKC,4BAAC,gBAAD;AACC,IAAA,KAAK,EAAGd,UADT,CAEC;AAFD;AAGC,IAAA,OAAO,EAAG,cACT,4DADS,CAHX;AAMC,IAAA,IAAI,EAAGC,IANR;AAOC,IAAA,kBAAkB,EAAGE;AAPtB,IALD,CADD;AAiBA","sourcesContent":["/**\n * External dependencies\n */\nimport { TouchableWithoutFeedback } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport Warning from '../warning';\nimport { store as blockEditorStore } from '../../store';\n\nexport default function BlockInvalidWarning( { blockTitle, icon, clientId } ) {\n\tconst accessibilityLabel = sprintf(\n\t\t/* translators: accessibility text for blocks with invalid content. %d: localized block title */\n\t\t__( '%s block. This block has invalid content' ),\n\t\tblockTitle\n\t);\n\n\tconst selector = ( select ) => {\n\t\tconst { getBlock } = select( blockEditorStore );\n\t\tconst block = getBlock( clientId );\n\t\treturn {\n\t\t\tblock,\n\t\t};\n\t};\n\n\tconst { block } = useSelect( selector, [ clientId ] );\n\n\tconst { replaceBlock } = useDispatch( blockEditorStore );\n\n\tconst recoverBlock = ( { name, attributes, innerBlocks } ) =>\n\t\tcreateBlock( name, attributes, innerBlocks );\n\n\tconst attemptBlockRecovery = () => {\n\t\treplaceBlock( block.clientId, recoverBlock( block ) );\n\t};\n\n\treturn (\n\t\t<TouchableWithoutFeedback\n\t\t\tonPress={ attemptBlockRecovery }\n\t\t\taccessible={ true }\n\t\t\taccessibilityRole={ 'button' }\n\t\t>\n\t\t\t<Warning\n\t\t\t\ttitle={ blockTitle }\n\t\t\t\t// eslint-disable-next-line @wordpress/i18n-no-collapsible-whitespace\n\t\t\t\tmessage={ __(\n\t\t\t\t\t'Problem displaying block. \\nTap to attempt block recovery.'\n\t\t\t\t) }\n\t\t\t\ticon={ icon }\n\t\t\t\taccessibilityLabel={ accessibilityLabel }\n\t\t\t/>\n\t\t</TouchableWithoutFeedback>\n\t);\n}\n"]}