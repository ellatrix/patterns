"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = BlockInvalidWarning;

var _element = require("@wordpress/element");

var _reactNative = require("react-native");

var _i18n = require("@wordpress/i18n");

var _data = require("@wordpress/data");

var _blocks = require("@wordpress/blocks");

var _warning = _interopRequireDefault(require("../warning"));

var _store = require("../../store");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function BlockInvalidWarning(_ref) {
  let {
    blockTitle,
    icon,
    clientId
  } = _ref;
  const accessibilityLabel = (0, _i18n.sprintf)(
  /* translators: accessibility text for blocks with invalid content. %d: localized block title */
  (0, _i18n.__)('%s block. This block has invalid content'), blockTitle);

  const selector = select => {
    const {
      getBlock
    } = select(_store.store);
    const block = getBlock(clientId);
    return {
      block
    };
  };

  const {
    block
  } = (0, _data.useSelect)(selector, [clientId]);
  const {
    replaceBlock
  } = (0, _data.useDispatch)(_store.store);

  const recoverBlock = _ref2 => {
    let {
      name,
      attributes,
      innerBlocks
    } = _ref2;
    return (0, _blocks.createBlock)(name, attributes, innerBlocks);
  };

  const attemptBlockRecovery = () => {
    replaceBlock(block.clientId, recoverBlock(block));
  };

  return (0, _element.createElement)(_reactNative.TouchableWithoutFeedback, {
    onPress: attemptBlockRecovery,
    accessible: true,
    accessibilityRole: 'button'
  }, (0, _element.createElement)(_warning.default, {
    title: blockTitle // eslint-disable-next-line @wordpress/i18n-no-collapsible-whitespace
    ,
    message: (0, _i18n.__)('Problem displaying block. \nTap to attempt block recovery.'),
    icon: icon,
    accessibilityLabel: accessibilityLabel
  }));
}
//# sourceMappingURL=block-invalid-warning.native.js.map