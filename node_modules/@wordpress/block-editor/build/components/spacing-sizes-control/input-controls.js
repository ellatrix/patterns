"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = BoxInputControls;

var _element = require("@wordpress/element");

var _spacingInputControl = _interopRequireDefault(require("./spacing-input-control"));

var _utils = require("./utils");

/**
 * Internal dependencies
 */
function BoxInputControls(_ref) {
  let {
    values,
    sides,
    onChange,
    spacingSizes,
    type,
    minimumCustomValue,
    onMouseOver,
    onMouseOut
  } = _ref;
  // Filter sides if custom configuration provided, maintaining default order.
  const filteredSides = sides !== null && sides !== void 0 && sides.length ? _utils.ALL_SIDES.filter(side => sides.includes(side)) : _utils.ALL_SIDES;

  const createHandleOnChange = side => next => {
    const nextValues = { ...values
    };
    nextValues[side] = next;
    onChange(nextValues);
  };

  return (0, _element.createElement)(_element.Fragment, null, filteredSides.map(side => {
    return (0, _element.createElement)(_spacingInputControl.default, {
      value: values[side],
      label: _utils.LABELS[side],
      key: `spacing-sizes-control-${side}`,
      withInputField: false,
      side: side,
      onChange: createHandleOnChange(side),
      spacingSizes: spacingSizes,
      type: type,
      minimumCustomValue: minimumCustomValue,
      onMouseOver: onMouseOver,
      onMouseOut: onMouseOut
    });
  }));
}
//# sourceMappingURL=input-controls.js.map