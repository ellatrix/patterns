{"version":3,"sources":["@wordpress/block-editor/src/components/inner-blocks/use-block-context.js"],"names":["useBlockContext","clientId","select","block","blockEditorStore","getBlock","undefined","blockType","blocksStore","getBlockType","name","Object","keys","providesContext","length","fromEntries","entries","map","contextName","attributeName","attributes"],"mappings":";;;;;;;AAGA;;AACA;;AAKA;;AATA;AACA;AACA;;AAIA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,eAAT,CAA0BC,QAA1B,EAAqC;AACnD,SAAO,qBACJC,MAAF,IAAc;AACb,UAAMC,KAAK,GAAGD,MAAM,CAAEE,YAAF,CAAN,CAA2BC,QAA3B,CAAqCJ,QAArC,CAAd;;AACA,QAAK,CAAEE,KAAP,EAAe;AACd,aAAOG,SAAP;AACA;;AAED,UAAMC,SAAS,GAAGL,MAAM,CAAEM,aAAF,CAAN,CAAsBC,YAAtB,CAAoCN,KAAK,CAACO,IAA1C,CAAlB;;AACA,QAAK,CAAEH,SAAP,EAAmB;AAClB,aAAOD,SAAP;AACA;;AAED,QAAKK,MAAM,CAACC,IAAP,CAAaL,SAAS,CAACM,eAAvB,EAAyCC,MAAzC,KAAoD,CAAzD,EAA6D;AAC5D,aAAOR,SAAP;AACA;;AAED,WAAOK,MAAM,CAACI,WAAP,CACNJ,MAAM,CAACK,OAAP,CAAgBT,SAAS,CAACM,eAA1B,EAA4CI,GAA5C,CACC;AAAA,UAAE,CAAEC,WAAF,EAAeC,aAAf,CAAF;AAAA,aAAsC,CACrCD,WADqC,EAErCf,KAAK,CAACiB,UAAN,CAAkBD,aAAlB,CAFqC,CAAtC;AAAA,KADD,CADM,CAAP;AAQA,GAxBK,EAyBN,CAAElB,QAAF,CAzBM,CAAP;AA2BA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { store as blocksStore } from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\n\n/**\n * Returns a context object for a given block.\n *\n * @param {string} clientId The block client ID.\n *\n * @return {Record<string,*>} Context value.\n */\nexport default function useBlockContext( clientId ) {\n\treturn useSelect(\n\t\t( select ) => {\n\t\t\tconst block = select( blockEditorStore ).getBlock( clientId );\n\t\t\tif ( ! block ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst blockType = select( blocksStore ).getBlockType( block.name );\n\t\t\tif ( ! blockType ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tif ( Object.keys( blockType.providesContext ).length === 0 ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn Object.fromEntries(\n\t\t\t\tObject.entries( blockType.providesContext ).map(\n\t\t\t\t\t( [ contextName, attributeName ] ) => [\n\t\t\t\t\t\tcontextName,\n\t\t\t\t\t\tblock.attributes[ attributeName ],\n\t\t\t\t\t]\n\t\t\t\t)\n\t\t\t);\n\t\t},\n\t\t[ clientId ]\n\t);\n}\n"]}