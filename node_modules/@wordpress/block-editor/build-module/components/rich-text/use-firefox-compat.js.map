{"version":3,"sources":["@wordpress/block-editor/src/components/rich-text/use-firefox-compat.js"],"names":["useRefEffect","useSelect","store","blockEditorStore","useFirefoxCompat","isMultiSelecting","element","onFocus","parentEditable","parentElement","closest","focus","addEventListener","removeEventListener"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,YAAT,QAA6B,oBAA7B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA;AACA;AACA;;AACA,SAASC,KAAK,IAAIC,gBAAlB,QAA0C,aAA1C;AAEA,OAAO,SAASC,gBAAT,GAA4B;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAuBJ,SAAS,CAAEE,gBAAF,CAAtC;AACA,SAAOH,YAAY,CAAIM,OAAF,IAAe;AACnC,aAASC,OAAT,GAAmB;AAClB,UAAK,CAAEF,gBAAgB,EAAvB,EAA4B;AAC3B;AACA,OAHiB,CAKlB;AACA;AACA;AACA;AACA;;;AACA,YAAMG,cAAc,GAAGF,OAAO,CAACG,aAAR,CAAsBC,OAAtB,CACtB,0BADsB,CAAvB;;AAIA,UAAKF,cAAL,EAAsB;AACrBA,QAAAA,cAAc,CAACG,KAAf;AACA;AACD;;AAEDL,IAAAA,OAAO,CAACM,gBAAR,CAA0B,OAA1B,EAAmCL,OAAnC;AACA,WAAO,MAAM;AACZD,MAAAA,OAAO,CAACO,mBAAR,CAA6B,OAA7B,EAAsCN,OAAtC;AACA,KAFD;AAGA,GAxBkB,EAwBhB,EAxBgB,CAAnB;AAyBA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRefEffect } from '@wordpress/compose';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\n\nexport function useFirefoxCompat() {\n\tconst { isMultiSelecting } = useSelect( blockEditorStore );\n\treturn useRefEffect( ( element ) => {\n\t\tfunction onFocus() {\n\t\t\tif ( ! isMultiSelecting() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// This is a little hack to work around focus issues with nested\n\t\t\t// editable elements in Firefox. For some reason the editable child\n\t\t\t// element sometimes regains focus, while it should not be focusable\n\t\t\t// and focus should remain on the editable parent element.\n\t\t\t// To do: try to find the cause of the shifting focus.\n\t\t\tconst parentEditable = element.parentElement.closest(\n\t\t\t\t'[contenteditable=\"true\"]'\n\t\t\t);\n\n\t\t\tif ( parentEditable ) {\n\t\t\t\tparentEditable.focus();\n\t\t\t}\n\t\t}\n\n\t\telement.addEventListener( 'focus', onFocus );\n\t\treturn () => {\n\t\t\telement.removeEventListener( 'focus', onFocus );\n\t\t};\n\t}, [] );\n}\n"]}