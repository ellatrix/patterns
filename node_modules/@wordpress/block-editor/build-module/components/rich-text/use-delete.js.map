{"version":3,"sources":["@wordpress/block-editor/src/components/rich-text/use-delete.js"],"names":["useRef","useRefEffect","DELETE","BACKSPACE","isCollapsed","isEmpty","useDelete","props","propsRef","current","element","onKeyDown","event","keyCode","defaultPrevented","value","onMerge","onRemove","start","end","text","isReverse","hasActiveFormats","activeFormats","length","preventDefault","addEventListener","removeEventListener"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,oBAAvB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,qBAAlC;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,sBAArC;AAEA,OAAO,SAASC,SAAT,CAAoBC,KAApB,EAA4B;AAClC,QAAMC,QAAQ,GAAGR,MAAM,CAAEO,KAAF,CAAvB;AACAC,EAAAA,QAAQ,CAACC,OAAT,GAAmBF,KAAnB;AACA,SAAON,YAAY,CAAIS,OAAF,IAAe;AACnC,aAASC,SAAT,CAAoBC,KAApB,EAA4B;AAC3B,YAAM;AAAEC,QAAAA;AAAF,UAAcD,KAApB;;AAEA,UAAKA,KAAK,CAACE,gBAAX,EAA8B;AAC7B;AACA;;AAED,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA,OAAT;AAAkBC,QAAAA;AAAlB,UAA+BT,QAAQ,CAACC,OAA9C;;AAEA,UAAKI,OAAO,KAAKX,MAAZ,IAAsBW,OAAO,KAAKV,SAAvC,EAAmD;AAClD,cAAM;AAAEe,UAAAA,KAAF;AAASC,UAAAA,GAAT;AAAcC,UAAAA;AAAd,YAAuBL,KAA7B;AACA,cAAMM,SAAS,GAAGR,OAAO,KAAKV,SAA9B;AACA,cAAMmB,gBAAgB,GACrBP,KAAK,CAACQ,aAAN,IAAuB,CAAC,CAAER,KAAK,CAACQ,aAAN,CAAoBC,MAD/C,CAHkD,CAMlD;;AACA,YACC,CAAEpB,WAAW,CAAEW,KAAF,CAAb,IACAO,gBADA,IAEED,SAAS,IAAIH,KAAK,KAAK,CAFzB,IAGE,CAAEG,SAAF,IAAeF,GAAG,KAAKC,IAAI,CAACI,MAJ/B,EAKE;AACD;AACA;;AAED,YAAKR,OAAL,EAAe;AACdA,UAAAA,OAAO,CAAE,CAAEK,SAAJ,CAAP;AACA,SAlBiD,CAoBlD;AACA;AACA;AACA;;;AACA,YAAKJ,QAAQ,IAAIZ,OAAO,CAAEU,KAAF,CAAnB,IAAgCM,SAArC,EAAiD;AAChDJ,UAAAA,QAAQ,CAAE,CAAEI,SAAJ,CAAR;AACA;;AAEDT,QAAAA,KAAK,CAACa,cAAN;AACA;AACD;;AAEDf,IAAAA,OAAO,CAACgB,gBAAR,CAA0B,SAA1B,EAAqCf,SAArC;AACA,WAAO,MAAM;AACZD,MAAAA,OAAO,CAACiB,mBAAR,CAA6B,SAA7B,EAAwChB,SAAxC;AACA,KAFD;AAGA,GA9CkB,EA8ChB,EA9CgB,CAAnB;AA+CA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRef } from '@wordpress/element';\nimport { useRefEffect } from '@wordpress/compose';\nimport { DELETE, BACKSPACE } from '@wordpress/keycodes';\nimport { isCollapsed, isEmpty } from '@wordpress/rich-text';\n\nexport function useDelete( props ) {\n\tconst propsRef = useRef( props );\n\tpropsRef.current = props;\n\treturn useRefEffect( ( element ) => {\n\t\tfunction onKeyDown( event ) {\n\t\t\tconst { keyCode } = event;\n\n\t\t\tif ( event.defaultPrevented ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { value, onMerge, onRemove } = propsRef.current;\n\n\t\t\tif ( keyCode === DELETE || keyCode === BACKSPACE ) {\n\t\t\t\tconst { start, end, text } = value;\n\t\t\t\tconst isReverse = keyCode === BACKSPACE;\n\t\t\t\tconst hasActiveFormats =\n\t\t\t\t\tvalue.activeFormats && !! value.activeFormats.length;\n\n\t\t\t\t// Only process delete if the key press occurs at an uncollapsed edge.\n\t\t\t\tif (\n\t\t\t\t\t! isCollapsed( value ) ||\n\t\t\t\t\thasActiveFormats ||\n\t\t\t\t\t( isReverse && start !== 0 ) ||\n\t\t\t\t\t( ! isReverse && end !== text.length )\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( onMerge ) {\n\t\t\t\t\tonMerge( ! isReverse );\n\t\t\t\t}\n\n\t\t\t\t// Only handle remove on Backspace. This serves dual-purpose of being\n\t\t\t\t// an intentional user interaction distinguishing between Backspace and\n\t\t\t\t// Delete to remove the empty field, but also to avoid merge & remove\n\t\t\t\t// causing destruction of two fields (merge, then removed merged).\n\t\t\t\tif ( onRemove && isEmpty( value ) && isReverse ) {\n\t\t\t\t\tonRemove( ! isReverse );\n\t\t\t\t}\n\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t\telement.addEventListener( 'keydown', onKeyDown );\n\t\treturn () => {\n\t\t\telement.removeEventListener( 'keydown', onKeyDown );\n\t\t};\n\t}, [] );\n}\n"]}