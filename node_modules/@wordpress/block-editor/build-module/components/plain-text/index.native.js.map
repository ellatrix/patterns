{"version":3,"sources":["@wordpress/block-editor/src/components/plain-text/index.native.js"],"names":["TextInput","Platform","Dimensions","Component","RichText","getPxFromCssUnit","styles","PlainText","constructor","arguments","isAndroid","OS","onChangeTextInput","bind","onChangeRichText","componentDidMount","_input","isFocused","props","isSelected","timeoutID","setTimeout","focus","componentDidUpdate","prevProps","blur","componentWillUnmount","clearTimeout","getFontSize","style","fontSize","width","height","get","cssUnitOptions","parseFloat","replaceLineBreakTags","value","replace","RegExp","event","onChange","nativeEvent","text","render","__experimentalVersion","onFocus","otherProps","textStyles","disableFormattingProps","withoutInteractiveFormatting","disableEditingMenu","__unstableDisableFormats","disableSuggestions","forcePlainTextProps","preserveWhiteSpace","__unstablePastePlainText","multiline","fontProps","fontFamily","fontWeight","x","onBlur"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { TextInput, Platform, Dimensions } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { RichText, getPxFromCssUnit } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\n\nexport default class PlainText extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.isAndroid = Platform.OS === 'android';\n\n\t\tthis.onChangeTextInput = this.onChangeTextInput.bind( this );\n\t\tthis.onChangeRichText = this.onChangeRichText.bind( this );\n\t}\n\n\tcomponentDidMount() {\n\t\t// If isSelected is true, we should request the focus on this TextInput.\n\t\tif (\n\t\t\tthis._input &&\n\t\t\tthis._input.isFocused() === false &&\n\t\t\tthis.props.isSelected\n\t\t) {\n\t\t\tif ( this.isAndroid ) {\n\t\t\t\t/*\n\t\t\t\t * There seems to be an issue in React Native where the keyboard doesn't show if called shortly after rendering.\n\t\t\t\t * As a common work around this delay is used.\n\t\t\t\t * https://github.com/facebook/react-native/issues/19366#issuecomment-400603928\n\t\t\t\t */\n\t\t\t\tthis.timeoutID = setTimeout( () => {\n\t\t\t\t\tthis._input.focus();\n\t\t\t\t}, 100 );\n\t\t\t} else {\n\t\t\t\tthis._input.focus();\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( ! this.props.isSelected && prevProps.isSelected ) {\n\t\t\tthis._input?.blur();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif ( this.isAndroid ) {\n\t\t\tclearTimeout( this.timeoutID );\n\t\t}\n\t}\n\n\tfocus() {\n\t\tthis._input?.focus();\n\t}\n\n\tblur() {\n\t\tthis._input?.blur();\n\t}\n\n\tgetFontSize() {\n\t\tconst { style } = this.props;\n\n\t\tif ( ! style?.fontSize ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { width, height } = Dimensions.get( 'window' );\n\t\tconst cssUnitOptions = { height, width };\n\n\t\treturn {\n\t\t\tfontSize: parseFloat(\n\t\t\t\tgetPxFromCssUnit( style.fontSize, cssUnitOptions )\n\t\t\t),\n\t\t};\n\t}\n\n\treplaceLineBreakTags( value ) {\n\t\treturn value?.replace( RegExp( '<br>', 'gim' ), '\\n' );\n\t}\n\n\tonChangeTextInput( event ) {\n\t\tconst { onChange } = this.props;\n\t\tonChange( event.nativeEvent.text );\n\t}\n\n\tonChangeRichText( value ) {\n\t\tconst { onChange } = this.props;\n\t\t// The <br> tags have to be replaced with new line characters\n\t\t// as the content of plain text shouldn't contain HTML tags.\n\t\tonChange( this.replaceLineBreakTags( value ) );\n\t}\n\n\trender() {\n\t\tconst { style, __experimentalVersion, onFocus, ...otherProps } =\n\t\t\tthis.props;\n\t\tconst textStyles = [\n\t\t\tstyle || styles[ 'block-editor-plain-text' ],\n\t\t\tthis.getFontSize(),\n\t\t];\n\n\t\tif ( __experimentalVersion === 2 ) {\n\t\t\tconst disableFormattingProps = {\n\t\t\t\twithoutInteractiveFormatting: true,\n\t\t\t\tdisableEditingMenu: true,\n\t\t\t\t__unstableDisableFormats: true,\n\t\t\t\tdisableSuggestions: true,\n\t\t\t};\n\n\t\t\tconst forcePlainTextProps = {\n\t\t\t\tpreserveWhiteSpace: true,\n\t\t\t\t__unstablePastePlainText: true,\n\t\t\t\tmultiline: false,\n\t\t\t};\n\n\t\t\tconst fontProps = {\n\t\t\t\tfontFamily: style?.fontFamily,\n\t\t\t\tfontSize: style?.fontSize,\n\t\t\t\tfontWeight: style?.fontWeight,\n\t\t\t};\n\n\t\t\treturn (\n\t\t\t\t<RichText\n\t\t\t\t\t{ ...otherProps }\n\t\t\t\t\t{ ...disableFormattingProps }\n\t\t\t\t\t{ ...forcePlainTextProps }\n\t\t\t\t\t{ ...fontProps }\n\t\t\t\t\tidentifier=\"content\"\n\t\t\t\t\tstyle={ style }\n\t\t\t\t\tonChange={ this.onChangeRichText }\n\t\t\t\t\tunstableOnFocus={ onFocus }\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<TextInput\n\t\t\t\t{ ...this.props }\n\t\t\t\tref={ ( x ) => ( this._input = x ) }\n\t\t\t\tonChange={ this.onChangeTextInput }\n\t\t\t\tonFocus={ this.props.onFocus } // Always assign onFocus as a props.\n\t\t\t\tonBlur={ this.props.onBlur } // Always assign onBlur as a props.\n\t\t\t\tfontFamily={\n\t\t\t\t\t( this.props.style && this.props.style.fontFamily ) ||\n\t\t\t\t\tstyles[ 'block-editor-plain-text' ].fontFamily\n\t\t\t\t}\n\t\t\t\tstyle={ textStyles }\n\t\t\t\tscrollEnabled={ false }\n\t\t\t/>\n\t\t);\n\t}\n}\n"]}