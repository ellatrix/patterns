{"version":3,"sources":["@wordpress/block-editor/src/components/height-control/index.js"],"names":["useMemo","BaseControl","RangeControl","Flex","FlexItem","__experimentalSpacer","Spacer","__experimentalUseCustomUnits","useCustomUnits","__experimentalUnitControl","UnitControl","__experimentalParseQuantityAndUnitFromRawValue","parseQuantityAndUnitFromRawValue","__","useSetting","RANGE_CONTROL_CUSTOM_SETTINGS","px","max","step","vw","vh","em","rem","HeightControl","label","onChange","value","customRangeValue","parseFloat","units","availableUnits","selectedUnit","handleSliderChange","next","join","handleUnitChange","newUnit","currentValue","currentUnit","includes","toFixed","Math","round"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SACCC,WADD,EAECC,YAFD,EAGCC,IAHD,EAICC,QAJD,EAKCC,oBAAoB,IAAIC,MALzB,EAMCC,4BAA4B,IAAIC,cANjC,EAOCC,yBAAyB,IAAIC,WAP9B,EAQCC,8CAA8C,IAAIC,gCARnD,QASO,uBATP;AAUA,SAASC,EAAT,QAAmB,iBAAnB;AAEA;AACA;AACA;;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AAEA,MAAMC,6BAA6B,GAAG;AACrCC,EAAAA,EAAE,EAAE;AAAEC,IAAAA,GAAG,EAAE,IAAP;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GADiC;AAErC,OAAK;AAAED,IAAAA,GAAG,EAAE,GAAP;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAFgC;AAGrCC,EAAAA,EAAE,EAAE;AAAEF,IAAAA,GAAG,EAAE,GAAP;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAHiC;AAIrCE,EAAAA,EAAE,EAAE;AAAEH,IAAAA,GAAG,EAAE,GAAP;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAJiC;AAKrCG,EAAAA,EAAE,EAAE;AAAEJ,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GALiC;AAMrCI,EAAAA,GAAG,EAAE;AAAEL,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,IAAI,EAAE;AAAjB;AANgC,CAAtC;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASK,aAAT,OAIX;AAAA;;AAAA,MAJmC;AACtCC,IAAAA,KAAK,GAAGX,EAAE,CAAE,QAAF,CAD4B;AAEtCY,IAAAA,QAFsC;AAGtCC,IAAAA;AAHsC,GAInC;AACH,QAAMC,gBAAgB,GAAGC,UAAU,CAAEF,KAAF,CAAnC;AAEA,QAAMG,KAAK,GAAGrB,cAAc,CAAE;AAC7BsB,IAAAA,cAAc,EAAEhB,UAAU,CAAE,eAAF,CAAV,IAAiC,CAChD,GADgD,EAEhD,IAFgD,EAGhD,IAHgD,EAIhD,KAJgD,EAKhD,IALgD,EAMhD,IANgD;AADpB,GAAF,CAA5B;AAWA,QAAMiB,YAAY,GACjB/B,OAAO,CACN,MAAMY,gCAAgC,CAAEc,KAAF,CADhC,EAEN,CAAEA,KAAF,CAFM,CAAP,CAGG,CAHH,iBAIAG,KAAK,CAAE,CAAF,CAJL,4CAIA,QAAYH,KAJZ,KAKA,IAND;;AAQA,QAAMM,kBAAkB,GAAKC,IAAF,IAAY;AACtCR,IAAAA,QAAQ,CAAE,CAAEQ,IAAF,EAAQF,YAAR,EAAuBG,IAAvB,CAA6B,EAA7B,CAAF,CAAR;AACA,GAFD;;AAIA,QAAMC,gBAAgB,GAAKC,OAAF,IAAe;AACvC;AACA;AACA,UAAM,CAAEC,YAAF,EAAgBC,WAAhB,IACL1B,gCAAgC,CAAEc,KAAF,CADjC;;AAGA,QAAK,CAAE,IAAF,EAAQ,KAAR,EAAgBa,QAAhB,CAA0BH,OAA1B,KAAuCE,WAAW,KAAK,IAA5D,EAAmE;AAClE;AACAb,MAAAA,QAAQ,CAAE,CAAEY,YAAY,GAAG,EAAjB,EAAsBG,OAAtB,CAA+B,CAA/B,IAAqCJ,OAAvC,CAAR;AACA,KAHD,MAGO,IACN,CAAE,IAAF,EAAQ,KAAR,EAAgBG,QAAhB,CAA0BD,WAA1B,KACAF,OAAO,KAAK,IAFN,EAGL;AACD;AACAX,MAAAA,QAAQ,CAAEgB,IAAI,CAACC,KAAL,CAAYL,YAAY,GAAG,EAA3B,IAAkCD,OAApC,CAAR;AACA,KANM,MAMA,IACN,CAAE,IAAF,EAAQ,IAAR,EAAc,GAAd,EAAoBG,QAApB,CAA8BH,OAA9B,KACAC,YAAY,GAAG,GAFT,EAGL;AACD;AACAZ,MAAAA,QAAQ,CAAE,MAAMW,OAAR,CAAR;AACA;AACD,GAtBD;;AAwBA,SACC;AAAU,IAAA,SAAS,EAAC;AAApB,KACC,cAAC,WAAD,CAAa,WAAb;AAAyB,IAAA,EAAE,EAAC;AAA5B,KACGZ,KADH,CADD,EAIC,cAAC,IAAD,QACC,cAAC,QAAD;AAAU,IAAA,OAAO;AAAjB,KACC,cAAC,WAAD;AACC,IAAA,KAAK,EAAGE,KADT;AAEC,IAAA,KAAK,EAAGG,KAFT;AAGC,IAAA,QAAQ,EAAGJ,QAHZ;AAIC,IAAA,YAAY,EAAGU,gBAJhB;AAKC,IAAA,GAAG,EAAG,CALP;AAMC,IAAA,IAAI,EAAG;AANR,IADD,CADD,EAWC,cAAC,QAAD;AAAU,IAAA,OAAO;AAAjB,KACC,cAAC,MAAD;AAAQ,IAAA,OAAO,EAAG,CAAlB;AAAsB,IAAA,YAAY,EAAG;AAArC,KACC,cAAC,YAAD;AACC,IAAA,KAAK,EAAGR,gBADT;AAEC,IAAA,GAAG,EAAG,CAFP;AAGC,IAAA,GAAG,qDACFZ,6BAA6B,CAAEgB,YAAF,CAD3B,2DACF,uBACGd,GAFD,yEAEQ,GALZ;AAOC,IAAA,IAAI,sDACHF,6BAA6B,CAAEgB,YAAF,CAD1B,2DACH,uBACGb,IAFA,2EAEQ,GATb;AAWC,IAAA,cAAc,EAAG,KAXlB;AAYC,IAAA,QAAQ,EAAGc,kBAZZ;AAaC,IAAA,uBAAuB;AAbxB,IADD,CADD,CAXD,CAJD,CADD;AAsCA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useMemo } from '@wordpress/element';\nimport {\n\tBaseControl,\n\tRangeControl,\n\tFlex,\n\tFlexItem,\n\t__experimentalSpacer as Spacer,\n\t__experimentalUseCustomUnits as useCustomUnits,\n\t__experimentalUnitControl as UnitControl,\n\t__experimentalParseQuantityAndUnitFromRawValue as parseQuantityAndUnitFromRawValue,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport useSetting from '../use-setting';\n\nconst RANGE_CONTROL_CUSTOM_SETTINGS = {\n\tpx: { max: 1000, step: 1 },\n\t'%': { max: 100, step: 1 },\n\tvw: { max: 100, step: 1 },\n\tvh: { max: 100, step: 1 },\n\tem: { max: 50, step: 0.1 },\n\trem: { max: 50, step: 0.1 },\n};\n\n/**\n * HeightControl renders a linked unit control and range control for adjusting the height of a block.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/block-editor/src/components/height-control/README.md\n *\n * @param {Object}                     props\n * @param {?string}                    props.label    A label for the control.\n * @param {( value: string ) => void } props.onChange Called when the height changes.\n * @param {string}                     props.value    The current height value.\n *\n * @return {WPComponent} The component to be rendered.\n */\nexport default function HeightControl( {\n\tlabel = __( 'Height' ),\n\tonChange,\n\tvalue,\n} ) {\n\tconst customRangeValue = parseFloat( value );\n\n\tconst units = useCustomUnits( {\n\t\tavailableUnits: useSetting( 'spacing.units' ) || [\n\t\t\t'%',\n\t\t\t'px',\n\t\t\t'em',\n\t\t\t'rem',\n\t\t\t'vh',\n\t\t\t'vw',\n\t\t],\n\t} );\n\n\tconst selectedUnit =\n\t\tuseMemo(\n\t\t\t() => parseQuantityAndUnitFromRawValue( value ),\n\t\t\t[ value ]\n\t\t)[ 1 ] ||\n\t\tunits[ 0 ]?.value ||\n\t\t'px';\n\n\tconst handleSliderChange = ( next ) => {\n\t\tonChange( [ next, selectedUnit ].join( '' ) );\n\t};\n\n\tconst handleUnitChange = ( newUnit ) => {\n\t\t// Attempt to smooth over differences between currentUnit and newUnit.\n\t\t// This should slightly improve the experience of switching between unit types.\n\t\tconst [ currentValue, currentUnit ] =\n\t\t\tparseQuantityAndUnitFromRawValue( value );\n\n\t\tif ( [ 'em', 'rem' ].includes( newUnit ) && currentUnit === 'px' ) {\n\t\t\t// Convert pixel value to an approximate of the new unit, assuming a root size of 16px.\n\t\t\tonChange( ( currentValue / 16 ).toFixed( 2 ) + newUnit );\n\t\t} else if (\n\t\t\t[ 'em', 'rem' ].includes( currentUnit ) &&\n\t\t\tnewUnit === 'px'\n\t\t) {\n\t\t\t// Convert to pixel value assuming a root size of 16px.\n\t\t\tonChange( Math.round( currentValue * 16 ) + newUnit );\n\t\t} else if (\n\t\t\t[ 'vh', 'vw', '%' ].includes( newUnit ) &&\n\t\t\tcurrentValue > 100\n\t\t) {\n\t\t\t// When converting to `vh`, `vw`, or `%` units, cap the new value at 100.\n\t\t\tonChange( 100 + newUnit );\n\t\t}\n\t};\n\n\treturn (\n\t\t<fieldset className=\"block-editor-height-control\">\n\t\t\t<BaseControl.VisualLabel as=\"legend\">\n\t\t\t\t{ label }\n\t\t\t</BaseControl.VisualLabel>\n\t\t\t<Flex>\n\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t<UnitControl\n\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t\tunits={ units }\n\t\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t\tonUnitChange={ handleUnitChange }\n\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\tsize={ '__unstable-large' }\n\t\t\t\t\t/>\n\t\t\t\t</FlexItem>\n\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t<Spacer marginX={ 2 } marginBottom={ 0 }>\n\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\tvalue={ customRangeValue }\n\t\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\t\tmax={\n\t\t\t\t\t\t\t\tRANGE_CONTROL_CUSTOM_SETTINGS[ selectedUnit ]\n\t\t\t\t\t\t\t\t\t?.max ?? 100\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstep={\n\t\t\t\t\t\t\t\tRANGE_CONTROL_CUSTOM_SETTINGS[ selectedUnit ]\n\t\t\t\t\t\t\t\t\t?.step ?? 0.1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twithInputField={ false }\n\t\t\t\t\t\t\tonChange={ handleSliderChange }\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Spacer>\n\t\t\t\t</FlexItem>\n\t\t\t</Flex>\n\t\t</fieldset>\n\t);\n}\n"]}