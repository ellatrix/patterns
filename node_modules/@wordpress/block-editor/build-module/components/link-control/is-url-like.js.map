{"version":3,"sources":["@wordpress/block-editor/src/components/link-control/is-url-like.js"],"names":["isURL","isURLLike","val","isInternal","startsWith","includes"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,KAAT,QAAsB,gBAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,SAAT,CAAoBC,GAApB,EAA0B;AACxC,QAAMC,UAAU,GAAGD,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEE,UAAL,CAAiB,GAAjB,CAAnB;AACA,SAAOJ,KAAK,CAAEE,GAAF,CAAL,IAAkBA,GAAG,IAAIA,GAAG,CAACG,QAAJ,CAAc,MAAd,CAAzB,IAAqDF,UAA5D;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { isURL } from '@wordpress/url';\n\n/**\n * Determines whether a given value could be a URL. Note this does not\n * guarantee the value is a URL only that it looks like it might be one. For\n * example, just because a string has `www.` in it doesn't make it a URL,\n * but it does make it highly likely that it will be so in the context of\n * creating a link it makes sense to treat it like one.\n *\n * @param {string} val the candidate for being URL-like (or not).\n *\n * @return {boolean} whether or not the value is potentially a URL.\n */\nexport default function isURLLike( val ) {\n\tconst isInternal = val?.startsWith( '#' );\n\treturn isURL( val ) || ( val && val.includes( 'www.' ) ) || isInternal;\n}\n"]}