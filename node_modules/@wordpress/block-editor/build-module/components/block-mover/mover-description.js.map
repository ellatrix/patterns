{"version":3,"sources":["@wordpress/block-editor/src/components/block-mover/mover-description.js"],"names":["__","sprintf","isRTL","getMovementDirection","moveDirection","orientation","getBlockMoverDescription","selectedCount","type","firstIndex","isFirst","isLast","dir","position","getMultiBlockMoverDescription","movementDirection"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, sprintf, isRTL } from '@wordpress/i18n';\n\nconst getMovementDirection = ( moveDirection, orientation ) => {\n\tif ( moveDirection === 'up' ) {\n\t\tif ( orientation === 'horizontal' ) {\n\t\t\treturn isRTL() ? 'right' : 'left';\n\t\t}\n\t\treturn 'up';\n\t} else if ( moveDirection === 'down' ) {\n\t\tif ( orientation === 'horizontal' ) {\n\t\t\treturn isRTL() ? 'left' : 'right';\n\t\t}\n\t\treturn 'down';\n\t}\n\treturn null;\n};\n\n/**\n * Return a label for the block movement controls depending on block position.\n *\n * @param {number}  selectedCount Number of blocks selected.\n * @param {string}  type          Block type - in the case of a single block, should\n *                                define its 'type'. I.e. 'Text', 'Heading', 'Image' etc.\n * @param {number}  firstIndex    The index (position - 1) of the first block selected.\n * @param {boolean} isFirst       This is the first block.\n * @param {boolean} isLast        This is the last block.\n * @param {number}  dir           Direction of movement (> 0 is considered to be going\n *                                down, < 0 is up).\n * @param {string}  orientation   The orientation of the block movers, vertical or\n *                                horizontal.\n *\n * @return {string | undefined} Label for the block movement controls.\n */\nexport function getBlockMoverDescription(\n\tselectedCount,\n\ttype,\n\tfirstIndex,\n\tisFirst,\n\tisLast,\n\tdir,\n\torientation\n) {\n\tconst position = firstIndex + 1;\n\n\tif ( selectedCount > 1 ) {\n\t\treturn getMultiBlockMoverDescription(\n\t\t\tselectedCount,\n\t\t\tfirstIndex,\n\t\t\tisFirst,\n\t\t\tisLast,\n\t\t\tdir,\n\t\t\torientation\n\t\t);\n\t}\n\n\tif ( isFirst && isLast ) {\n\t\treturn sprintf(\n\t\t\t// translators: %s: Type of block (i.e. Text, Image etc)\n\t\t\t__( 'Block %s is the only block, and cannot be moved' ),\n\t\t\ttype\n\t\t);\n\t}\n\n\tif ( dir > 0 && ! isLast ) {\n\t\t// Moving down.\n\t\tconst movementDirection = getMovementDirection( 'down', orientation );\n\n\t\tif ( movementDirection === 'down' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc), 2: Position of selected block, 3: New position\n\t\t\t\t__(\n\t\t\t\t\t'Move %1$s block from position %2$d down to position %3$d'\n\t\t\t\t),\n\t\t\t\ttype,\n\t\t\t\tposition,\n\t\t\t\tposition + 1\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'left' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc), 2: Position of selected block, 3: New position\n\t\t\t\t__(\n\t\t\t\t\t'Move %1$s block from position %2$d left to position %3$d'\n\t\t\t\t),\n\t\t\t\ttype,\n\t\t\t\tposition,\n\t\t\t\tposition + 1\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'right' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc), 2: Position of selected block, 3: New position\n\t\t\t\t__(\n\t\t\t\t\t'Move %1$s block from position %2$d right to position %3$d'\n\t\t\t\t),\n\t\t\t\ttype,\n\t\t\t\tposition,\n\t\t\t\tposition + 1\n\t\t\t);\n\t\t}\n\t}\n\n\tif ( dir > 0 && isLast ) {\n\t\t// Moving down, and is the last item.\n\t\tconst movementDirection = getMovementDirection( 'down', orientation );\n\n\t\tif ( movementDirection === 'down' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc)\n\t\t\t\t__(\n\t\t\t\t\t'Block %1$s is at the end of the content and can’t be moved down'\n\t\t\t\t),\n\t\t\t\ttype\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'left' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc)\n\t\t\t\t__(\n\t\t\t\t\t'Block %1$s is at the end of the content and can’t be moved left'\n\t\t\t\t),\n\t\t\t\ttype\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'right' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc)\n\t\t\t\t__(\n\t\t\t\t\t'Block %1$s is at the end of the content and can’t be moved right'\n\t\t\t\t),\n\t\t\t\ttype\n\t\t\t);\n\t\t}\n\t}\n\n\tif ( dir < 0 && ! isFirst ) {\n\t\t// Moving up.\n\t\tconst movementDirection = getMovementDirection( 'up', orientation );\n\n\t\tif ( movementDirection === 'up' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc), 2: Position of selected block, 3: New position\n\t\t\t\t__( 'Move %1$s block from position %2$d up to position %3$d' ),\n\t\t\t\ttype,\n\t\t\t\tposition,\n\t\t\t\tposition - 1\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'left' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc), 2: Position of selected block, 3: New position\n\t\t\t\t__(\n\t\t\t\t\t'Move %1$s block from position %2$d left to position %3$d'\n\t\t\t\t),\n\t\t\t\ttype,\n\t\t\t\tposition,\n\t\t\t\tposition - 1\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'right' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc), 2: Position of selected block, 3: New position\n\t\t\t\t__(\n\t\t\t\t\t'Move %1$s block from position %2$d right to position %3$d'\n\t\t\t\t),\n\t\t\t\ttype,\n\t\t\t\tposition,\n\t\t\t\tposition - 1\n\t\t\t);\n\t\t}\n\t}\n\n\tif ( dir < 0 && isFirst ) {\n\t\t// Moving up, and is the first item.\n\t\tconst movementDirection = getMovementDirection( 'up', orientation );\n\n\t\tif ( movementDirection === 'up' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc)\n\t\t\t\t__(\n\t\t\t\t\t'Block %1$s is at the beginning of the content and can’t be moved up'\n\t\t\t\t),\n\t\t\t\ttype\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'left' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc)\n\t\t\t\t__(\n\t\t\t\t\t'Block %1$s is at the beginning of the content and can’t be moved left'\n\t\t\t\t),\n\t\t\t\ttype\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'right' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc)\n\t\t\t\t__(\n\t\t\t\t\t'Block %1$s is at the beginning of the content and can’t be moved right'\n\t\t\t\t),\n\t\t\t\ttype\n\t\t\t);\n\t\t}\n\t}\n}\n\n/**\n * Return a label for the block movement controls depending on block position.\n *\n * @param {number}  selectedCount Number of blocks selected.\n * @param {number}  firstIndex    The index (position - 1) of the first block selected.\n * @param {boolean} isFirst       This is the first block.\n * @param {boolean} isLast        This is the last block.\n * @param {number}  dir           Direction of movement (> 0 is considered to be going\n *                                down, < 0 is up).\n * @param {string}  orientation   The orientation of the block movers, vertical or\n *                                horizontal.\n *\n * @return {string | undefined} Label for the block movement controls.\n */\nexport function getMultiBlockMoverDescription(\n\tselectedCount,\n\tfirstIndex,\n\tisFirst,\n\tisLast,\n\tdir,\n\torientation\n) {\n\tconst position = firstIndex + 1;\n\n\tif ( isFirst && isLast ) {\n\t\t// All blocks are selected\n\t\treturn __( 'All blocks are selected, and cannot be moved' );\n\t}\n\n\tif ( dir > 0 && ! isLast ) {\n\t\t// moving down\n\t\tconst movementDirection = getMovementDirection( 'down', orientation );\n\n\t\tif ( movementDirection === 'down' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Number of selected blocks, 2: Position of selected blocks\n\t\t\t\t__( 'Move %1$d blocks from position %2$d down by one place' ),\n\t\t\t\tselectedCount,\n\t\t\t\tposition\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'left' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Number of selected blocks, 2: Position of selected blocks\n\t\t\t\t__( 'Move %1$d blocks from position %2$d left by one place' ),\n\t\t\t\tselectedCount,\n\t\t\t\tposition\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'right' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Number of selected blocks, 2: Position of selected blocks\n\t\t\t\t__( 'Move %1$d blocks from position %2$d right by one place' ),\n\t\t\t\tselectedCount,\n\t\t\t\tposition\n\t\t\t);\n\t\t}\n\t}\n\n\tif ( dir > 0 && isLast ) {\n\t\t// moving down, and the selected blocks are the last item\n\t\tconst movementDirection = getMovementDirection( 'down', orientation );\n\n\t\tif ( movementDirection === 'down' ) {\n\t\t\treturn __(\n\t\t\t\t'Blocks cannot be moved down as they are already at the bottom'\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'left' ) {\n\t\t\treturn __(\n\t\t\t\t'Blocks cannot be moved left as they are already are at the leftmost position'\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'right' ) {\n\t\t\treturn __(\n\t\t\t\t'Blocks cannot be moved right as they are already are at the rightmost position'\n\t\t\t);\n\t\t}\n\t}\n\n\tif ( dir < 0 && ! isFirst ) {\n\t\t// moving up\n\t\tconst movementDirection = getMovementDirection( 'up', orientation );\n\n\t\tif ( movementDirection === 'up' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Number of selected blocks, 2: Position of selected blocks\n\t\t\t\t__( 'Move %1$d blocks from position %2$d up by one place' ),\n\t\t\t\tselectedCount,\n\t\t\t\tposition\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'left' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Number of selected blocks, 2: Position of selected blocks\n\t\t\t\t__( 'Move %1$d blocks from position %2$d left by one place' ),\n\t\t\t\tselectedCount,\n\t\t\t\tposition\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'right' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Number of selected blocks, 2: Position of selected blocks\n\t\t\t\t__( 'Move %1$d blocks from position %2$d right by one place' ),\n\t\t\t\tselectedCount,\n\t\t\t\tposition\n\t\t\t);\n\t\t}\n\t}\n\n\tif ( dir < 0 && isFirst ) {\n\t\t// moving up, and the selected blocks are the first item\n\t\tconst movementDirection = getMovementDirection( 'up', orientation );\n\n\t\tif ( movementDirection === 'up' ) {\n\t\t\treturn __(\n\t\t\t\t'Blocks cannot be moved up as they are already at the top'\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'left' ) {\n\t\t\treturn __(\n\t\t\t\t'Blocks cannot be moved left as they are already are at the leftmost position'\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'right' ) {\n\t\t\treturn __(\n\t\t\t\t'Blocks cannot be moved right as they are already are at the rightmost position'\n\t\t\t);\n\t\t}\n\t}\n}\n"]}