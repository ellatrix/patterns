{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/tabs.native.js"],"names":["Animated","View","useCallback","useEffect","useMemo","useRef","useState","__","SegmentedControl","BlockTypesTab","ReusableBlocksTab","styles","TAB_ANIMATION_DURATION","InserterTabs","listProps","onSelect","rootClientId","showReusableBlocks","tabIndex","tabAnimation","Value","current","lastScrollEvents","wrapperWidth","setWrapperWidth","onScroll","event","nativeEvent","onWrapperLayout","layout","width","timing","duration","toValue","useNativeDriver","start","lastScrollEvent","tabs","tabKeys","filteredTabs","getTabs","filter","name","keys","translateX","length","interpolate","inputRange","outputRange","map","key","containerStyle","transform","index","component","TabComponent","TabsControl","onChangeTab","segments","title","segmentHandler","selectedTab","tabTitles","indexOf","Control"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { Animated, View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tuseCallback,\n\tuseEffect,\n\tuseMemo,\n\tuseRef,\n\tuseState,\n} from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { SegmentedControl } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport BlockTypesTab from './block-types-tab';\nimport ReusableBlocksTab from './reusable-blocks-tab';\nimport styles from './style.scss';\n\nconst TAB_ANIMATION_DURATION = 250;\n\nfunction InserterTabs( {\n\tlistProps,\n\tonSelect,\n\trootClientId,\n\tshowReusableBlocks,\n\ttabIndex,\n} ) {\n\tconst tabAnimation = useRef( new Animated.Value( 0 ) ).current;\n\tconst lastScrollEvents = useRef( [] ).current;\n\tconst [ wrapperWidth, setWrapperWidth ] = useState( 0 );\n\n\tfunction onScroll( event ) {\n\t\tlastScrollEvents[ tabIndex ] = event.nativeEvent;\n\t\tlistProps.onScroll( event );\n\t}\n\n\tconst onWrapperLayout = useCallback(\n\t\t( { nativeEvent } ) => {\n\t\t\tsetWrapperWidth( nativeEvent.layout.width );\n\t\t},\n\t\t[ setWrapperWidth ]\n\t);\n\n\tuseEffect( () => {\n\t\tAnimated.timing( tabAnimation, {\n\t\t\tduration: TAB_ANIMATION_DURATION,\n\t\t\ttoValue: tabIndex,\n\t\t\tuseNativeDriver: true,\n\t\t} ).start();\n\n\t\t// Notify upstream with the last scroll event of the current tab.\n\t\tconst lastScrollEvent = lastScrollEvents[ tabIndex ];\n\t\tif ( lastScrollEvent ) {\n\t\t\tlistProps.onScroll( { nativeEvent: lastScrollEvent } );\n\t\t}\n\t}, [ tabIndex ] );\n\n\tconst { tabs, tabKeys } = useMemo( () => {\n\t\tconst filteredTabs = InserterTabs.getTabs().filter(\n\t\t\t( { name } ) => showReusableBlocks || name !== 'reusable'\n\t\t);\n\t\treturn {\n\t\t\ttabs: filteredTabs,\n\t\t\ttabKeys: [ ...filteredTabs.keys() ],\n\t\t};\n\t}, [ showReusableBlocks ] );\n\n\tconst translateX = useMemo(\n\t\t() =>\n\t\t\ttabKeys.length > 1\n\t\t\t\t? tabAnimation.interpolate( {\n\t\t\t\t\t\tinputRange: tabKeys,\n\t\t\t\t\t\toutputRange: tabKeys.map(\n\t\t\t\t\t\t\t( key ) => key * -wrapperWidth\n\t\t\t\t\t\t),\n\t\t\t\t  } )\n\t\t\t\t: tabAnimation,\n\t\t[ tabAnimation, tabKeys, wrapperWidth ]\n\t);\n\n\tconst containerStyle = [\n\t\tstyles[ 'inserter-tabs__container' ],\n\t\t{\n\t\t\twidth: wrapperWidth * tabKeys.length,\n\t\t\ttransform: [ { translateX } ],\n\t\t},\n\t];\n\n\treturn (\n\t\t<View\n\t\t\tstyle={ styles[ 'inserter-tabs__wrapper' ] }\n\t\t\tonLayout={ onWrapperLayout }\n\t\t>\n\t\t\t<Animated.View style={ containerStyle }>\n\t\t\t\t{ tabs.map( ( { component: TabComponent }, index ) => (\n\t\t\t\t\t<View key={ `tab-${ index }` }>\n\t\t\t\t\t\t<TabComponent\n\t\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t\t\tonSelect={ onSelect }\n\t\t\t\t\t\t\tlistProps={ { ...listProps, onScroll } }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t) ) }\n\t\t\t</Animated.View>\n\t\t</View>\n\t);\n}\n\nfunction TabsControl( { onChangeTab, showReusableBlocks } ) {\n\tconst tabs = InserterTabs.getTabs();\n\tconst segments = useMemo( () => {\n\t\tconst filteredTabs = tabs.filter(\n\t\t\t( { name } ) => showReusableBlocks || name !== 'reusable'\n\t\t);\n\t\treturn filteredTabs.map( ( { title } ) => title );\n\t}, [ showReusableBlocks ] );\n\n\tconst segmentHandler = useCallback(\n\t\t( selectedTab ) => {\n\t\t\tconst tabTitles = tabs.map( ( { title } ) => title );\n\t\t\tonChangeTab( tabTitles.indexOf( selectedTab ) );\n\t\t},\n\t\t[ onChangeTab ]\n\t);\n\n\treturn segments.length > 1 ? (\n\t\t<SegmentedControl\n\t\t\tsegments={ segments }\n\t\t\tsegmentHandler={ segmentHandler }\n\t\t/>\n\t) : null;\n}\n\nInserterTabs.Control = TabsControl;\n\nInserterTabs.getTabs = () => [\n\t{ name: 'blocks', title: __( 'Blocks' ), component: BlockTypesTab },\n\t{ name: 'reusable', title: __( 'Reusable' ), component: ReusableBlocksTab },\n];\n\nexport default InserterTabs;\n"]}