{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/media-tab/utils.js"],"names":["createBlock","mediaTypeTag","image","video","audio","getBlockAndPreviewFromMedia","media","mediaType","attributes","id","undefined","caption","mediaSrc","url","alt","includes","src","PreviewTag","preview","previewUrl","currentTarget"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,WAAT,QAA4B,mBAA5B;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,KAAK,EAAE,OAAvB;AAAgCC,EAAAA,KAAK,EAAE;AAAvC,CAArB;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,2BAAT,CAAsCC,KAAtC,EAA6CC,SAA7C,EAAyD;AAC/D;AACA,QAAMC,UAAU,GAAG;AAClBC,IAAAA,EAAE,EAAEH,KAAK,CAACG,EAAN,IAAYC,SADE;AAElBC,IAAAA,OAAO,EAAEL,KAAK,CAACK,OAAN,IAAiBD;AAFR,GAAnB;AAIA,QAAME,QAAQ,GAAGN,KAAK,CAACO,GAAvB;AACA,QAAMC,GAAG,GAAGR,KAAK,CAACQ,GAAN,IAAaJ,SAAzB;;AACA,MAAKH,SAAS,KAAK,OAAnB,EAA6B;AAC5BC,IAAAA,UAAU,CAACK,GAAX,GAAiBD,QAAjB;AACAJ,IAAAA,UAAU,CAACM,GAAX,GAAiBA,GAAjB;AACA,GAHD,MAGO,IAAK,CAAE,OAAF,EAAW,OAAX,EAAqBC,QAArB,CAA+BR,SAA/B,CAAL,EAAkD;AACxDC,IAAAA,UAAU,CAACQ,GAAX,GAAiBJ,QAAjB;AACA;;AACD,QAAMK,UAAU,GAAGhB,YAAY,CAAEM,SAAF,CAA/B;AACA,QAAMW,OAAO,GACZ,cAAC,UAAD;AACC,IAAA,GAAG,EAAGZ,KAAK,CAACa,UAAN,IAAoBP,QAD3B;AAEC,IAAA,GAAG,EAAGE,GAFP;AAGC,IAAA,QAAQ,EAAGP,SAAS,KAAK,OAAd,GAAwB,IAAxB,GAA+BG,SAH3C;AAIC,IAAA,KAAK,EAAC,MAJP;AAKC,IAAA,OAAO,EAAG,QAAyB;AAAA,UAAvB;AAAEU,QAAAA;AAAF,OAAuB;;AAClC;AACA,UAAKA,aAAa,CAACJ,GAAd,KAAsBV,KAAK,CAACa,UAAjC,EAA8C;AAC7CC,QAAAA,aAAa,CAACJ,GAAd,GAAoBJ,QAApB;AACA;AACD;AAVF,IADD;AAcA,SAAO,CAAEZ,WAAW,CAAG,QAAQO,SAAW,EAAtB,EAAyBC,UAAzB,CAAb,EAAoDU,OAApD,CAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createBlock } from '@wordpress/blocks';\n\nconst mediaTypeTag = { image: 'img', video: 'video', audio: 'audio' };\n\n/** @typedef {import('./hooks').InserterMediaItem} InserterMediaItem */\n\n/**\n * Creates a block and a preview element from a media object.\n *\n * @param {InserterMediaItem}         media     The media object to create the block from.\n * @param {('image'|'audio'|'video')} mediaType The media type to create the block for.\n * @return {[WPBlock, JSX.Element]} An array containing the block and the preview element.\n */\nexport function getBlockAndPreviewFromMedia( media, mediaType ) {\n\t// Add the common attributes between the different media types.\n\tconst attributes = {\n\t\tid: media.id || undefined,\n\t\tcaption: media.caption || undefined,\n\t};\n\tconst mediaSrc = media.url;\n\tconst alt = media.alt || undefined;\n\tif ( mediaType === 'image' ) {\n\t\tattributes.url = mediaSrc;\n\t\tattributes.alt = alt;\n\t} else if ( [ 'video', 'audio' ].includes( mediaType ) ) {\n\t\tattributes.src = mediaSrc;\n\t}\n\tconst PreviewTag = mediaTypeTag[ mediaType ];\n\tconst preview = (\n\t\t<PreviewTag\n\t\t\tsrc={ media.previewUrl || mediaSrc }\n\t\t\talt={ alt }\n\t\t\tcontrols={ mediaType === 'audio' ? true : undefined }\n\t\t\tinert=\"true\"\n\t\t\tonError={ ( { currentTarget } ) => {\n\t\t\t\t// Fall back to the media source if the preview cannot be loaded.\n\t\t\t\tif ( currentTarget.src === media.previewUrl ) {\n\t\t\t\t\tcurrentTarget.src = mediaSrc;\n\t\t\t\t}\n\t\t\t} }\n\t\t/>\n\t);\n\treturn [ createBlock( `core/${ mediaType }`, attributes ), preview ];\n}\n"]}