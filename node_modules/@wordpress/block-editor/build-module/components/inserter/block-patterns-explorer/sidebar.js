import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { Button, SearchControl } from '@wordpress/components';
import { __ } from '@wordpress/i18n';

function PatternCategoriesList(_ref) {
  let {
    selectedCategory,
    patternCategories,
    onClickCategory
  } = _ref;
  const baseClassName = 'block-editor-block-patterns-explorer__sidebar';
  return createElement("div", {
    className: `${baseClassName}__categories-list`
  }, patternCategories.map(_ref2 => {
    let {
      name,
      label
    } = _ref2;
    return createElement(Button, {
      key: name,
      label: label,
      className: `${baseClassName}__categories-list__item`,
      isPressed: selectedCategory === name,
      onClick: () => {
        onClickCategory(name);
      }
    }, label);
  }));
}

function PatternsExplorerSearch(_ref3) {
  let {
    filterValue,
    setFilterValue
  } = _ref3;
  const baseClassName = 'block-editor-block-patterns-explorer__search';
  return createElement("div", {
    className: baseClassName
  }, createElement(SearchControl, {
    __nextHasNoMarginBottom: true,
    onChange: setFilterValue,
    value: filterValue,
    label: __('Search for patterns'),
    placeholder: __('Search')
  }));
}

function PatternExplorerSidebar(_ref4) {
  let {
    selectedCategory,
    patternCategories,
    onClickCategory,
    filterValue,
    setFilterValue
  } = _ref4;
  const baseClassName = 'block-editor-block-patterns-explorer__sidebar';
  return createElement("div", {
    className: baseClassName
  }, createElement(PatternsExplorerSearch, {
    filterValue: filterValue,
    setFilterValue: setFilterValue
  }), !filterValue && createElement(PatternCategoriesList, {
    selectedCategory: selectedCategory,
    patternCategories: patternCategories,
    onClickCategory: onClickCategory
  }));
}

export default PatternExplorerSidebar;
//# sourceMappingURL=sidebar.js.map