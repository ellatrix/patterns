{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/block-patterns-explorer/patterns-list.js"],"names":["useMemo","useEffect","_n","sprintf","useDebounce","useAsyncList","__experimentalHeading","Heading","speak","BlockPatternsList","InserterNoResults","useInsertionPoint","usePatternsState","InserterListbox","searchItems","INITIAL_INSERTER_RESULTS","PatternsListHeader","filterValue","filteredBlockPatternsLength","PatternList","selectedCategory","patternCategories","debouncedSpeak","destinationRootClientId","onInsertBlocks","shouldFocusBlock","allPatterns","onSelectBlockPattern","registeredPatternCategories","map","patternCategory","name","filteredBlockPatterns","filter","pattern","categories","length","every","category","includes","count","resultsFoundMessage","currentShownPatterns","step","hasItems"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useMemo, useEffect } from '@wordpress/element';\nimport { _n, sprintf } from '@wordpress/i18n';\nimport { useDebounce, useAsyncList } from '@wordpress/compose';\nimport { __experimentalHeading as Heading } from '@wordpress/components';\nimport { speak } from '@wordpress/a11y';\n\n/**\n * Internal dependencies\n */\nimport BlockPatternsList from '../../block-patterns-list';\nimport InserterNoResults from '../no-results';\nimport useInsertionPoint from '../hooks/use-insertion-point';\nimport usePatternsState from '../hooks/use-patterns-state';\nimport InserterListbox from '../../inserter-listbox';\nimport { searchItems } from '../search-items';\n\nconst INITIAL_INSERTER_RESULTS = 2;\n\nfunction PatternsListHeader( { filterValue, filteredBlockPatternsLength } ) {\n\tif ( ! filterValue ) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<Heading\n\t\t\tlevel={ 2 }\n\t\t\tlineHeight={ '48px' }\n\t\t\tclassName=\"block-editor-block-patterns-explorer__search-results-count\"\n\t\t>\n\t\t\t{ sprintf(\n\t\t\t\t/* translators: %d: number of patterns. %s: block pattern search query */\n\t\t\t\t_n(\n\t\t\t\t\t'%1$d pattern found for \"%2$s\"',\n\t\t\t\t\t'%1$d patterns found for \"%2$s\"',\n\t\t\t\t\tfilteredBlockPatternsLength\n\t\t\t\t),\n\t\t\t\tfilteredBlockPatternsLength,\n\t\t\t\tfilterValue\n\t\t\t) }\n\t\t</Heading>\n\t);\n}\n\nfunction PatternList( { filterValue, selectedCategory, patternCategories } ) {\n\tconst debouncedSpeak = useDebounce( speak, 500 );\n\tconst [ destinationRootClientId, onInsertBlocks ] = useInsertionPoint( {\n\t\tshouldFocusBlock: true,\n\t} );\n\tconst [ allPatterns, , onSelectBlockPattern ] = usePatternsState(\n\t\tonInsertBlocks,\n\t\tdestinationRootClientId\n\t);\n\tconst registeredPatternCategories = useMemo(\n\t\t() =>\n\t\t\tpatternCategories.map(\n\t\t\t\t( patternCategory ) => patternCategory.name\n\t\t\t),\n\t\t[ patternCategories ]\n\t);\n\n\tconst filteredBlockPatterns = useMemo( () => {\n\t\tif ( ! filterValue ) {\n\t\t\treturn allPatterns.filter( ( pattern ) =>\n\t\t\t\tselectedCategory === 'uncategorized'\n\t\t\t\t\t? ! pattern.categories?.length ||\n\t\t\t\t\t  pattern.categories.every(\n\t\t\t\t\t\t\t( category ) =>\n\t\t\t\t\t\t\t\t! registeredPatternCategories.includes(\n\t\t\t\t\t\t\t\t\tcategory\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t  )\n\t\t\t\t\t: pattern.categories?.includes( selectedCategory )\n\t\t\t);\n\t\t}\n\t\treturn searchItems( allPatterns, filterValue );\n\t}, [ filterValue, selectedCategory, allPatterns ] );\n\n\t// Announce search results on change.\n\tuseEffect( () => {\n\t\tif ( ! filterValue ) {\n\t\t\treturn;\n\t\t}\n\t\tconst count = filteredBlockPatterns.length;\n\t\tconst resultsFoundMessage = sprintf(\n\t\t\t/* translators: %d: number of results. */\n\t\t\t_n( '%d result found.', '%d results found.', count ),\n\t\t\tcount\n\t\t);\n\t\tdebouncedSpeak( resultsFoundMessage );\n\t}, [ filterValue, debouncedSpeak ] );\n\n\tconst currentShownPatterns = useAsyncList( filteredBlockPatterns, {\n\t\tstep: INITIAL_INSERTER_RESULTS,\n\t} );\n\n\tconst hasItems = !! filteredBlockPatterns?.length;\n\treturn (\n\t\t<div className=\"block-editor-block-patterns-explorer__list\">\n\t\t\t{ hasItems && (\n\t\t\t\t<PatternsListHeader\n\t\t\t\t\tfilterValue={ filterValue }\n\t\t\t\t\tfilteredBlockPatternsLength={ filteredBlockPatterns.length }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t<InserterListbox>\n\t\t\t\t{ ! hasItems && <InserterNoResults /> }\n\t\t\t\t{ hasItems && (\n\t\t\t\t\t<BlockPatternsList\n\t\t\t\t\t\tshownPatterns={ currentShownPatterns }\n\t\t\t\t\t\tblockPatterns={ filteredBlockPatterns }\n\t\t\t\t\t\tonClickPattern={ onSelectBlockPattern }\n\t\t\t\t\t\tisDraggable={ false }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</InserterListbox>\n\t\t</div>\n\t);\n}\n\nexport default PatternList;\n"]}