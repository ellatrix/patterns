import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import { View } from 'react-native';
/**
 * WordPress dependencies
 */

import { useEffect, useCallback } from '@wordpress/element';
/**
 * Internal dependencies
 */

import { useBlockListContext } from './block-list-context';

function BlockListItemCell(_ref) {
  let {
    children,
    clientId,
    rootClientId,
    onLayout
  } = _ref;
  const {
    blocksLayouts,
    updateBlocksLayouts
  } = useBlockListContext();
  useEffect(() => {
    return () => {
      updateBlocksLayouts(blocksLayouts, {
        clientId,
        shouldRemove: true
      });
    };
  }, []);
  const onCellLayout = useCallback(event => {
    const {
      nativeEvent: {
        layout
      }
    } = event;
    updateBlocksLayouts(blocksLayouts, {
      clientId,
      rootClientId,
      ...layout
    });

    if (onLayout) {
      onLayout(event);
    }
  }, [clientId, rootClientId, updateBlocksLayouts, onLayout]);
  return createElement(View, {
    onLayout: onCellLayout
  }, children);
}

export default BlockListItemCell;
//# sourceMappingURL=block-list-item-cell.native.js.map