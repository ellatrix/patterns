{"version":3,"sources":["@wordpress/block-editor/src/utils/pre-parse-patterns.js"],"names":["useSelect","select","useEffect","store","blockEditorStore","requestIdleCallback","window","callback","setTimeout","Date","now","requestAnimationFrame","cancelIdleCallback","clearTimeout","cancelAnimationFrame","usePreParsePatterns","patterns","isPreviewMode","_select","__experimentalBlockPatterns","__unstableIsPreviewMode","getSettings","length","handle","index","__experimentalGetParsedPattern","name"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,iBAAlC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA;AACA;AACA;;AACA,SAASC,KAAK,IAAIC,gBAAlB,QAA0C,UAA1C;;AAEA,MAAMC,mBAAmB,GAAG,CAAE,MAAM;AACnC,MAAK,OAAOC,MAAP,KAAkB,WAAvB,EAAqC;AACpC,WAASC,QAAF,IAAgB;AACtBC,MAAAA,UAAU,CAAE,MAAMD,QAAQ,CAAEE,IAAI,CAACC,GAAL,EAAF,CAAhB,EAAgC,CAAhC,CAAV;AACA,KAFD;AAGA;;AAED,SAAOJ,MAAM,CAACD,mBAAP,IAA8BC,MAAM,CAACK,qBAA5C;AACA,CAR2B,GAA5B;;AAUA,MAAMC,kBAAkB,GAAG,CAAE,MAAM;AAClC,MAAK,OAAON,MAAP,KAAkB,WAAvB,EAAqC;AACpC,WAAOO,YAAP;AACA;;AAED,SAAOP,MAAM,CAACM,kBAAP,IAA6BN,MAAM,CAACQ,oBAA3C;AACA,CAN0B,GAA3B;;AAQA,OAAO,SAASC,mBAAT,GAA+B;AACrC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA8BjB,SAAS,CAAIkB,OAAF,IAAe;AAC7D,UAAM;AAAEC,MAAAA,2BAAF;AAA+BC,MAAAA;AAA/B,QACLF,OAAO,CAAEd,gBAAF,CAAP,CAA4BiB,WAA5B,EADD;;AAEA,WAAO;AACNL,MAAAA,QAAQ,EAAEG,2BADJ;AAENF,MAAAA,aAAa,EAAEG;AAFT,KAAP;AAIA,GAP4C,EAO1C,EAP0C,CAA7C;AASAlB,EAAAA,SAAS,CAAE,MAAM;AAChB,QAAKe,aAAL,EAAqB;AACpB;AACA;;AACD,QAAK,EAAED,QAAF,aAAEA,QAAF,eAAEA,QAAQ,CAAEM,MAAZ,CAAL,EAA0B;AACzB;AACA;;AAED,QAAIC,MAAJ;AACA,QAAIC,KAAK,GAAG,CAAC,CAAb;;AAEA,UAAMjB,QAAQ,GAAG,MAAM;AACtBiB,MAAAA,KAAK;;AACL,UAAKA,KAAK,IAAIR,QAAQ,CAACM,MAAvB,EAAgC;AAC/B;AACA;;AAEDrB,MAAAA,MAAM,CAAEG,gBAAF,CAAN,CAA2BqB,8BAA3B,CACCT,QAAQ,CAAEQ,KAAF,CAAR,CAAkBE,IADnB;;AAIAH,MAAAA,MAAM,GAAGlB,mBAAmB,CAAEE,QAAF,CAA5B;AACA,KAXD;;AAaAgB,IAAAA,MAAM,GAAGlB,mBAAmB,CAAEE,QAAF,CAA5B;AACA,WAAO,MAAMK,kBAAkB,CAAEW,MAAF,CAA/B;AACA,GA1BQ,EA0BN,CAAEP,QAAF,EAAYC,aAAZ,CA1BM,CAAT;AA4BA,SAAO,IAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect, select } from '@wordpress/data';\nimport { useEffect } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../store';\n\nconst requestIdleCallback = ( () => {\n\tif ( typeof window === 'undefined' ) {\n\t\treturn ( callback ) => {\n\t\t\tsetTimeout( () => callback( Date.now() ), 0 );\n\t\t};\n\t}\n\n\treturn window.requestIdleCallback || window.requestAnimationFrame;\n} )();\n\nconst cancelIdleCallback = ( () => {\n\tif ( typeof window === 'undefined' ) {\n\t\treturn clearTimeout;\n\t}\n\n\treturn window.cancelIdleCallback || window.cancelAnimationFrame;\n} )();\n\nexport function usePreParsePatterns() {\n\tconst { patterns, isPreviewMode } = useSelect( ( _select ) => {\n\t\tconst { __experimentalBlockPatterns, __unstableIsPreviewMode } =\n\t\t\t_select( blockEditorStore ).getSettings();\n\t\treturn {\n\t\t\tpatterns: __experimentalBlockPatterns,\n\t\t\tisPreviewMode: __unstableIsPreviewMode,\n\t\t};\n\t}, [] );\n\n\tuseEffect( () => {\n\t\tif ( isPreviewMode ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( ! patterns?.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet handle;\n\t\tlet index = -1;\n\n\t\tconst callback = () => {\n\t\t\tindex++;\n\t\t\tif ( index >= patterns.length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tselect( blockEditorStore ).__experimentalGetParsedPattern(\n\t\t\t\tpatterns[ index ].name\n\t\t\t);\n\n\t\t\thandle = requestIdleCallback( callback );\n\t\t};\n\n\t\thandle = requestIdleCallback( callback );\n\t\treturn () => cancelIdleCallback( handle );\n\t}, [ patterns, isPreviewMode ] );\n\n\treturn null;\n}\n"]}