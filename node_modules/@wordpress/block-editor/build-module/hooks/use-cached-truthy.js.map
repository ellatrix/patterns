{"version":3,"sources":["@wordpress/block-editor/src/hooks/use-cached-truthy.js"],"names":["useState","useEffect","useCachedTruthy","value","cachedValue","setCachedValue"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,oBAApC;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,eAAT,CAA0BC,KAA1B,EAAkC;AACxC,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCL,QAAQ,CAAEG,KAAF,CAAhD;AACAF,EAAAA,SAAS,CAAE,MAAM;AAChB,QAAKE,KAAL,EAAa;AACZE,MAAAA,cAAc,CAAEF,KAAF,CAAd;AACA;AACD,GAJQ,EAIN,CAAEA,KAAF,CAJM,CAAT;AAKA,SAAOC,WAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState, useEffect } from '@wordpress/element';\n\n/**\n * Keeps an up-to-date copy of the passed value and returns it. If value becomes falsy, it will return the last truthy copy.\n *\n * @param {any} value\n * @return {any} value\n */\nexport function useCachedTruthy( value ) {\n\tconst [ cachedValue, setCachedValue ] = useState( value );\n\tuseEffect( () => {\n\t\tif ( value ) {\n\t\t\tsetCachedValue( value );\n\t\t}\n\t}, [ value ] );\n\treturn cachedValue;\n}\n"]}