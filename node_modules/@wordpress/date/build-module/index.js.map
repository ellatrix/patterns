{"version":3,"sources":["@wordpress/date/src/index.js"],"names":["momentLib","deprecated","WP_ZONE","VALID_UTC_OFFSET","settings","l10n","locale","months","monthsShort","weekdays","weekdaysShort","meridiem","am","pm","AM","PM","relative","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","startOfWeek","formats","time","date","datetime","datetimeAbbreviated","timezone","offset","string","abbr","setSettings","dateSettings","setupWPTimezone","locales","includes","localeData","longDateFormat","defineLocale","currentLocale","parentLocale","hour","minute","isLowercase","LT","LTS","L","LL","LLL","LLLL","relativeTime","getSettings","__experimentalGetSettings","since","alternative","tz","add","pack","name","abbrs","untils","offsets","MINUTE_IN_SECONDS","HOUR_IN_MINUTES","HOUR_IN_SECONDS","formatMap","D","j","l","N","S","momentDate","num","format","withOrdinal","replace","w","z","parseInt","toString","W","F","n","t","daysInMonth","isLeapYear","o","Y","a","A","B","timezoned","utcOffset","seconds","minutes","hours","g","G","H","i","u","v","e","I","isDST","O","P","T","Z","sign","parts","substring","split","map","c","r","U","dateFormat","dateValue","Date","char","newFormat","length","push","formatter","join","dateMoment","buildMoment","gmdate","utc","dateI18n","gmdateI18n","undefined","isInTheFuture","now","momentObject","isAfter","getDate","dateString","toDate","isUTCOffset","test"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,QAAtB;AACA,OAAO,iCAAP;AACA,OAAO,uCAAP;AAEA;AACA;AACA;;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAEA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,IAAhB,C,CAEA;AACA;;AACA,MAAMC,gBAAgB,GAAG,iCAAzB,C,CAEA;AACA;;AACA;;AACA,IAAIC,QAAQ,GAAG;AACdC,EAAAA,IAAI,EAAE;AACLC,IAAAA,MAAM,EAAE,IADH;AAELC,IAAAA,MAAM,EAAE,CACP,SADO,EAEP,UAFO,EAGP,OAHO,EAIP,OAJO,EAKP,KALO,EAMP,MANO,EAOP,MAPO,EAQP,QARO,EASP,WATO,EAUP,SAVO,EAWP,UAXO,EAYP,UAZO,CAFH;AAgBLC,IAAAA,WAAW,EAAE,CACZ,KADY,EAEZ,KAFY,EAGZ,KAHY,EAIZ,KAJY,EAKZ,KALY,EAMZ,KANY,EAOZ,KAPY,EAQZ,KARY,EASZ,KATY,EAUZ,KAVY,EAWZ,KAXY,EAYZ,KAZY,CAhBR;AA8BLC,IAAAA,QAAQ,EAAE,CACT,QADS,EAET,QAFS,EAGT,SAHS,EAIT,WAJS,EAKT,UALS,EAMT,QANS,EAOT,UAPS,CA9BL;AAuCLC,IAAAA,aAAa,EAAE,CAAE,KAAF,EAAS,KAAT,EAAgB,KAAhB,EAAuB,KAAvB,EAA8B,KAA9B,EAAqC,KAArC,EAA4C,KAA5C,CAvCV;AAwCLC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,EAAE,EAAE,IAAN;AAAYC,MAAAA,EAAE,EAAE,IAAhB;AAAsBC,MAAAA,EAAE,EAAE,IAA1B;AAAgCC,MAAAA,EAAE,EAAE;AAApC,KAxCL;AAyCLC,IAAAA,QAAQ,EAAE;AACTC,MAAAA,MAAM,EAAE,aADC;AAETC,MAAAA,IAAI,EAAE,QAFG;AAGTC,MAAAA,CAAC,EAAE,eAHM;AAITC,MAAAA,EAAE,EAAE,YAJK;AAKTC,MAAAA,CAAC,EAAE,UALM;AAMTC,MAAAA,EAAE,EAAE,YANK;AAOTC,MAAAA,CAAC,EAAE,SAPM;AAQTC,MAAAA,EAAE,EAAE,UARK;AASTC,MAAAA,CAAC,EAAE,OATM;AAUTC,MAAAA,EAAE,EAAE,SAVK;AAWTC,MAAAA,CAAC,EAAE,SAXM;AAYTC,MAAAA,EAAE,EAAE,WAZK;AAaTC,MAAAA,CAAC,EAAE,QAbM;AAcTC,MAAAA,EAAE,EAAE;AAdK,KAzCL;AAyDLC,IAAAA,WAAW,EAAE;AAzDR,GADQ;AA4DdC,EAAAA,OAAO,EAAE;AACRC,IAAAA,IAAI,EAAE,QADE;AAERC,IAAAA,IAAI,EAAE,QAFE;AAGRC,IAAAA,QAAQ,EAAE,eAHF;AAIRC,IAAAA,mBAAmB,EAAE;AAJb,GA5DK;AAkEdC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,MAAM,EAAE,GAAV;AAAeC,IAAAA,MAAM,EAAE,EAAvB;AAA2BC,IAAAA,IAAI,EAAE;AAAjC;AAlEI,CAAf;AAqEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,CAAsBC,YAAtB,EAAqC;AAC3CtC,EAAAA,QAAQ,GAAGsC,YAAX;AAEAC,EAAAA,eAAe,GAH4B,CAK3C;;AACA,MAAK3C,SAAS,CAAC4C,OAAV,GAAoBC,QAApB,CAA8BH,YAAY,CAACrC,IAAb,CAAkBC,MAAhD,CAAL,EAAgE;AAC/D;AACA;AACA,QACCN,SAAS,CACP8C,UADF,CACcJ,YAAY,CAACrC,IAAb,CAAkBC,MADhC,EAEEyC,cAFF,CAEkB,KAFlB,MAE8B,IAH/B,EAIE;AACD;AACA;AACA/C,MAAAA,SAAS,CAACgD,YAAV,CAAwBN,YAAY,CAACrC,IAAb,CAAkBC,MAA1C,EAAkD,IAAlD;AACA,KARD,MAQO;AACN;AACA;AACA;AACD,GArB0C,CAuB3C;;;AACA,QAAM2C,aAAa,GAAGjD,SAAS,CAACM,MAAV,EAAtB,CAxB2C,CA0B3C;;AACAN,EAAAA,SAAS,CAACgD,YAAV,CAAwBN,YAAY,CAACrC,IAAb,CAAkBC,MAA1C,EAAkD;AACjD;AACA;AACA4C,IAAAA,YAAY,EAAE,IAHmC;AAIjD3C,IAAAA,MAAM,EAAEmC,YAAY,CAACrC,IAAb,CAAkBE,MAJuB;AAKjDC,IAAAA,WAAW,EAAEkC,YAAY,CAACrC,IAAb,CAAkBG,WALkB;AAMjDC,IAAAA,QAAQ,EAAEiC,YAAY,CAACrC,IAAb,CAAkBI,QANqB;AAOjDC,IAAAA,aAAa,EAAEgC,YAAY,CAACrC,IAAb,CAAkBK,aAPgB;;AAQjDC,IAAAA,QAAQ,CAAEwC,IAAF,EAAQC,MAAR,EAAgBC,WAAhB,EAA8B;AACrC,UAAKF,IAAI,GAAG,EAAZ,EAAiB;AAChB,eAAOE,WAAW,GACfX,YAAY,CAACrC,IAAb,CAAkBM,QAAlB,CAA2BC,EADZ,GAEf8B,YAAY,CAACrC,IAAb,CAAkBM,QAAlB,CAA2BG,EAF9B;AAGA;;AACD,aAAOuC,WAAW,GACfX,YAAY,CAACrC,IAAb,CAAkBM,QAAlB,CAA2BE,EADZ,GAEf6B,YAAY,CAACrC,IAAb,CAAkBM,QAAlB,CAA2BI,EAF9B;AAGA,KAjBgD;;AAkBjDgC,IAAAA,cAAc,EAAE;AACfO,MAAAA,EAAE,EAAEZ,YAAY,CAACV,OAAb,CAAqBC,IADV;AAEfsB,MAAAA,GAAG,EAAEvD,SAAS,CAAC8C,UAAV,CAAsB,IAAtB,EAA6BC,cAA7B,CAA6C,KAA7C,CAFU;AAGfS,MAAAA,CAAC,EAAExD,SAAS,CAAC8C,UAAV,CAAsB,IAAtB,EAA6BC,cAA7B,CAA6C,GAA7C,CAHY;AAIfU,MAAAA,EAAE,EAAEf,YAAY,CAACV,OAAb,CAAqBE,IAJV;AAKfwB,MAAAA,GAAG,EAAEhB,YAAY,CAACV,OAAb,CAAqBG,QALX;AAMfwB,MAAAA,IAAI,EAAE3D,SAAS,CAAC8C,UAAV,CAAsB,IAAtB,EAA6BC,cAA7B,CAA6C,MAA7C;AANS,KAlBiC;AA0BjD;AACA;AACAa,IAAAA,YAAY,EAAElB,YAAY,CAACrC,IAAb,CAAkBW;AA5BiB,GAAlD,EA3B2C,CA0D3C;;AACAhB,EAAAA,SAAS,CAACM,MAAV,CAAkB2C,aAAlB;AACA;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASY,WAAT,GAAuB;AAC7B,SAAOzD,QAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAAS0D,yBAAT,GAAqC;AAC3C7D,EAAAA,UAAU,CAAE,mCAAF,EAAuC;AAChD8D,IAAAA,KAAK,EAAE,KADyC;AAEhDC,IAAAA,WAAW,EAAE;AAFmC,GAAvC,CAAV;AAIA,SAAOH,WAAW,EAAlB;AACA;;AAED,SAASlB,eAAT,GAA2B;AAC1B;AACA3C,EAAAA,SAAS,CAACiE,EAAV,CAAaC,GAAb,CACClE,SAAS,CAACiE,EAAV,CAAaE,IAAb,CAAmB;AAClBC,IAAAA,IAAI,EAAElE,OADY;AAElBmE,IAAAA,KAAK,EAAE,CAAEnE,OAAF,CAFW;AAGlBoE,IAAAA,MAAM,EAAE,CAAE,IAAF,CAHU;AAIlBC,IAAAA,OAAO,EAAE,CAAE,CAACnE,QAAQ,CAACiC,QAAT,CAAkBC,MAAnB,GAA4B,EAA5B,IAAkC,CAApC;AAJS,GAAnB,CADD;AAQA,C,CAED;;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMkC,iBAAiB,GAAG,EAA1B;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,eAAe,GAAG,EAAxB;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,eAAe,GAAG,KAAKF,iBAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMG,SAAS,GAAG;AACjB;AACAlD,EAAAA,CAAC,EAAE,IAFc;AAGjBmD,EAAAA,CAAC,EAAE,KAHc;AAIjBC,EAAAA,CAAC,EAAE,GAJc;AAKjBC,EAAAA,CAAC,EAAE,MALc;AAMjBC,EAAAA,CAAC,EAAE,GANc;;AAQjB;AACD;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,CAAC,CAAEC,UAAF,EAAe;AACf;AACA,UAAMC,GAAG,GAAGD,UAAU,CAACE,MAAX,CAAmB,GAAnB,CAAZ;AACA,UAAMC,WAAW,GAAGH,UAAU,CAACE,MAAX,CAAmB,IAAnB,CAApB;AACA,WAAOC,WAAW,CAACC,OAAZ,CAAqBH,GAArB,EAA0B,EAA1B,CAAP;AACA,GApBgB;;AAsBjBI,EAAAA,CAAC,EAAE,GAtBc;;AAuBjB;AACD;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,CAAC,CAAEN,UAAF,EAAe;AACf;AACA,WAAO,CAAEO,QAAQ,CAAEP,UAAU,CAACE,MAAX,CAAmB,KAAnB,CAAF,EAA8B,EAA9B,CAAR,GAA6C,CAA/C,EAAmDM,QAAnD,EAAP;AACA,GAjCgB;;AAmCjB;AACAC,EAAAA,CAAC,EAAE,GApCc;AAsCjB;AACAC,EAAAA,CAAC,EAAE,MAvCc;AAwCjBtE,EAAAA,CAAC,EAAE,IAxCc;AAyCjBM,EAAAA,CAAC,EAAE,KAzCc;AA0CjBiE,EAAAA,CAAC,EAAE,GA1Cc;;AA2CjB;AACD;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,CAAC,CAAEZ,UAAF,EAAe;AACf,WAAOA,UAAU,CAACa,WAAX,EAAP;AACA,GApDgB;;AAsDjB;;AACA;AACD;AACA;AACA;AACA;AACA;AACA;AACCtC,EAAAA,CAAC,CAAEyB,UAAF,EAAe;AACf,WAAOA,UAAU,CAACc,UAAX,KAA0B,GAA1B,GAAgC,GAAvC;AACA,GAhEgB;;AAiEjBC,EAAAA,CAAC,EAAE,MAjEc;AAkEjBC,EAAAA,CAAC,EAAE,MAlEc;AAmEjBpE,EAAAA,CAAC,EAAE,IAnEc;AAqEjB;AACAqE,EAAAA,CAAC,EAAE,GAtEc;AAuEjBC,EAAAA,CAAC,EAAE,GAvEc;;AAwEjB;AACD;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,CAAC,CAAEnB,UAAF,EAAe;AACf,UAAMoB,SAAS,GAAGrG,SAAS,CAAEiF,UAAF,CAAT,CAAwBqB,SAAxB,CAAmC,EAAnC,CAAlB;AACA,UAAMC,OAAO,GAAGf,QAAQ,CAAEa,SAAS,CAAClB,MAAV,CAAkB,GAAlB,CAAF,EAA2B,EAA3B,CAAxB;AAAA,UACCqB,OAAO,GAAGhB,QAAQ,CAAEa,SAAS,CAAClB,MAAV,CAAkB,GAAlB,CAAF,EAA2B,EAA3B,CADnB;AAAA,UAECsB,KAAK,GAAGjB,QAAQ,CAAEa,SAAS,CAAClB,MAAV,CAAkB,GAAlB,CAAF,EAA2B,EAA3B,CAFjB;AAGA,WAAOK,QAAQ,CACd,CACC,CAAEe,OAAO,GACRC,OAAO,GAAGhC,iBADT,GAEDiC,KAAK,GAAG/B,eAFT,IAGA,IAJD,EAKEe,QALF,EADc,EAOd,EAPc,CAAf;AASA,GA7FgB;;AA8FjBiB,EAAAA,CAAC,EAAE,GA9Fc;AA+FjBC,EAAAA,CAAC,EAAE,GA/Fc;AAgGjBpF,EAAAA,CAAC,EAAE,IAhGc;AAiGjBqF,EAAAA,CAAC,EAAE,IAjGc;AAkGjBC,EAAAA,CAAC,EAAE,IAlGc;AAmGjB1F,EAAAA,CAAC,EAAE,IAnGc;AAoGjB2F,EAAAA,CAAC,EAAE,QApGc;AAqGjBC,EAAAA,CAAC,EAAE,KArGc;AAsGjB;AACAC,EAAAA,CAAC,EAAE,IAvGc;;AAwGjB;AACD;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,CAAC,CAAEhC,UAAF,EAAe;AACf,WAAOA,UAAU,CAACiC,KAAX,KAAqB,GAArB,GAA2B,GAAlC;AACA,GAjHgB;;AAkHjBC,EAAAA,CAAC,EAAE,IAlHc;AAmHjBC,EAAAA,CAAC,EAAE,GAnHc;AAoHjBC,EAAAA,CAAC,EAAE,GApHc;;AAqHjB;AACD;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,CAAC,CAAErC,UAAF,EAAe;AACf;AACA,UAAM3C,MAAM,GAAG2C,UAAU,CAACE,MAAX,CAAmB,GAAnB,CAAf;AACA,UAAMoC,IAAI,GAAGjF,MAAM,CAAE,CAAF,CAAN,KAAgB,GAAhB,GAAsB,CAAC,CAAvB,GAA2B,CAAxC;AACA,UAAMkF,KAAK,GAAGlF,MAAM,CAClBmF,SADY,CACD,CADC,EAEZC,KAFY,CAEL,GAFK,EAGZC,GAHY,CAGL/B,CAAF,IAASJ,QAAQ,CAAEI,CAAF,EAAK,EAAL,CAHV,CAAd;AAIA,WACC2B,IAAI,IACFC,KAAK,CAAE,CAAF,CAAL,GAAa/C,eAAb,GAA+B+C,KAAK,CAAE,CAAF,CADlC,CAAJ,GAEAhD,iBAHD;AAKA,GAzIgB;;AA0IjB;AACAoD,EAAAA,CAAC,EAAE,sBA3Ic;;AA2IU;;AAC3B;AACD;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,CAAC,CAAE5C,UAAF,EAAe;AACf,WAAOA,UAAU,CACf3E,MADK,CACG,IADH,EAEL6E,MAFK,CAEG,8BAFH,CAAP;AAGA,GAvJgB;;AAwJjB2C,EAAAA,CAAC,EAAE;AAxJc,CAAlB;AA2JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAAS3C,MAAT,CAAiB4C,UAAjB,EAAsD;AAAA,MAAzBC,SAAyB,uEAAb,IAAIC,IAAJ,EAAa;AAC5D,MAAIpB,CAAJ,EAAOqB,IAAP;AACA,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAMlD,UAAU,GAAGjF,SAAS,CAAEgI,SAAF,CAA5B;;AACA,OAAMnB,CAAC,GAAG,CAAV,EAAaA,CAAC,GAAGkB,UAAU,CAACK,MAA5B,EAAoCvB,CAAC,EAArC,EAA0C;AACzCqB,IAAAA,IAAI,GAAGH,UAAU,CAAElB,CAAF,CAAjB,CADyC,CAEzC;;AACA,QAAK,SAASqB,IAAd,EAAqB;AACpB;AACArB,MAAAA,CAAC;AACDsB,MAAAA,SAAS,CAACE,IAAV,CAAgB,MAAMN,UAAU,CAAElB,CAAF,CAAhB,GAAwB,GAAxC;AACA;AACA;;AACD,QAAKqB,IAAI,IAAIvD,SAAb,EAAyB;AACxB,YAAM2D,SAAS,GACd3D,SAAS;AAAE;AAAiCuD,MAAAA,IAAnC,CADV;;AAEA,UAAK,OAAOI,SAAP,KAAqB,QAA1B,EAAqC;AACpC;AACAH,QAAAA,SAAS,CAACE,IAAV,CAAgB,MAAMC,SAAS,CAAErD,UAAF,CAAf,GAAgC,GAAhD;AACA,OAHD,MAGO;AACN;AACAkD,QAAAA,SAAS,CAACE,IAAV,CAAgBC,SAAhB;AACA;AACD,KAVD,MAUO;AACNH,MAAAA,SAAS,CAACE,IAAV,CAAgB,MAAMH,IAAN,GAAa,GAA7B;AACA;AACD,GA1B2D,CA2B5D;AACA;;;AACA,SAAOjD,UAAU,CAACE,MAAX,CAAmBgD,SAAS,CAACI,IAAV,CAAgB,IAAhB,CAAnB,CAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASrG,IAAT,CAAe6F,UAAf,EAA8D;AAAA,MAAnCC,SAAmC,uEAAvB,IAAIC,IAAJ,EAAuB;AAAA,MAAX5F,QAAW;AACpE,QAAMmG,UAAU,GAAGC,WAAW,CAAET,SAAF,EAAa3F,QAAb,CAA9B;AACA,SAAO8C,MAAM,CAAE4C,UAAF,EAAcS,UAAd,CAAb;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,MAAT,CAAiBX,UAAjB,EAAsD;AAAA,MAAzBC,SAAyB,uEAAb,IAAIC,IAAJ,EAAa;AAC5D,QAAMO,UAAU,GAAGxI,SAAS,CAAEgI,SAAF,CAAT,CAAuBW,GAAvB,EAAnB;AACA,SAAOxD,MAAM,CAAE4C,UAAF,EAAcS,UAAd,CAAb;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASI,QAAT,CAAmBb,UAAnB,EAAkE;AAAA,MAAnCC,SAAmC,uEAAvB,IAAIC,IAAJ,EAAuB;AAAA,MAAX5F,QAAW;;AACxE,MAAK,SAASA,QAAd,EAAyB;AACxB,WAAOwG,UAAU,CAAEd,UAAF,EAAcC,SAAd,CAAjB;AACA;;AAED,MAAK,UAAU3F,QAAf,EAA0B;AACzBA,IAAAA,QAAQ,GAAGyG,SAAX;AACA;;AAED,QAAMN,UAAU,GAAGC,WAAW,CAAET,SAAF,EAAa3F,QAAb,CAA9B;AACAmG,EAAAA,UAAU,CAAClI,MAAX,CAAmBF,QAAQ,CAACC,IAAT,CAAcC,MAAjC;AACA,SAAO6E,MAAM,CAAE4C,UAAF,EAAcS,UAAd,CAAb;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASK,UAAT,CAAqBd,UAArB,EAA0D;AAAA,MAAzBC,SAAyB,uEAAb,IAAIC,IAAJ,EAAa;AAChE,QAAMO,UAAU,GAAGxI,SAAS,CAAEgI,SAAF,CAAT,CAAuBW,GAAvB,EAAnB;AACAH,EAAAA,UAAU,CAAClI,MAAX,CAAmBF,QAAQ,CAACC,IAAT,CAAcC,MAAjC;AACA,SAAO6E,MAAM,CAAE4C,UAAF,EAAcS,UAAd,CAAb;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASO,aAAT,CAAwBf,SAAxB,EAAoC;AAC1C,QAAMgB,GAAG,GAAGhJ,SAAS,CAACiE,EAAV,CAAc/D,OAAd,CAAZ;AACA,QAAM+I,YAAY,GAAGjJ,SAAS,CAACiE,EAAV,CAAc+D,SAAd,EAAyB9H,OAAzB,CAArB;AAEA,SAAO+I,YAAY,CAACC,OAAb,CAAsBF,GAAtB,CAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASG,OAAT,CAAkBC,UAAlB,EAA+B;AACrC,MAAK,CAAEA,UAAP,EAAoB;AACnB,WAAOpJ,SAAS,CAACiE,EAAV,CAAc/D,OAAd,EAAwBmJ,MAAxB,EAAP;AACA;;AAED,SAAOrJ,SAAS,CAACiE,EAAV,CAAcmF,UAAd,EAA0BlJ,OAA1B,EAAoCmJ,MAApC,EAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASZ,WAAT,CAAsBT,SAAtB,EAAiD;AAAA,MAAhB3F,QAAgB,uEAAL,EAAK;AAChD,QAAMmG,UAAU,GAAGxI,SAAS,CAAEgI,SAAF,CAA5B;;AAEA,MAAK3F,QAAQ,IAAI,CAAEiH,WAAW,CAAEjH,QAAF,CAA9B,EAA6C;AAC5C;AACA,WAAOmG,UAAU,CAACvE,EAAX;AAAe;AAAwB5B,IAAAA,QAAvC,CAAP;AACA;;AAED,MAAKA,QAAQ,IAAIiH,WAAW,CAAEjH,QAAF,CAA5B,EAA2C;AAC1C,WAAOmG,UAAU,CAAClC,SAAX,CAAsBjE,QAAtB,CAAP;AACA;;AAED,MAAKjC,QAAQ,CAACiC,QAAT,CAAkBE,MAAvB,EAAgC;AAC/B,WAAOiG,UAAU,CAACvE,EAAX,CAAe7D,QAAQ,CAACiC,QAAT,CAAkBE,MAAjC,CAAP;AACA;;AAED,SAAOiG,UAAU,CAAClC,SAAX,CAAsB,CAAClG,QAAQ,CAACiC,QAAT,CAAkBC,MAAzC,CAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASgH,WAAT,CAAsBhH,MAAtB,EAA+B;AAC9B,MAAK,aAAa,OAAOA,MAAzB,EAAkC;AACjC,WAAO,IAAP;AACA;;AAED,SAAOnC,gBAAgB,CAACoJ,IAAjB,CAAuBjH,MAAvB,CAAP;AACA;;AAEDK,eAAe","sourcesContent":["/**\n * External dependencies\n */\nimport momentLib from 'moment';\nimport 'moment-timezone/moment-timezone';\nimport 'moment-timezone/moment-timezone-utils';\n\n/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\n\n/** @typedef {import('moment').Moment} Moment */\n/** @typedef {import('moment').LocaleSpecification} MomentLocaleSpecification */\n\n/**\n * @typedef MeridiemConfig\n * @property {string} am Lowercase AM.\n * @property {string} AM Uppercase AM.\n * @property {string} pm Lowercase PM.\n * @property {string} PM Uppercase PM.\n */\n\n/**\n * @typedef FormatsConfig\n * @property {string} time                Time format.\n * @property {string} date                Date format.\n * @property {string} datetime            Datetime format.\n * @property {string} datetimeAbbreviated Abbreviated datetime format.\n */\n\n/**\n * @typedef TimezoneConfig\n * @property {string} offset Offset setting.\n * @property {string} string The timezone as a string (e.g., `'America/Los_Angeles'`).\n * @property {string} abbr   Abbreviation for the timezone.\n */\n\n/* eslint-disable jsdoc/valid-types */\n/**\n * @typedef L10nSettings\n * @property {string}                                     locale        Moment locale.\n * @property {MomentLocaleSpecification['months']}        months        Locale months.\n * @property {MomentLocaleSpecification['monthsShort']}   monthsShort   Locale months short.\n * @property {MomentLocaleSpecification['weekdays']}      weekdays      Locale weekdays.\n * @property {MomentLocaleSpecification['weekdaysShort']} weekdaysShort Locale weekdays short.\n * @property {MeridiemConfig}                             meridiem      Meridiem config.\n * @property {MomentLocaleSpecification['relativeTime']}  relative      Relative time config.\n * @property {0|1|2|3|4|5|6}                              startOfWeek   Day that the week starts on.\n */\n/* eslint-enable jsdoc/valid-types */\n\n/**\n * @typedef DateSettings\n * @property {L10nSettings}   l10n     Localization settings.\n * @property {FormatsConfig}  formats  Date/time formats config.\n * @property {TimezoneConfig} timezone Timezone settings.\n */\n\nconst WP_ZONE = 'WP';\n\n// This regular expression tests positive for UTC offsets as described in ISO 8601.\n// See: https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC\nconst VALID_UTC_OFFSET = /^[+-][0-1][0-9](:?[0-9][0-9])?$/;\n\n// Changes made here will likely need to be made in `lib/client-assets.php` as\n// well because it uses the `setSettings()` function to change these settings.\n/** @type {DateSettings} */\nlet settings = {\n\tl10n: {\n\t\tlocale: 'en',\n\t\tmonths: [\n\t\t\t'January',\n\t\t\t'February',\n\t\t\t'March',\n\t\t\t'April',\n\t\t\t'May',\n\t\t\t'June',\n\t\t\t'July',\n\t\t\t'August',\n\t\t\t'September',\n\t\t\t'October',\n\t\t\t'November',\n\t\t\t'December',\n\t\t],\n\t\tmonthsShort: [\n\t\t\t'Jan',\n\t\t\t'Feb',\n\t\t\t'Mar',\n\t\t\t'Apr',\n\t\t\t'May',\n\t\t\t'Jun',\n\t\t\t'Jul',\n\t\t\t'Aug',\n\t\t\t'Sep',\n\t\t\t'Oct',\n\t\t\t'Nov',\n\t\t\t'Dec',\n\t\t],\n\t\tweekdays: [\n\t\t\t'Sunday',\n\t\t\t'Monday',\n\t\t\t'Tuesday',\n\t\t\t'Wednesday',\n\t\t\t'Thursday',\n\t\t\t'Friday',\n\t\t\t'Saturday',\n\t\t],\n\t\tweekdaysShort: [ 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat' ],\n\t\tmeridiem: { am: 'am', pm: 'pm', AM: 'AM', PM: 'PM' },\n\t\trelative: {\n\t\t\tfuture: '%s from now',\n\t\t\tpast: '%s ago',\n\t\t\ts: 'a few seconds',\n\t\t\tss: '%d seconds',\n\t\t\tm: 'a minute',\n\t\t\tmm: '%d minutes',\n\t\t\th: 'an hour',\n\t\t\thh: '%d hours',\n\t\t\td: 'a day',\n\t\t\tdd: '%d days',\n\t\t\tM: 'a month',\n\t\t\tMM: '%d months',\n\t\t\ty: 'a year',\n\t\t\tyy: '%d years',\n\t\t},\n\t\tstartOfWeek: 0,\n\t},\n\tformats: {\n\t\ttime: 'g: i a',\n\t\tdate: 'F j, Y',\n\t\tdatetime: 'F j, Y g: i a',\n\t\tdatetimeAbbreviated: 'M j, Y g: i a',\n\t},\n\ttimezone: { offset: '0', string: '', abbr: '' },\n};\n\n/**\n * Adds a locale to moment, using the format supplied by `wp_localize_script()`.\n *\n * @param {DateSettings} dateSettings Settings, including locale data.\n */\nexport function setSettings( dateSettings ) {\n\tsettings = dateSettings;\n\n\tsetupWPTimezone();\n\n\t// Does moment already have a locale with the right name?\n\tif ( momentLib.locales().includes( dateSettings.l10n.locale ) ) {\n\t\t// Is that locale misconfigured, e.g. because we are on a site running\n\t\t// WordPress < 6.0?\n\t\tif (\n\t\t\tmomentLib\n\t\t\t\t.localeData( dateSettings.l10n.locale )\n\t\t\t\t.longDateFormat( 'LTS' ) === null\n\t\t) {\n\t\t\t// Delete the misconfigured locale.\n\t\t\t// @ts-ignore Type definitions are incorrect - null is permitted.\n\t\t\tmomentLib.defineLocale( dateSettings.l10n.locale, null );\n\t\t} else {\n\t\t\t// We have a properly configured locale, so no need to create one.\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// defineLocale() will modify the current locale, so back it up.\n\tconst currentLocale = momentLib.locale();\n\n\t// Create locale.\n\tmomentLib.defineLocale( dateSettings.l10n.locale, {\n\t\t// Inherit anything missing from English. We don't load\n\t\t// moment-with-locales.js so English is all there is.\n\t\tparentLocale: 'en',\n\t\tmonths: dateSettings.l10n.months,\n\t\tmonthsShort: dateSettings.l10n.monthsShort,\n\t\tweekdays: dateSettings.l10n.weekdays,\n\t\tweekdaysShort: dateSettings.l10n.weekdaysShort,\n\t\tmeridiem( hour, minute, isLowercase ) {\n\t\t\tif ( hour < 12 ) {\n\t\t\t\treturn isLowercase\n\t\t\t\t\t? dateSettings.l10n.meridiem.am\n\t\t\t\t\t: dateSettings.l10n.meridiem.AM;\n\t\t\t}\n\t\t\treturn isLowercase\n\t\t\t\t? dateSettings.l10n.meridiem.pm\n\t\t\t\t: dateSettings.l10n.meridiem.PM;\n\t\t},\n\t\tlongDateFormat: {\n\t\t\tLT: dateSettings.formats.time,\n\t\t\tLTS: momentLib.localeData( 'en' ).longDateFormat( 'LTS' ),\n\t\t\tL: momentLib.localeData( 'en' ).longDateFormat( 'L' ),\n\t\t\tLL: dateSettings.formats.date,\n\t\t\tLLL: dateSettings.formats.datetime,\n\t\t\tLLLL: momentLib.localeData( 'en' ).longDateFormat( 'LLLL' ),\n\t\t},\n\t\t// From human_time_diff?\n\t\t// Set to `(number, withoutSuffix, key, isFuture) => {}` instead.\n\t\trelativeTime: dateSettings.l10n.relative,\n\t} );\n\n\t// Restore the locale to what it was.\n\tmomentLib.locale( currentLocale );\n}\n\n/**\n * Returns the currently defined date settings.\n *\n * @return {DateSettings} Settings, including locale data.\n */\nexport function getSettings() {\n\treturn settings;\n}\n\n/**\n * Returns the currently defined date settings.\n *\n * @deprecated\n * @return {DateSettings} Settings, including locale data.\n */\nexport function __experimentalGetSettings() {\n\tdeprecated( 'wp.date.__experimentalGetSettings', {\n\t\tsince: '6.1',\n\t\talternative: 'wp.date.getSettings',\n\t} );\n\treturn getSettings();\n}\n\nfunction setupWPTimezone() {\n\t// Create WP timezone based off dateSettings.\n\tmomentLib.tz.add(\n\t\tmomentLib.tz.pack( {\n\t\t\tname: WP_ZONE,\n\t\t\tabbrs: [ WP_ZONE ],\n\t\t\tuntils: [ null ],\n\t\t\toffsets: [ -settings.timezone.offset * 60 || 0 ],\n\t\t} )\n\t);\n}\n\n// Date constants.\n/**\n * Number of seconds in one minute.\n *\n * @type {number}\n */\nconst MINUTE_IN_SECONDS = 60;\n/**\n * Number of minutes in one hour.\n *\n * @type {number}\n */\nconst HOUR_IN_MINUTES = 60;\n/**\n * Number of seconds in one hour.\n *\n * @type {number}\n */\nconst HOUR_IN_SECONDS = 60 * MINUTE_IN_SECONDS;\n\n/**\n * Map of PHP formats to Moment.js formats.\n *\n * These are used internally by {@link wp.date.format}, and are either\n * a string representing the corresponding Moment.js format code, or a\n * function which returns the formatted string.\n *\n * This should only be used through {@link wp.date.format}, not\n * directly.\n */\nconst formatMap = {\n\t// Day.\n\td: 'DD',\n\tD: 'ddd',\n\tj: 'D',\n\tl: 'dddd',\n\tN: 'E',\n\n\t/**\n\t * Gets the ordinal suffix.\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {string} Formatted date.\n\t */\n\tS( momentDate ) {\n\t\t// Do - D.\n\t\tconst num = momentDate.format( 'D' );\n\t\tconst withOrdinal = momentDate.format( 'Do' );\n\t\treturn withOrdinal.replace( num, '' );\n\t},\n\n\tw: 'd',\n\t/**\n\t * Gets the day of the year (zero-indexed).\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {string} Formatted date.\n\t */\n\tz( momentDate ) {\n\t\t// DDD - 1.\n\t\treturn ( parseInt( momentDate.format( 'DDD' ), 10 ) - 1 ).toString();\n\t},\n\n\t// Week.\n\tW: 'W',\n\n\t// Month.\n\tF: 'MMMM',\n\tm: 'MM',\n\tM: 'MMM',\n\tn: 'M',\n\t/**\n\t * Gets the days in the month.\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {number} Formatted date.\n\t */\n\tt( momentDate ) {\n\t\treturn momentDate.daysInMonth();\n\t},\n\n\t// Year.\n\t/**\n\t * Gets whether the current year is a leap year.\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {string} Formatted date.\n\t */\n\tL( momentDate ) {\n\t\treturn momentDate.isLeapYear() ? '1' : '0';\n\t},\n\to: 'GGGG',\n\tY: 'YYYY',\n\ty: 'YY',\n\n\t// Time.\n\ta: 'a',\n\tA: 'A',\n\t/**\n\t * Gets the current time in Swatch Internet Time (.beats).\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {number} Formatted date.\n\t */\n\tB( momentDate ) {\n\t\tconst timezoned = momentLib( momentDate ).utcOffset( 60 );\n\t\tconst seconds = parseInt( timezoned.format( 's' ), 10 ),\n\t\t\tminutes = parseInt( timezoned.format( 'm' ), 10 ),\n\t\t\thours = parseInt( timezoned.format( 'H' ), 10 );\n\t\treturn parseInt(\n\t\t\t(\n\t\t\t\t( seconds +\n\t\t\t\t\tminutes * MINUTE_IN_SECONDS +\n\t\t\t\t\thours * HOUR_IN_SECONDS ) /\n\t\t\t\t86.4\n\t\t\t).toString(),\n\t\t\t10\n\t\t);\n\t},\n\tg: 'h',\n\tG: 'H',\n\th: 'hh',\n\tH: 'HH',\n\ti: 'mm',\n\ts: 'ss',\n\tu: 'SSSSSS',\n\tv: 'SSS',\n\t// Timezone.\n\te: 'zz',\n\t/**\n\t * Gets whether the timezone is in DST currently.\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {string} Formatted date.\n\t */\n\tI( momentDate ) {\n\t\treturn momentDate.isDST() ? '1' : '0';\n\t},\n\tO: 'ZZ',\n\tP: 'Z',\n\tT: 'z',\n\t/**\n\t * Gets the timezone offset in seconds.\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {number} Formatted date.\n\t */\n\tZ( momentDate ) {\n\t\t// Timezone offset in seconds.\n\t\tconst offset = momentDate.format( 'Z' );\n\t\tconst sign = offset[ 0 ] === '-' ? -1 : 1;\n\t\tconst parts = offset\n\t\t\t.substring( 1 )\n\t\t\t.split( ':' )\n\t\t\t.map( ( n ) => parseInt( n, 10 ) );\n\t\treturn (\n\t\t\tsign *\n\t\t\t( parts[ 0 ] * HOUR_IN_MINUTES + parts[ 1 ] ) *\n\t\t\tMINUTE_IN_SECONDS\n\t\t);\n\t},\n\t// Full date/time.\n\tc: 'YYYY-MM-DDTHH:mm:ssZ', // .toISOString.\n\t/**\n\t * Formats the date as RFC2822.\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {string} Formatted date.\n\t */\n\tr( momentDate ) {\n\t\treturn momentDate\n\t\t\t.locale( 'en' )\n\t\t\t.format( 'ddd, DD MMM YYYY HH:mm:ss ZZ' );\n\t},\n\tU: 'X',\n};\n\n/**\n * Formats a date. Does not alter the date's timezone.\n *\n * @param {string}                             dateFormat PHP-style formatting string.\n *                                                        See php.net/date.\n * @param {Moment | Date | string | undefined} dateValue  Date object or string,\n *                                                        parsable by moment.js.\n *\n * @return {string} Formatted date.\n */\nexport function format( dateFormat, dateValue = new Date() ) {\n\tlet i, char;\n\tconst newFormat = [];\n\tconst momentDate = momentLib( dateValue );\n\tfor ( i = 0; i < dateFormat.length; i++ ) {\n\t\tchar = dateFormat[ i ];\n\t\t// Is this an escape?\n\t\tif ( '\\\\' === char ) {\n\t\t\t// Add next character, then move on.\n\t\t\ti++;\n\t\t\tnewFormat.push( '[' + dateFormat[ i ] + ']' );\n\t\t\tcontinue;\n\t\t}\n\t\tif ( char in formatMap ) {\n\t\t\tconst formatter =\n\t\t\t\tformatMap[ /** @type {keyof formatMap} */ ( char ) ];\n\t\t\tif ( typeof formatter !== 'string' ) {\n\t\t\t\t// If the format is a function, call it.\n\t\t\t\tnewFormat.push( '[' + formatter( momentDate ) + ']' );\n\t\t\t} else {\n\t\t\t\t// Otherwise, add as a formatting string.\n\t\t\t\tnewFormat.push( formatter );\n\t\t\t}\n\t\t} else {\n\t\t\tnewFormat.push( '[' + char + ']' );\n\t\t}\n\t}\n\t// Join with [] between to separate characters, and replace\n\t// unneeded separators with static text.\n\treturn momentDate.format( newFormat.join( '[]' ) );\n}\n\n/**\n * Formats a date (like `date()` in PHP).\n *\n * @param {string}                             dateFormat PHP-style formatting string.\n *                                                        See php.net/date.\n * @param {Moment | Date | string | undefined} dateValue  Date object or string, parsable\n *                                                        by moment.js.\n * @param {string | number | undefined}        timezone   Timezone to output result in or a\n *                                                        UTC offset. Defaults to timezone from\n *                                                        site.\n *\n * @see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n * @see https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC\n *\n * @return {string} Formatted date in English.\n */\nexport function date( dateFormat, dateValue = new Date(), timezone ) {\n\tconst dateMoment = buildMoment( dateValue, timezone );\n\treturn format( dateFormat, dateMoment );\n}\n\n/**\n * Formats a date (like `date()` in PHP), in the UTC timezone.\n *\n * @param {string}                             dateFormat PHP-style formatting string.\n *                                                        See php.net/date.\n * @param {Moment | Date | string | undefined} dateValue  Date object or string,\n *                                                        parsable by moment.js.\n *\n * @return {string} Formatted date in English.\n */\nexport function gmdate( dateFormat, dateValue = new Date() ) {\n\tconst dateMoment = momentLib( dateValue ).utc();\n\treturn format( dateFormat, dateMoment );\n}\n\n/**\n * Formats a date (like `wp_date()` in PHP), translating it into site's locale.\n *\n * Backward Compatibility Notice: if `timezone` is set to `true`, the function\n * behaves like `gmdateI18n`.\n *\n * @param {string}                                dateFormat PHP-style formatting string.\n *                                                           See php.net/date.\n * @param {Moment | Date | string | undefined}    dateValue  Date object or string, parsable by\n *                                                           moment.js.\n * @param {string | number | boolean | undefined} timezone   Timezone to output result in or a\n *                                                           UTC offset. Defaults to timezone from\n *                                                           site. Notice: `boolean` is effectively\n *                                                           deprecated, but still supported for\n *                                                           backward compatibility reasons.\n *\n * @see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n * @see https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC\n *\n * @return {string} Formatted date.\n */\nexport function dateI18n( dateFormat, dateValue = new Date(), timezone ) {\n\tif ( true === timezone ) {\n\t\treturn gmdateI18n( dateFormat, dateValue );\n\t}\n\n\tif ( false === timezone ) {\n\t\ttimezone = undefined;\n\t}\n\n\tconst dateMoment = buildMoment( dateValue, timezone );\n\tdateMoment.locale( settings.l10n.locale );\n\treturn format( dateFormat, dateMoment );\n}\n\n/**\n * Formats a date (like `wp_date()` in PHP), translating it into site's locale\n * and using the UTC timezone.\n *\n * @param {string}                             dateFormat PHP-style formatting string.\n *                                                        See php.net/date.\n * @param {Moment | Date | string | undefined} dateValue  Date object or string,\n *                                                        parsable by moment.js.\n *\n * @return {string} Formatted date.\n */\nexport function gmdateI18n( dateFormat, dateValue = new Date() ) {\n\tconst dateMoment = momentLib( dateValue ).utc();\n\tdateMoment.locale( settings.l10n.locale );\n\treturn format( dateFormat, dateMoment );\n}\n\n/**\n * Check whether a date is considered in the future according to the WordPress settings.\n *\n * @param {string} dateValue Date String or Date object in the Defined WP Timezone.\n *\n * @return {boolean} Is in the future.\n */\nexport function isInTheFuture( dateValue ) {\n\tconst now = momentLib.tz( WP_ZONE );\n\tconst momentObject = momentLib.tz( dateValue, WP_ZONE );\n\n\treturn momentObject.isAfter( now );\n}\n\n/**\n * Create and return a JavaScript Date Object from a date string in the WP timezone.\n *\n * @param {string?} dateString Date formatted in the WP timezone.\n *\n * @return {Date} Date\n */\nexport function getDate( dateString ) {\n\tif ( ! dateString ) {\n\t\treturn momentLib.tz( WP_ZONE ).toDate();\n\t}\n\n\treturn momentLib.tz( dateString, WP_ZONE ).toDate();\n}\n\n/**\n * Creates a moment instance using the given timezone or, if none is provided, using global settings.\n *\n * @param {Moment | Date | string | undefined} dateValue Date object or string, parsable\n *                                                       by moment.js.\n * @param {string | number | undefined}        timezone  Timezone to output result in or a\n *                                                       UTC offset. Defaults to timezone from\n *                                                       site.\n *\n * @see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n * @see https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC\n *\n * @return {Moment} a moment instance.\n */\nfunction buildMoment( dateValue, timezone = '' ) {\n\tconst dateMoment = momentLib( dateValue );\n\n\tif ( timezone && ! isUTCOffset( timezone ) ) {\n\t\t// The ! isUTCOffset() check guarantees that timezone is a string.\n\t\treturn dateMoment.tz( /** @type {string} */ ( timezone ) );\n\t}\n\n\tif ( timezone && isUTCOffset( timezone ) ) {\n\t\treturn dateMoment.utcOffset( timezone );\n\t}\n\n\tif ( settings.timezone.string ) {\n\t\treturn dateMoment.tz( settings.timezone.string );\n\t}\n\n\treturn dateMoment.utcOffset( +settings.timezone.offset );\n}\n\n/**\n * Returns whether a certain UTC offset is valid or not.\n *\n * @param {number|string} offset a UTC offset.\n *\n * @return {boolean} whether a certain UTC offset is valid or not.\n */\nfunction isUTCOffset( offset ) {\n\tif ( 'number' === typeof offset ) {\n\t\treturn true;\n\t}\n\n\treturn VALID_UTC_OFFSET.test( offset );\n}\n\nsetupWPTimezone();\n"]}