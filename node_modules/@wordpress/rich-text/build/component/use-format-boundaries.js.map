{"version":3,"sources":["@wordpress/rich-text/src/component/use-format-boundaries.js"],"names":["EMPTY_ACTIVE_FORMATS","useFormatBoundaries","props","forceRender","propsRef","current","element","onKeyDown","event","keyCode","shiftKey","altKey","metaKey","ctrlKey","LEFT","RIGHT","record","applyRecord","text","formats","start","end","activeFormats","currentActiveFormats","collapsed","ownerDocument","defaultView","direction","getComputedStyle","reverseKey","isReverse","length","formatsBefore","formatsAfter","destination","isIncreasing","every","format","index","newActiveFormatsLength","_newActiveFormats","preventDefault","origin","source","newActiveFormats","slice","newValue","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRef, useReducer } from '@wordpress/element';\nimport { useRefEffect } from '@wordpress/compose';\nimport { LEFT, RIGHT } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport { isCollapsed } from '../is-collapsed';\n\nconst EMPTY_ACTIVE_FORMATS = [];\n\nexport function useFormatBoundaries( props ) {\n\tconst [ , forceRender ] = useReducer( () => ( {} ) );\n\tconst propsRef = useRef( props );\n\tpropsRef.current = props;\n\treturn useRefEffect( ( element ) => {\n\t\tfunction onKeyDown( event ) {\n\t\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\n\t\t\tif (\n\t\t\t\t// Only override left and right keys without modifiers pressed.\n\t\t\t\tshiftKey ||\n\t\t\t\taltKey ||\n\t\t\t\tmetaKey ||\n\t\t\t\tctrlKey ||\n\t\t\t\t( keyCode !== LEFT && keyCode !== RIGHT )\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { record, applyRecord } = propsRef.current;\n\t\t\tconst {\n\t\t\t\ttext,\n\t\t\t\tformats,\n\t\t\t\tstart,\n\t\t\t\tend,\n\t\t\t\tactiveFormats: currentActiveFormats = [],\n\t\t\t} = record.current;\n\t\t\tconst collapsed = isCollapsed( record.current );\n\t\t\tconst { ownerDocument } = element;\n\t\t\tconst { defaultView } = ownerDocument;\n\t\t\t// To do: ideally, we should look at visual position instead.\n\t\t\tconst { direction } = defaultView.getComputedStyle( element );\n\t\t\tconst reverseKey = direction === 'rtl' ? RIGHT : LEFT;\n\t\t\tconst isReverse = event.keyCode === reverseKey;\n\n\t\t\t// If the selection is collapsed and at the very start, do nothing if\n\t\t\t// navigating backward.\n\t\t\t// If the selection is collapsed and at the very end, do nothing if\n\t\t\t// navigating forward.\n\t\t\tif ( collapsed && currentActiveFormats.length === 0 ) {\n\t\t\t\tif ( start === 0 && isReverse ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( end === text.length && ! isReverse ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If the selection is not collapsed, let the browser handle collapsing\n\t\t\t// the selection for now. Later we could expand this logic to set\n\t\t\t// boundary positions if needed.\n\t\t\tif ( ! collapsed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst formatsBefore = formats[ start - 1 ] || EMPTY_ACTIVE_FORMATS;\n\t\t\tconst formatsAfter = formats[ start ] || EMPTY_ACTIVE_FORMATS;\n\t\t\tconst destination = isReverse ? formatsBefore : formatsAfter;\n\t\t\tconst isIncreasing = currentActiveFormats.every(\n\t\t\t\t( format, index ) => format === destination[ index ]\n\t\t\t);\n\n\t\t\tlet newActiveFormatsLength = currentActiveFormats.length;\n\n\t\t\tif ( ! isIncreasing ) {\n\t\t\t\tnewActiveFormatsLength--;\n\t\t\t} else if ( newActiveFormatsLength < destination.length ) {\n\t\t\t\tnewActiveFormatsLength++;\n\t\t\t}\n\n\t\t\tif ( newActiveFormatsLength === currentActiveFormats.length ) {\n\t\t\t\trecord.current._newActiveFormats = destination;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconst origin = isReverse ? formatsAfter : formatsBefore;\n\t\t\tconst source = isIncreasing ? destination : origin;\n\t\t\tconst newActiveFormats = source.slice( 0, newActiveFormatsLength );\n\t\t\tconst newValue = {\n\t\t\t\t...record.current,\n\t\t\t\tactiveFormats: newActiveFormats,\n\t\t\t};\n\t\t\trecord.current = newValue;\n\t\t\tapplyRecord( newValue );\n\t\t\tforceRender();\n\t\t}\n\n\t\telement.addEventListener( 'keydown', onKeyDown );\n\t\treturn () => {\n\t\t\telement.removeEventListener( 'keydown', onKeyDown );\n\t\t};\n\t}, [] );\n}\n"]}