{"version":3,"sources":["@wordpress/rich-text/src/get-format-colors.native.js"],"names":["FORMAT_TYPE","REGEX_TO_MATCH","TAGS_TO_SEARCH","getFormatColors","value","formats","colors","search","newFormats","slice","forEach","format","currentFormat","type","className","attributes","class","style","replace","split","currentClass","match","colorSlug","colorObject","currentStyles","indexOf","color","join"],"mappings":";;;;;;;AAGA;;AAHA;AACA;AACA;AAGA,MAAMA,WAAW,GAAG,iBAApB;AACA,MAAMC,cAAc,GAAG,kBAAvB;AACA,MAAMC,cAAc,GAAG,QAAvB;;AAEO,SAASC,eAAT,CAA0BC,KAA1B,EAAiCC,OAAjC,EAA0CC,MAA1C,EAAmD;AACzD,MAAK,CAAAF,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,MAAP,CAAeL,cAAf,OAAoC,CAAC,CAA1C,EAA8C;AAC7C,UAAMM,UAAU,GAAGH,OAAO,CAACI,KAAR,EAAnB;AAEAD,IAAAA,UAAU,CAACE,OAAX,CAAsBC,MAAF,IAAc;AACjCA,MAAAA,MAAM,CAACD,OAAP,CAAkBE,aAAF,IAAqB;AACpC,YAAK,CAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEC,IAAf,MAAwBb,WAA7B,EAA2C;AAAA;;AAC1C,gBAAMc,SAAS,GAAGF,aAAH,aAAGA,aAAH,gDAAGA,aAAa,CAAEG,UAAlB,0DAAG,sBAA2BC,KAA7C;AACAJ,UAAAA,aAAa,CAACG,UAAd,CAAyBE,KAAzB,GACCL,aAAa,CAACG,UAAd,CAAyBE,KAAzB,CAA+BC,OAA/B,CAAwC,IAAxC,EAA8C,EAA9C,CADD;AAGAJ,UAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEK,KAAX,CAAkB,GAAlB,EAAwBT,OAAxB,CAAmCU,YAAF,IAAoB;AACpD,kBAAMC,KAAK,GAAGD,YAAY,CAACC,KAAb,CAAoBpB,cAApB,CAAd;;AACA,gBAAKoB,KAAL,EAAa;AAAA;;AACZ,oBAAM,GAAIC,SAAJ,IACLF,YAAY,CAACC,KAAb,CAAoBpB,cAApB,CADD;AAEA,oBAAMsB,WAAW,GAAG,kDACnBjB,MADmB,EAEnBgB,SAFmB,CAApB;AAIA,oBAAME,aAAa,GAClBZ,aADkB,aAClBA,aADkB,iDAClBA,aAAa,CAAEG,UADG,2DAClB,uBAA2BE,KAD5B;;AAEA,kBACCM,WAAW,KACT,CAAEC,aAAF,IACD,CAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEC,OAAf,CACCF,WAAW,CAACG,KADb,OAEM,CAAC,CAJG,CADZ,EAME;AACDd,gBAAAA,aAAa,CAACG,UAAd,CAAyBE,KAAzB,GAAiC,CAC/B,UAAUM,WAAW,CAACG,KAAO,EADE,EAEhCF,aAFgC,EAG/BG,IAH+B,CAGzB,GAHyB,CAAjC;AAIA;AACD;AACD,WAxBD;AAyBA;AACD,OAhCD;AAiCA,KAlCD;AAoCA,WAAOnB,UAAP;AACA;;AAED,SAAOH,OAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { getColorObjectByAttributeValues } from '@wordpress/block-editor';\n\nconst FORMAT_TYPE = 'core/text-color';\nconst REGEX_TO_MATCH = /^has-(.*)-color$/;\nconst TAGS_TO_SEARCH = /\\<mark/;\n\nexport function getFormatColors( value, formats, colors ) {\n\tif ( value?.search( TAGS_TO_SEARCH ) !== -1 ) {\n\t\tconst newFormats = formats.slice();\n\n\t\tnewFormats.forEach( ( format ) => {\n\t\t\tformat.forEach( ( currentFormat ) => {\n\t\t\t\tif ( currentFormat?.type === FORMAT_TYPE ) {\n\t\t\t\t\tconst className = currentFormat?.attributes?.class;\n\t\t\t\t\tcurrentFormat.attributes.style =\n\t\t\t\t\t\tcurrentFormat.attributes.style.replace( / /g, '' );\n\n\t\t\t\t\tclassName?.split( ' ' ).forEach( ( currentClass ) => {\n\t\t\t\t\t\tconst match = currentClass.match( REGEX_TO_MATCH );\n\t\t\t\t\t\tif ( match ) {\n\t\t\t\t\t\t\tconst [ , colorSlug ] =\n\t\t\t\t\t\t\t\tcurrentClass.match( REGEX_TO_MATCH );\n\t\t\t\t\t\t\tconst colorObject = getColorObjectByAttributeValues(\n\t\t\t\t\t\t\t\tcolors,\n\t\t\t\t\t\t\t\tcolorSlug\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst currentStyles =\n\t\t\t\t\t\t\t\tcurrentFormat?.attributes?.style;\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tcolorObject &&\n\t\t\t\t\t\t\t\t( ! currentStyles ||\n\t\t\t\t\t\t\t\t\tcurrentStyles?.indexOf(\n\t\t\t\t\t\t\t\t\t\tcolorObject.color\n\t\t\t\t\t\t\t\t\t) === -1 )\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tcurrentFormat.attributes.style = [\n\t\t\t\t\t\t\t\t\t`color: ${ colorObject.color }`,\n\t\t\t\t\t\t\t\t\tcurrentStyles,\n\t\t\t\t\t\t\t\t].join( ';' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\treturn newFormats;\n\t}\n\n\treturn formats;\n}\n"]}