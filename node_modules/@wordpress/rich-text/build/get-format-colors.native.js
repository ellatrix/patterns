"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFormatColors = getFormatColors;

var _blockEditor = require("@wordpress/block-editor");

/**
 * WordPress dependencies
 */
const FORMAT_TYPE = 'core/text-color';
const REGEX_TO_MATCH = /^has-(.*)-color$/;
const TAGS_TO_SEARCH = /\<mark/;

function getFormatColors(value, formats, colors) {
  if ((value === null || value === void 0 ? void 0 : value.search(TAGS_TO_SEARCH)) !== -1) {
    const newFormats = formats.slice();
    newFormats.forEach(format => {
      format.forEach(currentFormat => {
        if ((currentFormat === null || currentFormat === void 0 ? void 0 : currentFormat.type) === FORMAT_TYPE) {
          var _currentFormat$attrib;

          const className = currentFormat === null || currentFormat === void 0 ? void 0 : (_currentFormat$attrib = currentFormat.attributes) === null || _currentFormat$attrib === void 0 ? void 0 : _currentFormat$attrib.class;
          currentFormat.attributes.style = currentFormat.attributes.style.replace(/ /g, '');
          className === null || className === void 0 ? void 0 : className.split(' ').forEach(currentClass => {
            const match = currentClass.match(REGEX_TO_MATCH);

            if (match) {
              var _currentFormat$attrib2;

              const [, colorSlug] = currentClass.match(REGEX_TO_MATCH);
              const colorObject = (0, _blockEditor.getColorObjectByAttributeValues)(colors, colorSlug);
              const currentStyles = currentFormat === null || currentFormat === void 0 ? void 0 : (_currentFormat$attrib2 = currentFormat.attributes) === null || _currentFormat$attrib2 === void 0 ? void 0 : _currentFormat$attrib2.style;

              if (colorObject && (!currentStyles || (currentStyles === null || currentStyles === void 0 ? void 0 : currentStyles.indexOf(colorObject.color)) === -1)) {
                currentFormat.attributes.style = [`color: ${colorObject.color}`, currentStyles].join(';');
              }
            }
          });
        }
      });
    });
    return newFormats;
  }

  return formats;
}
//# sourceMappingURL=get-format-colors.native.js.map