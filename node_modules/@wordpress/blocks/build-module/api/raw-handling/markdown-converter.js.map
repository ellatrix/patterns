{"version":3,"sources":["@wordpress/blocks/src/api/raw-handling/markdown-converter.js"],"names":["showdown","converter","Converter","noHeaderId","tables","literalMidWordUnderscores","omitExtraWLInCodeBlocks","simpleLineBreaks","strikethrough","slackMarkdownVariantCorrector","text","replace","match","p1","p2","p3","bulletsToAsterisks","markdownConverter","makeHtml"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,QAAP,MAAqB,UAArB,C,CAEA;;AACA,MAAMC,SAAS,GAAG,IAAID,QAAQ,CAACE,SAAb,CAAwB;AACzCC,EAAAA,UAAU,EAAE,IAD6B;AAEzCC,EAAAA,MAAM,EAAE,IAFiC;AAGzCC,EAAAA,yBAAyB,EAAE,IAHc;AAIzCC,EAAAA,uBAAuB,EAAE,IAJgB;AAKzCC,EAAAA,gBAAgB,EAAE,IALuB;AAMzCC,EAAAA,aAAa,EAAE;AAN0B,CAAxB,CAAlB;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,6BAAT,CAAwCC,IAAxC,EAA+C;AAC9C,SAAOA,IAAI,CAACC,OAAL,CACN,qCADM,EAEN,CAAEC,KAAF,EAASC,EAAT,EAAaC,EAAb,EAAiBC,EAAjB,KAA0B,GAAGF,EAAI,KAAKC,EAAI,KAAKC,EAAI,EAF7C,CAAP;AAIA;;AAED,SAASC,kBAAT,CAA6BN,IAA7B,EAAoC;AACnC,SAAOA,IAAI,CAACC,OAAL,CAAc,cAAd,EAA8B,OAA9B,CAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASM,iBAAT,CAA4BP,IAA5B,EAAmC;AACjD,SAAOT,SAAS,CAACiB,QAAV,CACNT,6BAA6B,CAAEO,kBAAkB,CAAEN,IAAF,CAApB,CADvB,CAAP;AAGA","sourcesContent":["/**\n * External dependencies\n */\nimport showdown from 'showdown';\n\n// Reuse the same showdown converter.\nconst converter = new showdown.Converter( {\n\tnoHeaderId: true,\n\ttables: true,\n\tliteralMidWordUnderscores: true,\n\tomitExtraWLInCodeBlocks: true,\n\tsimpleLineBreaks: true,\n\tstrikethrough: true,\n} );\n\n/**\n * Corrects the Slack Markdown variant of the code block.\n * If uncorrected, it will be converted to inline code.\n *\n * @see https://get.slack.help/hc/en-us/articles/202288908-how-can-i-add-formatting-to-my-messages-#code-blocks\n *\n * @param {string} text The potential Markdown text to correct.\n *\n * @return {string} The corrected Markdown.\n */\nfunction slackMarkdownVariantCorrector( text ) {\n\treturn text.replace(\n\t\t/((?:^|\\n)```)([^\\n`]+)(```(?:$|\\n))/,\n\t\t( match, p1, p2, p3 ) => `${ p1 }\\n${ p2 }\\n${ p3 }`\n\t);\n}\n\nfunction bulletsToAsterisks( text ) {\n\treturn text.replace( /(^|\\n)â€¢( +)/g, '$1*$2' );\n}\n\n/**\n * Converts a piece of text into HTML based on any Markdown present.\n * Also decodes any encoded HTML.\n *\n * @param {string} text The plain text to convert.\n *\n * @return {string} HTML.\n */\nexport default function markdownConverter( text ) {\n\treturn converter.makeHtml(\n\t\tslackMarkdownVariantCorrector( bulletsToAsterisks( text ) )\n\t);\n}\n"]}