{"version":3,"sources":["@wordpress/blocks/src/store/private-selectors.js"],"names":["createSelector","get","getBlockType","__EXPERIMENTAL_STYLE_PROPERTY","STYLE_PROPERTY","ROOT_BLOCK_SUPPORTS","filterElementBlockSupports","blockSupports","name","element","filter","support","includes","getSupportedStyles","state","blockType","supportKeys","supports","spacing","blockGap","__experimentalSkipSerialization","some","spacingType","push","shadow","Object","keys","forEach","styleName","requiresOptOut","blockTypes"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport createSelector from 'rememo';\nimport { get } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { getBlockType } from './selectors';\nimport { __EXPERIMENTAL_STYLE_PROPERTY as STYLE_PROPERTY } from '../api/constants';\n\nconst ROOT_BLOCK_SUPPORTS = [\n\t'background',\n\t'backgroundColor',\n\t'color',\n\t'linkColor',\n\t'buttonColor',\n\t'fontFamily',\n\t'fontSize',\n\t'fontStyle',\n\t'fontWeight',\n\t'lineHeight',\n\t'padding',\n\t'contentSize',\n\t'wideSize',\n\t'blockGap',\n\t'textDecoration',\n\t'textTransform',\n\t'letterSpacing',\n];\n\n/**\n * Filters the list of supported styles for a given element.\n *\n * @param {string[]}         blockSupports list of supported styles.\n * @param {string|undefined} name          block name.\n * @param {string|undefined} element       element name.\n *\n * @return {string[]} filtered list of supported styles.\n */\nfunction filterElementBlockSupports( blockSupports, name, element ) {\n\treturn blockSupports.filter( ( support ) => {\n\t\tif ( support === 'fontSize' && element === 'heading' ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// This is only available for links\n\t\tif ( support === 'textDecoration' && ! name && element !== 'link' ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// This is only available for heading\n\t\tif (\n\t\t\tsupport === 'textTransform' &&\n\t\t\t! name &&\n\t\t\t! [ 'heading', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6' ].includes(\n\t\t\t\telement\n\t\t\t)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// This is only available for headings\n\t\tif (\n\t\t\tsupport === 'letterSpacing' &&\n\t\t\t! name &&\n\t\t\t! [ 'heading', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6' ].includes(\n\t\t\t\telement\n\t\t\t)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} );\n}\n\n/**\n * Returns the list of supported styles for a given block name and element.\n */\nexport const getSupportedStyles = createSelector(\n\t( state, name, element ) => {\n\t\tif ( ! name ) {\n\t\t\treturn filterElementBlockSupports(\n\t\t\t\tROOT_BLOCK_SUPPORTS,\n\t\t\t\tname,\n\t\t\t\telement\n\t\t\t);\n\t\t}\n\n\t\tconst blockType = getBlockType( state, name );\n\n\t\tif ( ! blockType ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst supportKeys = [];\n\n\t\t// Check for blockGap support.\n\t\t// Block spacing support doesn't map directly to a single style property, so needs to be handled separately.\n\t\t// Also, only allow `blockGap` support if serialization has not been skipped, to be sure global spacing can be applied.\n\t\tif (\n\t\t\tblockType?.supports?.spacing?.blockGap &&\n\t\t\tblockType?.supports?.spacing?.__experimentalSkipSerialization !==\n\t\t\t\ttrue &&\n\t\t\t! blockType?.supports?.spacing?.__experimentalSkipSerialization?.some?.(\n\t\t\t\t( spacingType ) => spacingType === 'blockGap'\n\t\t\t)\n\t\t) {\n\t\t\tsupportKeys.push( 'blockGap' );\n\t\t}\n\n\t\t// check for shadow support\n\t\tif ( blockType?.supports?.shadow ) {\n\t\t\tsupportKeys.push( 'shadow' );\n\t\t}\n\n\t\tObject.keys( STYLE_PROPERTY ).forEach( ( styleName ) => {\n\t\t\tif ( ! STYLE_PROPERTY[ styleName ].support ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Opting out means that, for certain support keys like background color,\n\t\t\t// blocks have to explicitly set the support value false. If the key is\n\t\t\t// unset, we still enable it.\n\t\t\tif ( STYLE_PROPERTY[ styleName ].requiresOptOut ) {\n\t\t\t\tif (\n\t\t\t\t\tSTYLE_PROPERTY[ styleName ].support[ 0 ] in\n\t\t\t\t\t\tblockType.supports &&\n\t\t\t\t\tget(\n\t\t\t\t\t\tblockType.supports,\n\t\t\t\t\t\tSTYLE_PROPERTY[ styleName ].support\n\t\t\t\t\t) !== false\n\t\t\t\t) {\n\t\t\t\t\tsupportKeys.push( styleName );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tget(\n\t\t\t\t\tblockType.supports,\n\t\t\t\t\tSTYLE_PROPERTY[ styleName ].support,\n\t\t\t\t\tfalse\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tsupportKeys.push( styleName );\n\t\t\t}\n\t\t} );\n\n\t\treturn filterElementBlockSupports( supportKeys, name, element );\n\t},\n\t( state, name ) => [ state.blockTypes[ name ] ]\n);\n"]}