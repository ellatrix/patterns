{"version":3,"sources":["@wordpress/viewport/src/if-viewport-matches.js"],"names":["ifCondition","compose","createHigherOrderComponent","withViewportMatch","ifViewportMatches","query","isViewportMatch","props"],"mappings":"AAAA;AACA;AACA;AACA,SACCA,WADD,EAECC,OAFD,EAGCC,0BAHD,QAIO,oBAJP;AAMA;AACA;AACA;;AACA,OAAOC,iBAAP,MAA8B,uBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,iBAAiB,GAAKC,KAAF,IACzBH,0BAA0B,CACzBD,OAAO,CAAE,CACRE,iBAAiB,CAAE;AAClBG,EAAAA,eAAe,EAAED;AADC,CAAF,CADT,EAIRL,WAAW,CAAIO,KAAF,IAAaA,KAAK,CAACD,eAArB,CAJH,CAAF,CADkB,EAOzB,mBAPyB,CAD3B;;AAWA,eAAeF,iBAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\tifCondition,\n\tcompose,\n\tcreateHigherOrderComponent,\n} from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport withViewportMatch from './with-viewport-match';\n\n/**\n * Higher-order component creator, creating a new component which renders if\n * the viewport query is satisfied.\n *\n * @see withViewportMatches\n *\n * @param {string} query Viewport query.\n *\n * @example\n *\n * ```jsx\n * function MyMobileComponent() {\n * \treturn <div>I'm only rendered on mobile viewports!</div>;\n * }\n *\n * MyMobileComponent = ifViewportMatches( '< small' )( MyMobileComponent );\n * ```\n *\n * @return {Function} Higher-order component.\n */\nconst ifViewportMatches = ( query ) =>\n\tcreateHigherOrderComponent(\n\t\tcompose( [\n\t\t\twithViewportMatch( {\n\t\t\t\tisViewportMatch: query,\n\t\t\t} ),\n\t\t\tifCondition( ( props ) => props.isViewportMatch ),\n\t\t] ),\n\t\t'ifViewportMatches'\n\t);\n\nexport default ifViewportMatches;\n"]}