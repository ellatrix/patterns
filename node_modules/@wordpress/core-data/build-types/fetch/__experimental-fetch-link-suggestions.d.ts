export default fetchLinkSuggestions;
/**
 * Filters the search by type
 */
export type WPLinkSearchType = 'attachment' | 'post' | 'term' | 'post-format';
/**
 * A link with an id may be of kind post-type or taxonomy
 */
export type WPKind = 'post-type' | 'taxonomy';
export type WPLinkSearchOptions = {
    /**
     * Displays initial search suggestions, when true.
     */
    isInitialSuggestions?: boolean | undefined;
    /**
     * Filters by search type.
     */
    type?: WPLinkSearchType | undefined;
    /**
     * Slug of the post-type or taxonomy.
     */
    subtype?: string | undefined;
    /**
     * Which page of results to return.
     */
    page?: number | undefined;
    /**
     * Search results per page.
     */
    perPage?: number | undefined;
};
export type WPLinkSearchResult = {
    /**
     * Post or term id.
     */
    id: number;
    /**
     * Link url.
     */
    url: string;
    /**
     * Title of the link.
     */
    title: string;
    /**
     * The taxonomy or post type slug or type URL.
     */
    type: string;
    /**
     * Link kind of post-type or taxonomy
     */
    kind?: WPKind | undefined;
};
export type WPLinkSearchResultAugments = {
    /**
     * Contains kind information.
     */
    meta?: {
        kind: WPKind;
    } | undefined;
    /**
     * Optional subtype if it exists.
     */
    subtype?: WPKind | undefined;
};
export type WPLinkSearchResultAugmented = WPLinkSearchResult & WPLinkSearchResultAugments;
export type WPEditorSettings = {
    /**
     * Disables post formats, when true.
     */
    disablePostFormats?: boolean | undefined;
};
/**
 * Filters the search by type
 *
 * @typedef { 'attachment' | 'post' | 'term' | 'post-format' } WPLinkSearchType
 */
/**
 * A link with an id may be of kind post-type or taxonomy
 *
 * @typedef { 'post-type' | 'taxonomy' } WPKind
 */
/**
 * @typedef WPLinkSearchOptions
 *
 * @property {boolean}          [isInitialSuggestions] Displays initial search suggestions, when true.
 * @property {WPLinkSearchType} [type]                 Filters by search type.
 * @property {string}           [subtype]              Slug of the post-type or taxonomy.
 * @property {number}           [page]                 Which page of results to return.
 * @property {number}           [perPage]              Search results per page.
 */
/**
 * @typedef WPLinkSearchResult
 *
 * @property {number} id     Post or term id.
 * @property {string} url    Link url.
 * @property {string} title  Title of the link.
 * @property {string} type   The taxonomy or post type slug or type URL.
 * @property {WPKind} [kind] Link kind of post-type or taxonomy
 */
/**
 * @typedef WPLinkSearchResultAugments
 *
 * @property {{kind: WPKind}} [meta]    Contains kind information.
 * @property {WPKind}         [subtype] Optional subtype if it exists.
 */
/**
 * @typedef {WPLinkSearchResult & WPLinkSearchResultAugments} WPLinkSearchResultAugmented
 */
/**
 * @typedef WPEditorSettings
 *
 * @property {boolean} [ disablePostFormats ] Disables post formats, when true.
 */
/**
 * Fetches link suggestions from the API.
 *
 * @async
 * @param {string}              search
 * @param {WPLinkSearchOptions} [searchOptions]
 * @param {WPEditorSettings}    [settings]
 *
 * @example
 * ```js
 * import { __experimentalFetchLinkSuggestions as fetchLinkSuggestions } from '@wordpress/core-data';
 *
 * //...
 *
 * export function initialize( id, settings ) {
 *
 * settings.__experimentalFetchLinkSuggestions = (
 *     search,
 *     searchOptions
 * ) => fetchLinkSuggestions( search, searchOptions, settings );
 * ```
 * @return {Promise< WPLinkSearchResult[] >} List of search suggestions
 */
declare function fetchLinkSuggestions(search: string, searchOptions?: WPLinkSearchOptions | undefined, settings?: WPEditorSettings | undefined): Promise<WPLinkSearchResult[]>;
//# sourceMappingURL=__experimental-fetch-link-suggestions.d.ts.map